{"version":3,"file":"c4411e1822d5c8f933ffce6bf00fd5a4f65e2a29-b7c3245a90843c6c6649.js","mappings":"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","sources":["webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+commands@6.7.0/node_modules/@codemirror/commands/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/crelt@1.0.6/node_modules/crelt/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+search@6.5.6/node_modules/@codemirror/search/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+lint@6.8.2/node_modules/@codemirror/lint/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+codemirror-extensions-basic-setup@4.23.5_@codemirror+autocomplete@6.18.1_@codemirror+lan_jyiuymktw5ubsepmokz432gtuq/node_modules/@uiw/codemirror-extensions-basic-setup/esm/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+theme-one-dark@6.1.2/node_modules/@codemirror/theme-one-dark/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+react-codemirror@4.23.5_@babel+runtime@7.25.7_@codemirror+autocomplete@6.18.1_@codemirro_sdebsrrjubtrxv3i7svusymvsq/node_modules/@uiw/react-codemirror/esm/theme/light.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+react-codemirror@4.23.5_@babel+runtime@7.25.7_@codemirror+autocomplete@6.18.1_@codemirro_sdebsrrjubtrxv3i7svusymvsq/node_modules/@uiw/react-codemirror/esm/useCodeMirror.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+react-codemirror@4.23.5_@babel+runtime@7.25.7_@codemirror+autocomplete@6.18.1_@codemirro_sdebsrrjubtrxv3i7svusymvsq/node_modules/@uiw/react-codemirror/esm/utils.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+react-codemirror@4.23.5_@babel+runtime@7.25.7_@codemirror+autocomplete@6.18.1_@codemirro_sdebsrrjubtrxv3i7svusymvsq/node_modules/@uiw/react-codemirror/esm/getDefaultExtensions.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+react-codemirror@4.23.5_@babel+runtime@7.25.7_@codemirror+autocomplete@6.18.1_@codemirro_sdebsrrjubtrxv3i7svusymvsq/node_modules/@uiw/react-codemirror/esm/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/gatsby-plugin-anchor-links@1.2.1/node_modules/gatsby-plugin-anchor-links/components/AnchorLink.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/gatsby-plugin-anchor-links@1.2.1/node_modules/gatsby-plugin-anchor-links/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@uiw+codemirror-themes@4.23.5_@codemirror+language@6.10.3_@codemirror+state@6.4.1_@codemirror+view@6.34.1/node_modules/@uiw/codemirror-themes/esm/index.js","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/theme.ts","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/components/FileStructureDisplay/FileStructureDisplay.module.scss","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/components/FileStructureDisplay/FileStructureDisplay.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/CodeRenderer.module.scss","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+python@1.1.14/node_modules/@lezer/python/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+lang-python@6.1.6_@codemirror+view@6.34.1/node_modules/@codemirror/lang-python/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+html@1.3.10/node_modules/@lezer/html/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+css@1.1.9/node_modules/@lezer/css/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+lang-css@6.3.0_@codemirror+view@6.34.1/node_modules/@codemirror/lang-css/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+lang-html@6.4.9/node_modules/@codemirror/lang-html/dist/index.js","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/TableOfContents/index.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/TableOfContents/TableOfContent.module.scss","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/Video.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/index.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/LinkRenderer/LinkRenderer.module.scss","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/LinkRenderer/index.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/HeaderRenderer/HeaderRenderer.module.scss","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/HeaderRenderer/index.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/MarkdownRenderer.tsx","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/MarkdownRenderer.module.scss","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/H1Renderer/index.tsx","webpack://learn.ryqn.dev/./node_modules/.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/style-to-object@1.0.8/node_modules/style-to-object/cjs/index.js","webpack://learn.ryqn.dev/./src/components/MarkdownRenderer/CodeRenderer/components/FileStructureDisplay/expand.svg","webpack://learn.ryqn.dev/./node_modules/.pnpm/@babel+runtime@7.25.7/node_modules/@babel/runtime/helpers/extends.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@babel+runtime@7.25.7/node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+autocomplete@6.18.1_@codemirror+language@6.10.3_@codemirror+state@6.4.1_@codemirr_syyhypxsvrjtlnem3fb6ql5p7a/node_modules/@codemirror/autocomplete/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+javascript@1.4.18/node_modules/@lezer/javascript/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+lang-javascript@6.2.2/node_modules/@codemirror/lang-javascript/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+language@6.10.3/node_modules/@codemirror/language/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@codemirror+state@6.4.1/node_modules/@codemirror/state/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+common@1.2.2/node_modules/@lezer/common/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+highlight@1.2.1/node_modules/@lezer/highlight/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@lezer+lr@1.4.2/node_modules/@lezer/lr/dist/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/default.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-factory-space@2.0.0/node_modules/micromark-factory-space/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-character@2.1.0/node_modules/micromark-util-character/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-chunked@2.0.0/node_modules/micromark-util-chunked/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-classify-character@2.0.0/node_modules/micromark-util-classify-character/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-combine-extensions@2.0.0/node_modules/micromark-util-combine-extensions/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-normalize-identifier@2.0.0/node_modules/micromark-util-normalize-identifier/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-resolve-all@2.0.0/node_modules/micromark-util-resolve-all/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/schema.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/merge.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/normalize.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/info.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/types.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/defined-info.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/create.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xlink.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xml.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/xmlns.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/aria.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/html.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/svg.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/find.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/property-information@6.5.0/node_modules/property-information/lib/hast-to-react.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/style-to-object@1.0.8/node_modules/style-to-object/esm/index.mjs","webpack://learn.ryqn.dev/./node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile-message@4.0.2/node_modules/vfile-message/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.0/node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/html-url-attributes@3.0.1/node_modules/html-url-attributes/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-subtokenize@2.0.1/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-subtokenize@2.0.1/node_modules/micromark-util-subtokenize/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/content.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/document.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/content.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/flow.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/initialize/text.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/create-tokenizer.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/list.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-factory-destination@2.0.0/node_modules/micromark-factory-destination/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-factory-label@2.0.0/node_modules/micromark-factory-label/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-factory-title@2.0.0/node_modules/micromark-factory-title/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-factory-whitespace@2.0.0/node_modules/micromark-factory-whitespace/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/definition.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-html-tag-name@2.0.0/node_modules/micromark-util-html-tag-name/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/decode-named-character-reference@1.0.2/node_modules/decode-named-character-reference/index.dom.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/attention.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-core-commonmark@2.0.1/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/constructs.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/preprocess.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.1/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-decode-string@2.0.0/node_modules/micromark-util-decode-string/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-from-markdown@2.0.1/node_modules/mdast-util-from-markdown/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/postprocess.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark@4.0.0/node_modules/micromark/lib/parse.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/types.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/serialize.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/@ungap+structured-clone@1.2.0/node_modules/@ungap/structured-clone/esm/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-util-sanitize-uri@2.0.0/node_modules/micromark-util-sanitize-uri/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/footer.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/revert.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/remark-rehype@11.1.1/node_modules/remark-rehype/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/react-markdown@9.0.1_@types+react@18.3.11_react@18.3.1/node_modules/react-markdown/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-find-and-replace@3.0.1/node_modules/mdast-util-find-and-replace/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm-footnote@2.0.0/node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/markdown-table@3.0.3/node_modules/markdown-table/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-to-markdown@2.1.0/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.0/node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/remark-gfm@4.0.0/node_modules/remark-gfm/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/mdast-util-gfm@3.0.0/node_modules/mdast-util-gfm/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/style-mod@4.1.2/node_modules/style-mod/src/style-mod.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","webpack://learn.ryqn.dev/./node_modules/.pnpm/w3c-keyname@2.2.8/node_modules/w3c-keyname/index.js"],"sourcesContent":["import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr, fromHist.selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(StateEffect.mapEffects(event.effects, lastEvent.changes), lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, onlySelection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1], selection = event.selectionsAfter[0] || state.selection;\n        if (onlySelection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch), selection }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest, selection }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection, true))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction byCharLogical(state, range, forward) {\n    let pos = range.head, line = state.doc.lineAt(pos);\n    if (pos == (forward ? line.to : line.from))\n        pos = forward ? Math.min(state.doc.length, line.to + 1) : Math.max(0, line.from - 1);\n    else\n        pos = line.from + findClusterBreak(line.text, pos - line.from, forward);\n    return EditorSelection.cursor(pos, forward ? -1 : 1);\n}\nfunction moveByCharLogical(target, forward) {\n    return moveSel(target, range => range.empty ? byCharLogical(target.state, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character forward, in logical\n(non-text-direction-aware) string index order.\n*/\nconst cursorCharForwardLogical = target => moveByCharLogical(target, true);\n/**\nMove the selection one character backward, in logical string index\norder.\n*/\nconst cursorCharBackwardLogical = target => moveByCharLogical(target, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(target, how) {\n    let selection = updateSel(target.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(target.state.selection))\n        return false;\n    target.dispatch(setSel(target.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\n/**\nMove the selection head one character forward by logical\n(non-direction aware) string index order.\n*/\nconst selectCharForwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, true));\n/**\nMove the selection head one character backward by logical string\nindex order.\n*/\nconst selectCharBackwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, false));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        let tree = syntaxTree(state), stack = tree.resolveStack(range.from, 1);\n        if (range.empty) {\n            let stackBefore = tree.resolveStack(range.from, -1);\n            if (stackBefore.node.from >= stack.node.from && stackBefore.node.to <= stack.node.to)\n                stack = stackBefore;\n        }\n        for (let cur = stack; cur; cur = cur.next) {\n            let { node } = cur;\n            if (((node.from < range.from && node.to >= range.to) ||\n                (node.to > range.to && node.from <= range.from)) &&\n                cur.next)\n                return EditorSelection.range(node.to, node.from);\n        }\n        return range;\n    });\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(range);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from, from < range.head ? -1 : 1) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward, byIndentUnit) => deleteBy(target, range => {\n    let pos = range.from, { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (byIndentUnit && !forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n        else if (!forward && /[\\ufe00-\\ufe0f]/.test(line.text.slice(targetPos - line.from, pos - line.from)))\n            targetPos = findClusterBreak(line.text, targetPos - line.from, false, false) + line.from;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character or\nindentation unit before the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false, true);\n/**\nDelete the selection or the character before the cursor. Does not\nimplement any extended behavior like deleting whole indentation\nunits in one go.\n*/\nconst deleteCharBackwardStrict = view => deleteByChar(view, false, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (target, forward) => deleteBy(target, range => {\n    let pos = range.head, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == range.head && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != range.head)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, range => {\n    let lineEnd = view.lineBlockAt(range.head).to;\n    return range.head < lineEnd ? lineEnd : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, range => {\n    let lineStart = view.lineBlockAt(range.head).from;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line or the next line wrap before the cursor.\n*/\nconst deleteLineBoundaryBackward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, false).head;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line or the next line wrap after the cursor.\n*/\nconst deleteLineBoundaryForward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, true).head;\n    return range.head < lineStart ? lineStart : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => {\n        let dist = undefined;\n        if (view.lineWrapping) {\n            let block = view.lineBlockAt(range.head), pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (pos)\n                dist = (block.bottom + view.documentTop) - pos.bottom + view.defaultLineHeight / 2;\n        }\n        return view.moveVertically(range, true, dist);\n    }).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nReplace the selection with a newline and the same amount of\nindentation as the line above.\n*/\nconst insertNewlineKeepIndent = ({ state, dispatch }) => {\n    dispatch(state.update(state.changeByRange(range => {\n        let indent = /^\\s*/.exec(state.doc.lineAt(range.from).text)[0];\n        return {\n            changes: { from: range.from, to: range.to, insert: state.lineBreak + indent },\n            range: EditorSelection.cursor(range.from + indent.length + 1)\n        };\n    }), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nEnables or disables\n[tab-focus mode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode). While on, this\nprevents the editor's key bindings from capturing Tab or\nShift-Tab, making it possible for the user to move focus out of\nthe editor with the keyboard.\n*/\nconst toggleTabFocusMode = view => {\n    view.setTabFocusMode();\n    return true;\n};\n/**\nTemporarily enables [tab-focus\nmode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode) for two seconds or until\nanother key is pressed.\n*/\nconst temporarilySetTabFocusMode = view => {\n    view.setTabFocusMode(2000);\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter and Shift-Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryBackward).\n - Cmd-Delete (macOS): [`deleteLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryForward).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent, shift: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteLineBoundaryBackward },\n    { mac: \"Mod-Delete\", run: deleteLineBoundaryForward }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n- Ctrl-m (Alt-Shift-m on macOS): [`toggleTabFocusMode`](https://codemirror.net/6/docs/ref/#commands.toggleTabFocusMode).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment },\n    { key: \"Ctrl-m\", mac: \"Shift-Alt-m\", run: toggleTabFocusMode },\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharBackwardLogical, cursorCharForward, cursorCharForwardLogical, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharBackwardStrict, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteLineBoundaryBackward, deleteLineBoundaryForward, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertNewlineKeepIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharBackwardLogical, selectCharForward, selectCharForwardLogical, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, temporarilySetTabFocusMode, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, toggleTabFocusMode, transposeChars, undo, undoDepth, undoSelection };\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos, this.bufferPos + this.bufferStart);\n                if (i == norm.length - 1) {\n                    if (match) {\n                        this.value = match;\n                        return this;\n                    }\n                    break;\n                }\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos, end) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: end };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: end };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferStart))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let line = String(view.state.doc.lineAt(view.state.selection.main.head).number);\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\", value: line });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        let selection = EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length)));\n        view.dispatch({\n            effects: [dialogEffect.of(false), EditorView.scrollIntoView(selection.from, { y: 'center' })],\n            selection,\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").select();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to) &&\n                    insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to);\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done)\n            cursor = stringCursor(this.spec, state, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* FindPrev.ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace).replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = EditorSelection.single(next.from - off, next.to - off);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes, selection, effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Mod-Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Mod-Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"×\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.low(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity + (d.markClass ? \" \" + d.markClass : \"\") },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => severityWeight(max) < severityWeight(d.severity) ? d.severity : max, \"hint\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size)\n        for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next())\n            f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n","import { lineNumbers, highlightActiveLineGutter, highlightSpecialChars, drawSelection, dropCursor, rectangularSelection, crosshairCursor, highlightActiveLine, keymap } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nimport { history, defaultKeymap, historyKeymap } from '@codemirror/commands';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { foldGutter, indentOnInput, syntaxHighlighting, defaultHighlightStyle, bracketMatching, indentUnit, foldKeymap } from '@codemirror/language';\nimport { lintKeymap } from '@codemirror/lint';\n/**\nThis is an extension value that just pulls together a number of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of separate packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis extension does not allow customization. The idea is that,\nonce you decide you want to configure your editor more precisely,\nyou take this package's source (which is just a bunch of imports\nand an array literal), copy it into your own code, and adjust it\nas desired.\n*/\nexport var basicSetup = function basicSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var {\n    crosshairCursor: initCrosshairCursor = false\n  } = options;\n  var keymaps = [];\n  if (options.closeBracketsKeymap !== false) {\n    keymaps = keymaps.concat(closeBracketsKeymap);\n  }\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.searchKeymap !== false) {\n    keymaps = keymaps.concat(searchKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  if (options.foldKeymap !== false) {\n    keymaps = keymaps.concat(foldKeymap);\n  }\n  if (options.completionKeymap !== false) {\n    keymaps = keymaps.concat(completionKeymap);\n  }\n  if (options.lintKeymap !== false) {\n    keymaps = keymaps.concat(lintKeymap);\n  }\n  var extensions = [];\n  if (options.lineNumbers !== false) extensions.push(lineNumbers());\n  if (options.highlightActiveLineGutter !== false) extensions.push(highlightActiveLineGutter());\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.foldGutter !== false) extensions.push(foldGutter());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.dropCursor !== false) extensions.push(dropCursor());\n  if (options.allowMultipleSelections !== false) extensions.push(EditorState.allowMultipleSelections.of(true));\n  if (options.indentOnInput !== false) extensions.push(indentOnInput());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  if (options.bracketMatching !== false) extensions.push(bracketMatching());\n  if (options.closeBrackets !== false) extensions.push(closeBrackets());\n  if (options.autocompletion !== false) extensions.push(autocompletion());\n  if (options.rectangularSelection !== false) extensions.push(rectangularSelection());\n  if (initCrosshairCursor !== false) extensions.push(crosshairCursor());\n  if (options.highlightActiveLine !== false) extensions.push(highlightActiveLine());\n  if (options.highlightSelectionMatches !== false) extensions.push(highlightSelectionMatches());\n  if (options.tabSize && typeof options.tabSize === 'number') extensions.push(indentUnit.of(' '.repeat(options.tabSize)));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nexport var minimalSetup = function minimalSetup(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var keymaps = [];\n  if (options.defaultKeymap !== false) {\n    keymaps = keymaps.concat(defaultKeymap);\n  }\n  if (options.historyKeymap !== false) {\n    keymaps = keymaps.concat(historyKeymap);\n  }\n  var extensions = [];\n  if (options.highlightSpecialChars !== false) extensions.push(highlightSpecialChars());\n  if (options.history !== false) extensions.push(history());\n  if (options.drawSelection !== false) extensions.push(drawSelection());\n  if (options.syntaxHighlighting !== false) extensions.push(syntaxHighlighting(defaultHighlightStyle, {\n    fallback: true\n  }));\n  return extensions.concat([keymap.of(keymaps.flat())]).filter(Boolean);\n};","import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { tags } from '@lezer/highlight';\n\n// Using https://github.com/one-dark/vscode-one-dark-theme/ as reference for the colors\nconst chalky = \"#e5c07b\", coral = \"#e06c75\", cyan = \"#56b6c2\", invalid = \"#ffffff\", ivory = \"#abb2bf\", stone = \"#7d8799\", // Brightened compared to original to increase contrast\nmalibu = \"#61afef\", sage = \"#98c379\", whiskey = \"#d19a66\", violet = \"#c678dd\", darkBackground = \"#21252b\", highlightBackground = \"#2c313a\", background = \"#282c34\", tooltipBackground = \"#353a42\", selection = \"#3E4451\", cursor = \"#528bff\";\n/**\nThe colors used in the theme, as CSS color strings.\n*/\nconst color = {\n    chalky,\n    coral,\n    cyan,\n    invalid,\n    ivory,\n    stone,\n    malibu,\n    sage,\n    whiskey,\n    violet,\n    darkBackground,\n    highlightBackground,\n    background,\n    tooltipBackground,\n    selection,\n    cursor\n};\n/**\nThe editor theme styles for One Dark.\n*/\nconst oneDarkTheme = /*@__PURE__*/EditorView.theme({\n    \"&\": {\n        color: ivory,\n        backgroundColor: background\n    },\n    \".cm-content\": {\n        caretColor: cursor\n    },\n    \".cm-cursor, .cm-dropCursor\": { borderLeftColor: cursor },\n    \"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": { backgroundColor: selection },\n    \".cm-panels\": { backgroundColor: darkBackground, color: ivory },\n    \".cm-panels.cm-panels-top\": { borderBottom: \"2px solid black\" },\n    \".cm-panels.cm-panels-bottom\": { borderTop: \"2px solid black\" },\n    \".cm-searchMatch\": {\n        backgroundColor: \"#72a1ff59\",\n        outline: \"1px solid #457dff\"\n    },\n    \".cm-searchMatch.cm-searchMatch-selected\": {\n        backgroundColor: \"#6199ff2f\"\n    },\n    \".cm-activeLine\": { backgroundColor: \"#6699ff0b\" },\n    \".cm-selectionMatch\": { backgroundColor: \"#aafe661a\" },\n    \"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\": {\n        backgroundColor: \"#bad0f847\"\n    },\n    \".cm-gutters\": {\n        backgroundColor: background,\n        color: stone,\n        border: \"none\"\n    },\n    \".cm-activeLineGutter\": {\n        backgroundColor: highlightBackground\n    },\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"#ddd\"\n    },\n    \".cm-tooltip\": {\n        border: \"none\",\n        backgroundColor: tooltipBackground\n    },\n    \".cm-tooltip .cm-tooltip-arrow:before\": {\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\"\n    },\n    \".cm-tooltip .cm-tooltip-arrow:after\": {\n        borderTopColor: tooltipBackground,\n        borderBottomColor: tooltipBackground\n    },\n    \".cm-tooltip-autocomplete\": {\n        \"& > ul > li[aria-selected]\": {\n            backgroundColor: highlightBackground,\n            color: ivory\n        }\n    }\n}, { dark: true });\n/**\nThe highlighting style for code in the One Dark theme.\n*/\nconst oneDarkHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.keyword,\n        color: violet },\n    { tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],\n        color: coral },\n    { tag: [/*@__PURE__*/tags.function(tags.variableName), tags.labelName],\n        color: malibu },\n    { tag: [tags.color, /*@__PURE__*/tags.constant(tags.name), /*@__PURE__*/tags.standard(tags.name)],\n        color: whiskey },\n    { tag: [/*@__PURE__*/tags.definition(tags.name), tags.separator],\n        color: ivory },\n    { tag: [tags.typeName, tags.className, tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],\n        color: chalky },\n    { tag: [tags.operator, tags.operatorKeyword, tags.url, tags.escape, tags.regexp, tags.link, /*@__PURE__*/tags.special(tags.string)],\n        color: cyan },\n    { tag: [tags.meta, tags.comment],\n        color: stone },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.link,\n        color: stone,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        fontWeight: \"bold\",\n        color: coral },\n    { tag: [tags.atom, tags.bool, /*@__PURE__*/tags.special(tags.variableName)],\n        color: whiskey },\n    { tag: [tags.processingInstruction, tags.string, tags.inserted],\n        color: sage },\n    { tag: tags.invalid,\n        color: invalid },\n]);\n/**\nExtension to enable the One Dark theme (both the editor theme and\nthe highlight style).\n*/\nconst oneDark = [oneDarkTheme, /*@__PURE__*/syntaxHighlighting(oneDarkHighlightStyle)];\n\nexport { color, oneDark, oneDarkHighlightStyle, oneDarkTheme };\n","import { EditorView } from '@codemirror/view';\nexport var defaultLightThemeOption = EditorView.theme({\n  '&': {\n    backgroundColor: '#fff'\n  }\n}, {\n  dark: false\n});","import { useEffect, useState } from 'react';\nimport { Annotation, EditorState, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { getDefaultExtensions } from './getDefaultExtensions';\nimport { getStatistics } from './utils';\nvar External = Annotation.define();\nvar emptyExtensions = [];\nexport function useCodeMirror(props) {\n  var {\n    value,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions = emptyExtensions,\n    autoFocus,\n    theme = 'light',\n    height = null,\n    minHeight = null,\n    maxHeight = null,\n    width = null,\n    minWidth = null,\n    maxWidth = null,\n    placeholder: placeholderStr = '',\n    editable = true,\n    readOnly = false,\n    indentWithTab: defaultIndentWithTab = true,\n    basicSetup: defaultBasicSetup = true,\n    root,\n    initialState\n  } = props;\n  var [container, setContainer] = useState();\n  var [view, setView] = useState();\n  var [state, setState] = useState();\n  var defaultThemeOption = EditorView.theme({\n    '&': {\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth\n    },\n    '& .cm-scroller': {\n      height: '100% !important'\n    }\n  });\n  var updateListener = EditorView.updateListener.of(vu => {\n    if (vu.docChanged && typeof onChange === 'function' &&\n    // Fix echoing of the remote changes:\n    // If transaction is market as remote we don't have to call `onChange` handler again\n    !vu.transactions.some(tr => tr.annotation(External))) {\n      var doc = vu.state.doc;\n      var _value = doc.toString();\n      onChange(_value, vu);\n    }\n    onStatistics && onStatistics(getStatistics(vu));\n  });\n  var defaultExtensions = getDefaultExtensions({\n    theme,\n    editable,\n    readOnly,\n    placeholder: placeholderStr,\n    indentWithTab: defaultIndentWithTab,\n    basicSetup: defaultBasicSetup\n  });\n  var getExtensions = [updateListener, defaultThemeOption, ...defaultExtensions];\n  if (onUpdate && typeof onUpdate === 'function') {\n    getExtensions.push(EditorView.updateListener.of(onUpdate));\n  }\n  getExtensions = getExtensions.concat(extensions);\n  useEffect(() => {\n    if (container && !state) {\n      var config = {\n        doc: value,\n        selection,\n        extensions: getExtensions\n      };\n      var stateCurrent = initialState ? EditorState.fromJSON(initialState.json, config, initialState.fields) : EditorState.create(config);\n      setState(stateCurrent);\n      if (!view) {\n        var viewCurrent = new EditorView({\n          state: stateCurrent,\n          parent: container,\n          root\n        });\n        setView(viewCurrent);\n        onCreateEditor && onCreateEditor(viewCurrent, stateCurrent);\n      }\n    }\n    return () => {\n      if (view) {\n        setState(undefined);\n        setView(undefined);\n      }\n    };\n  }, [container, state]);\n  useEffect(() => setContainer(props.container), [props.container]);\n  useEffect(() => () => {\n    if (view) {\n      view.destroy();\n      setView(undefined);\n    }\n  }, [view]);\n  useEffect(() => {\n    if (autoFocus && view) {\n      view.focus();\n    }\n  }, [autoFocus, view]);\n  useEffect(() => {\n    if (view) {\n      view.dispatch({\n        effects: StateEffect.reconfigure.of(getExtensions)\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [theme, extensions, height, minHeight, maxHeight, width, minWidth, maxWidth, placeholderStr, editable, readOnly, defaultIndentWithTab, defaultBasicSetup, onChange, onUpdate]);\n  useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n    var currentValue = view ? view.state.doc.toString() : '';\n    if (view && value !== currentValue) {\n      view.dispatch({\n        changes: {\n          from: 0,\n          to: currentValue.length,\n          insert: value || ''\n        },\n        annotations: [External.of(true)]\n      });\n    }\n  }, [value, view]);\n  return {\n    state,\n    setState,\n    view,\n    setView,\n    container,\n    setContainer\n  };\n}","export var getStatistics = view => {\n  return {\n    line: view.state.doc.lineAt(view.state.selection.main.from),\n    lineCount: view.state.doc.lines,\n    lineBreak: view.state.lineBreak,\n    length: view.state.doc.length,\n    readOnly: view.state.readOnly,\n    tabSize: view.state.tabSize,\n    selection: view.state.selection,\n    selectionAsSingle: view.state.selection.asSingle().main,\n    ranges: view.state.selection.ranges,\n    selectionCode: view.state.sliceDoc(view.state.selection.main.from, view.state.selection.main.to),\n    selections: view.state.selection.ranges.map(r => view.state.sliceDoc(r.from, r.to)),\n    selectedText: view.state.selection.ranges.some(r => !r.empty)\n  };\n};","import { indentWithTab } from '@codemirror/commands';\nimport { basicSetup } from '@uiw/codemirror-extensions-basic-setup';\nimport { EditorView, keymap, placeholder } from '@codemirror/view';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { EditorState } from '@codemirror/state';\nimport { defaultLightThemeOption } from './theme/light';\nexport * from '@codemirror/theme-one-dark';\nexport * from './theme/light';\nexport var getDefaultExtensions = function getDefaultExtensions(optios) {\n  if (optios === void 0) {\n    optios = {};\n  }\n  var {\n    indentWithTab: defaultIndentWithTab = true,\n    editable = true,\n    readOnly = false,\n    theme = 'light',\n    placeholder: placeholderStr = '',\n    basicSetup: defaultBasicSetup = true\n  } = optios;\n  var getExtensions = [];\n  if (defaultIndentWithTab) {\n    getExtensions.unshift(keymap.of([indentWithTab]));\n  }\n  if (defaultBasicSetup) {\n    if (typeof defaultBasicSetup === 'boolean') {\n      getExtensions.unshift(basicSetup());\n    } else {\n      getExtensions.unshift(basicSetup(defaultBasicSetup));\n    }\n  }\n  if (placeholderStr) {\n    getExtensions.unshift(placeholder(placeholderStr));\n  }\n  switch (theme) {\n    case 'light':\n      getExtensions.push(defaultLightThemeOption);\n      break;\n    case 'dark':\n      getExtensions.push(oneDark);\n      break;\n    case 'none':\n      break;\n    default:\n      getExtensions.push(theme);\n      break;\n  }\n  if (editable === false) {\n    getExtensions.push(EditorView.editable.of(false));\n  }\n  if (readOnly) {\n    getExtensions.push(EditorState.readOnly.of(true));\n  }\n  return [...getExtensions];\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"value\", \"selection\", \"extensions\", \"onChange\", \"onStatistics\", \"onCreateEditor\", \"onUpdate\", \"autoFocus\", \"theme\", \"height\", \"minHeight\", \"maxHeight\", \"width\", \"minWidth\", \"maxWidth\", \"basicSetup\", \"placeholder\", \"indentWithTab\", \"editable\", \"readOnly\", \"root\", \"initialState\"];\nimport React, { useRef, forwardRef, useImperativeHandle } from 'react';\nimport { useCodeMirror } from './useCodeMirror';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport * from '@codemirror/view';\nexport * from '@codemirror/state';\nexport * from '@uiw/codemirror-extensions-basic-setup';\nexport * from './useCodeMirror';\nexport * from './getDefaultExtensions';\nexport * from './utils';\nvar ReactCodeMirror = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n      className,\n      value = '',\n      selection,\n      extensions = [],\n      onChange,\n      onStatistics,\n      onCreateEditor,\n      onUpdate,\n      autoFocus,\n      theme = 'light',\n      height,\n      minHeight,\n      maxHeight,\n      width,\n      minWidth,\n      maxWidth,\n      basicSetup,\n      placeholder,\n      indentWithTab,\n      editable,\n      readOnly,\n      root,\n      initialState\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var editor = useRef(null);\n  var {\n    state,\n    view,\n    container\n  } = useCodeMirror({\n    container: editor.current,\n    root,\n    value,\n    autoFocus,\n    theme,\n    height,\n    minHeight,\n    maxHeight,\n    width,\n    minWidth,\n    maxWidth,\n    basicSetup,\n    placeholder,\n    indentWithTab,\n    editable,\n    readOnly,\n    selection,\n    onChange,\n    onStatistics,\n    onCreateEditor,\n    onUpdate,\n    extensions,\n    initialState\n  });\n  useImperativeHandle(ref, () => ({\n    editor: editor.current,\n    state: state,\n    view: view\n  }), [editor, container, state, view]);\n\n  // check type of value\n  if (typeof value !== 'string') {\n    throw new Error(\"value must be typeof string but got \" + typeof value);\n  }\n  var defaultClassNames = typeof theme === 'string' ? \"cm-theme-\" + theme : 'cm-theme';\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: editor,\n    className: \"\" + defaultClassNames + (className ? \" \" + className : '')\n  }, other));\n});\nReactCodeMirror.displayName = 'CodeMirror';\nexport default ReactCodeMirror;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnchorLink = AnchorLink;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _gatsby = require(\"gatsby\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nAnchorLink.propTypes = {\n  to: _propTypes[\"default\"].string.isRequired,\n  title: _propTypes[\"default\"].string,\n  className: _propTypes[\"default\"].string,\n  stripHash: _propTypes[\"default\"].bool,\n  gatsbyLinkProps: _propTypes[\"default\"].object,\n  onAnchorLinkClick: _propTypes[\"default\"].func,\n  children: _propTypes[\"default\"].node\n};\n\nfunction AnchorLink(_ref) {\n  var to = _ref.to,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      _ref$stripHash = _ref.stripHash,\n      stripHash = _ref$stripHash === void 0 ? false : _ref$stripHash,\n      _ref$gatsbyLinkProps = _ref.gatsbyLinkProps,\n      gatsbyLinkProps = _ref$gatsbyLinkProps === void 0 ? {} : _ref$gatsbyLinkProps,\n      onAnchorLinkClick = _ref.onAnchorLinkClick;\n  var onClickHandler = stripHash ? _utils.handleStrippedLinkClick : _utils.handleLinkClick;\n\n  var linkProps = _objectSpread(_objectSpread({}, gatsbyLinkProps), {}, {\n    /**\n     * Spread optional gatsbyLinkProps object in fist, so our specific props will override\n     */\n    to: stripHash ? (0, _utils.stripHashedLocation)(to) : to,\n    onClick: function onClick(e) {\n      return onClickHandler(to, e, onAnchorLinkClick);\n    }\n  });\n  /**\n   * Optional props\n   */\n\n\n  if (title) linkProps.title = title;\n  if (className) linkProps.className = className;\n  return /*#__PURE__*/_react[\"default\"].createElement(_gatsby.Link, linkProps, children ? children : title);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AnchorLink\", {\n  enumerable: true,\n  get: function get() {\n    return _AnchorLink.AnchorLink;\n  }\n});\n\nvar _AnchorLink = require(\"./components/AnchorLink\");","import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nexport var createTheme = _ref => {\n  var {\n    theme,\n    settings = {},\n    styles = []\n  } = _ref;\n  var themeOptions = {\n    '.cm-gutters': {}\n  };\n  var baseStyle = {};\n  if (settings.background) {\n    baseStyle.backgroundColor = settings.background;\n  }\n  if (settings.backgroundImage) {\n    baseStyle.backgroundImage = settings.backgroundImage;\n  }\n  if (settings.foreground) {\n    baseStyle.color = settings.foreground;\n  }\n  if (settings.fontSize) {\n    baseStyle.fontSize = settings.fontSize;\n  }\n  if (settings.background || settings.foreground) {\n    themeOptions['&'] = baseStyle;\n  }\n  if (settings.fontFamily) {\n    themeOptions['&.cm-editor .cm-scroller'] = {\n      fontFamily: settings.fontFamily\n    };\n  }\n  if (settings.gutterBackground) {\n    themeOptions['.cm-gutters'].backgroundColor = settings.gutterBackground;\n  }\n  if (settings.gutterForeground) {\n    themeOptions['.cm-gutters'].color = settings.gutterForeground;\n  }\n  if (settings.gutterBorder) {\n    themeOptions['.cm-gutters'].borderRightColor = settings.gutterBorder;\n  }\n  if (settings.caret) {\n    themeOptions['.cm-content'] = {\n      caretColor: settings.caret\n    };\n    themeOptions['.cm-cursor, .cm-dropCursor'] = {\n      borderLeftColor: settings.caret\n    };\n  }\n  var activeLineGutterStyle = {};\n  if (settings.gutterActiveForeground) {\n    activeLineGutterStyle.color = settings.gutterActiveForeground;\n  }\n  if (settings.lineHighlight) {\n    themeOptions['.cm-activeLine'] = {\n      backgroundColor: settings.lineHighlight\n    };\n    activeLineGutterStyle.backgroundColor = settings.lineHighlight;\n  }\n  themeOptions['.cm-activeLineGutter'] = activeLineGutterStyle;\n  if (settings.selection) {\n    themeOptions['&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection'] = {\n      background: settings.selection + ' !important'\n    };\n  }\n  if (settings.selectionMatch) {\n    themeOptions['& .cm-selectionMatch'] = {\n      backgroundColor: settings.selectionMatch\n    };\n  }\n  var themeExtension = EditorView.theme(themeOptions, {\n    dark: theme === 'dark'\n  });\n  var highlightStyle = HighlightStyle.define(styles);\n  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];\n  return extension;\n};\nexport default createTheme;","import { createTheme } from '@uiw/codemirror-themes';\nimport { tags as t } from '@lezer/highlight';\n\nconst PalenightTheme = createTheme({\n    theme: 'dark',\n    settings: {\n        background: '#242627',\n        foreground: '#89DDFF',\n        caret: '#fff',\n        selection: '#8a91991a',\n        selectionMatch: '#036dd626',\n        lineHighlight: '#8a91991a',\n        gutterBackground: '#242627',\n        gutterForeground: '#8a919966',\n    },\n    styles: [\n        { tag: t.comment, color: '#676E95' },\n        { tag: t.content, color: '#FFFFFF' },\n        { tag: t.variableName, color: '#82AAFF' },\n        { tag: t.character, color: '#89DDFF' },\n        { tag: t.className, color: '#C3E88D' },\n        { tag: t.definitionKeyword, color: '#89DDFF' },\n        { tag: t.attributeName, color: '#C792EA' },\n        { tag: t.attributeValue, color: '#C3E88D' },\n        { tag: [t.string, t.special(t.brace)], color: '#C3E88D' },\n        { tag: t.number, color: '#F78C6C' },\n        { tag: t.bool, color: '#FFA500' },\n        { tag: t.null, color: '#FFA500' },\n        { tag: t.keyword, color: '#C792EA' },\n        { tag: t.operator, color: '#89DDFF' },\n        { tag: t.className, color: '#FFCB6B' },\n        { tag: t.definition(t.typeName), color: '#FFA500' },\n        { tag: t.typeName, color: '#gree' },\n        { tag: t.angleBracket, color: '#89DDFF' },\n        { tag: t.tagName, color: '#f07178' },\n    ],\n});\n\nexport { PalenightTheme };\n","// extracted by mini-css-extract-plugin\nexport var arrow = \"FileStructureDisplay-module--arrow--796c8\";\nexport var container = \"FileStructureDisplay-module--container--b74fa\";\nexport var css = \"FileStructureDisplay-module--css--ed940\";\nexport var file = \"FileStructureDisplay-module--file--64288\";\nexport var folder = \"FileStructureDisplay-module--folder--c78a5\";\nexport var folderIcon = \"FileStructureDisplay-module--folderIcon--49790\";\nexport var html = \"FileStructureDisplay-module--html--c811f\";\nexport var js = \"FileStructureDisplay-module--js--c39dd\";\nexport var json = \"FileStructureDisplay-module--json--2360d\";\nexport var markdown = \"FileStructureDisplay-module--markdown--c8083\";\nexport var name = \"FileStructureDisplay-module--name--cadee\";\nexport var npm = \"FileStructureDisplay-module--npm--0e14f\";\nexport var open = \"FileStructureDisplay-module--open--9836c\";\nexport var python = \"FileStructureDisplay-module--python--341fd\";","import { ReactNode, useCallback, useState } from \"react\";\nimport * as crcn from \"../../CodeRenderer.module.scss\";\nimport * as cn from \"./FileStructureDisplay.module.scss\";\nimport { Folder, File } from \"./types\";\n\nimport Caret from \"./expand.svg\";\nimport clsx from \"clsx\";\n/**\n * @deprecated\n *\n * Old way of doing it. Just renders a markdown file type. For all future use\n * cases, we want to use the parsed JSON version  */\nconst FileStructureDisplay = ({ value }: { value: ReactNode }) => {\n    return (\n        <div className={crcn.container}>\n            <h3>File Structure</h3>\n            {value}\n        </div>\n    );\n};\n\n/**\n * Takes in a stringified JSON of a file structure and renders an interactive\n * file system component.\n *\n * @todo: should sort the contents by folders first, and then files\n *\n */\nconst ParsedFileStructureDisplay = ({ value }: { value: string }) => {\n    const folder = JSON.parse(value);\n\n    return (\n        <div className={cn.container}>\n            <h3>File Structure</h3>\n            <FolderRenderer folder={folder} />\n        </div>\n    );\n};\n\nexport const Directory = ({ directory }: { directory: Folder }) => {\n    return (\n        <div className={cn.container}>\n            <FolderRenderer folder={directory} />\n        </div>\n    );\n};\n\nconst FileRenderer = ({ file: { type, name } }: { file: File }) => {\n    return (\n        <div className={cn.file}>\n            <i className={cn[type]}></i>\n            {name}\n        </div>\n    );\n};\n\nexport const FolderRenderer = ({ folder }: { folder: Folder }) => {\n    const [open, setOpen] = useState(true);\n    const toggleOpen = useCallback(() => setOpen((p) => !p), []);\n\n    return (\n        <div className={cn.folder}>\n            <div\n                className={clsx(cn[\"arrow\"], open && cn.open)}\n                onClick={toggleOpen}\n            >\n                <Caret />\n            </div>\n            <i className={cn[\"folderIcon\"]} onClick={toggleOpen}></i>\n            <div className={cn.name} onClick={toggleOpen}>\n                {folder.name}\n            </div>\n            {open &&\n                folder.contents.map((item) =>\n                    item?.type ? (\n                        <FileRenderer file={item as File} />\n                    ) : (\n                        <FolderRenderer folder={item as Folder} />\n                    )\n                )}\n        </div>\n    );\n};\n\nexport { FileStructureDisplay, ParsedFileStructureDisplay };\n","// extracted by mini-css-extract-plugin\nexport var code = \"CodeRenderer-module--code--355fc\";\nexport var container = \"CodeRenderer-module--container--3a830\";\nexport var editor = \"CodeRenderer-module--editor--bcb9f\";\nexport var hovered = \"CodeRenderer-module--hovered--c21f7\";\nexport var icon = \"CodeRenderer-module--icon--8d135\";\nexport var inline = \"CodeRenderer-module--inline--88b7d\";\nexport var title = \"CodeRenderer-module--title--e3124\";\nexport var video = \"CodeRenderer-module--video--ddd99\";","import { ExternalTokenizer, ContextTracker, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst printKeyword = 1,\n  indent = 194,\n  dedent = 195,\n  newline$1 = 196,\n  blankLineStart = 197,\n  newlineBracketed = 198,\n  eof = 199,\n  stringContent = 200,\n  Escape = 2,\n  replacementStart = 3,\n  stringEnd = 201,\n  ParenL = 24,\n  ParenthesizedExpression = 25,\n  TupleExpression = 49,\n  ComprehensionExpression = 50,\n  BracketL = 55,\n  ArrayExpression = 56,\n  ArrayComprehensionExpression = 57,\n  BraceL = 59,\n  DictionaryExpression = 60,\n  DictionaryComprehensionExpression = 61,\n  SetExpression = 62,\n  SetComprehensionExpression = 63,\n  ArgList = 65,\n  subscript = 238,\n  String$1 = 71,\n  stringStart = 241,\n  stringStartD = 242,\n  stringStartL = 243,\n  stringStartLD = 244,\n  stringStartR = 245,\n  stringStartRD = 246,\n  stringStartRL = 247,\n  stringStartRLD = 248,\n  FormatString = 72,\n  stringStartF = 249,\n  stringStartFD = 250,\n  stringStartFL = 251,\n  stringStartFLD = 252,\n  stringStartFR = 253,\n  stringStartFRD = 254,\n  stringStartFRL = 255,\n  stringStartFRLD = 256,\n  FormatReplacement = 73,\n  nestedFormatReplacement = 77,\n  importList = 263,\n  TypeParamList = 112,\n  ParamList = 130,\n  SequencePattern = 151,\n  MappingPattern = 152,\n  PatternArgList = 155;\n\nconst newline = 10, carriageReturn = 13, space = 32, tab = 9, hash = 35, parenOpen = 40, dot = 46,\n      braceOpen = 123, braceClose = 125, singleQuote = 39, doubleQuote = 34, backslash = 92,\n      letter_o = 111, letter_x = 120, letter_N = 78, letter_u = 117, letter_U = 85;\n\nconst bracketed = new Set([\n  ParenthesizedExpression, TupleExpression, ComprehensionExpression, importList, ArgList, ParamList,\n  ArrayExpression, ArrayComprehensionExpression, subscript,\n  SetExpression, SetComprehensionExpression, FormatString, FormatReplacement, nestedFormatReplacement,\n  DictionaryExpression, DictionaryComprehensionExpression,\n  SequencePattern, MappingPattern, PatternArgList, TypeParamList\n]);\n\nfunction isLineBreak(ch) {\n  return ch == newline || ch == carriageReturn\n}\n\nfunction isHex(ch) {\n  return ch >= 48 && ch <= 57 || ch >= 65 && ch <= 70 || ch >= 97 && ch <= 102\n}\n\nconst newlines = new ExternalTokenizer((input, stack) => {\n  let prev;\n  if (input.next < 0) {\n    input.acceptToken(eof);\n  } else if (stack.context.flags & cx_Bracketed) {\n    if (isLineBreak(input.next)) input.acceptToken(newlineBracketed, 1);\n  } else if (((prev = input.peek(-1)) < 0 || isLineBreak(prev)) &&\n             stack.canShift(blankLineStart)) {\n    let spaces = 0;\n    while (input.next == space || input.next == tab) { input.advance(); spaces++; }\n    if (input.next == newline || input.next == carriageReturn || input.next == hash)\n      input.acceptToken(blankLineStart, -spaces);\n  } else if (isLineBreak(input.next)) {\n    input.acceptToken(newline$1, 1);\n  }\n}, {contextual: true});\n\nconst indentation = new ExternalTokenizer((input, stack) => {\n  let context = stack.context;\n  if (context.flags) return\n  let prev = input.peek(-1);\n  if (prev == newline || prev == carriageReturn) {\n    let depth = 0, chars = 0;\n    for (;;) {\n      if (input.next == space) depth++;\n      else if (input.next == tab) depth += 8 - (depth % 8);\n      else break\n      input.advance();\n      chars++;\n    }\n    if (depth != context.indent &&\n        input.next != newline && input.next != carriageReturn && input.next != hash) {\n      if (depth < context.indent) input.acceptToken(dedent, -chars);\n      else input.acceptToken(indent);\n    }\n  }\n});\n\n// Flags used in Context objects\nconst cx_Bracketed = 1, cx_String = 2, cx_DoubleQuote = 4, cx_Long = 8, cx_Raw = 16, cx_Format = 32;\n\nfunction Context(parent, indent, flags) {\n  this.parent = parent;\n  this.indent = indent;\n  this.flags = flags;\n  this.hash = (parent ? parent.hash + parent.hash << 8 : 0) + indent + (indent << 4) + flags + (flags << 6);\n}\n\nconst topIndent = new Context(null, 0, 0);\n\nfunction countIndent(space) {\n  let depth = 0;\n  for (let i = 0; i < space.length; i++)\n    depth += space.charCodeAt(i) == tab ? 8 - (depth % 8) : 1;\n  return depth\n}\n\nconst stringFlags = new Map([\n  [stringStart, 0],\n  [stringStartD, cx_DoubleQuote],\n  [stringStartL, cx_Long],\n  [stringStartLD, cx_Long | cx_DoubleQuote],\n  [stringStartR, cx_Raw],\n  [stringStartRD, cx_Raw | cx_DoubleQuote],\n  [stringStartRL, cx_Raw | cx_Long],\n  [stringStartRLD, cx_Raw | cx_Long | cx_DoubleQuote],\n  [stringStartF, cx_Format],\n  [stringStartFD, cx_Format | cx_DoubleQuote],\n  [stringStartFL, cx_Format | cx_Long],\n  [stringStartFLD, cx_Format | cx_Long | cx_DoubleQuote],\n  [stringStartFR, cx_Format | cx_Raw],\n  [stringStartFRD, cx_Format | cx_Raw | cx_DoubleQuote],\n  [stringStartFRL, cx_Format | cx_Raw | cx_Long],\n  [stringStartFRLD, cx_Format | cx_Raw | cx_Long | cx_DoubleQuote]\n].map(([term, flags]) => [term, flags | cx_String]));\n\nconst trackIndent = new ContextTracker({\n  start: topIndent,\n  reduce(context, term, _, input) {\n    if ((context.flags & cx_Bracketed) && bracketed.has(term) ||\n        (term == String$1 || term == FormatString) && (context.flags & cx_String))\n      return context.parent\n    return context\n  },\n  shift(context, term, stack, input) {\n    if (term == indent)\n      return new Context(context, countIndent(input.read(input.pos, stack.pos)), 0)\n    if (term == dedent)\n      return context.parent\n    if (term == ParenL || term == BracketL || term == BraceL || term == replacementStart)\n      return new Context(context, 0, cx_Bracketed)\n    if (stringFlags.has(term))\n      return new Context(context, 0, stringFlags.get(term) | (context.flags & cx_Bracketed))\n    return context\n  },\n  hash(context) { return context.hash }\n});\n\nconst legacyPrint = new ExternalTokenizer(input => {\n  for (let i = 0; i < 5; i++) {\n    if (input.next != \"print\".charCodeAt(i)) return\n    input.advance();\n  }\n  if (/\\w/.test(String.fromCharCode(input.next))) return\n  for (let off = 0;; off++) {\n    let next = input.peek(off);\n    if (next == space || next == tab) continue\n    if (next != parenOpen && next != dot && next != newline && next != carriageReturn && next != hash)\n      input.acceptToken(printKeyword);\n    return\n  }\n});\n\nconst strings = new ExternalTokenizer((input, stack) => {\n  let {flags} = stack.context;\n  let quote = (flags & cx_DoubleQuote) ? doubleQuote : singleQuote;\n  let long = (flags & cx_Long) > 0;\n  let escapes = !(flags & cx_Raw);\n  let format = (flags & cx_Format) > 0;\n\n  let start = input.pos;\n  for (;;) {\n    if (input.next < 0) {\n      break\n    } else if (format && input.next == braceOpen) {\n      if (input.peek(1) == braceOpen) {\n        input.advance(2);\n      } else {\n        if (input.pos == start) {\n          input.acceptToken(replacementStart, 1);\n          return\n        }\n        break\n      }\n    } else if (escapes && input.next == backslash) {\n      if (input.pos == start) {\n        input.advance();\n        let escaped = input.next;\n        if (escaped >= 0) {\n          input.advance();\n          skipEscape(input, escaped);\n        }\n        input.acceptToken(Escape);\n        return\n      }\n      break\n    } else if (input.next == quote && (!long || input.peek(1) == quote && input.peek(2) == quote)) {\n      if (input.pos == start) {\n        input.acceptToken(stringEnd, long ? 3 : 1);\n        return\n      }\n      break\n    } else if (input.next == newline) {\n      if (long) {\n        input.advance();\n      } else if (input.pos == start) {\n        input.acceptToken(stringEnd);\n        return\n      }\n      break\n    } else {\n      input.advance();\n    }\n  }\n  if (input.pos > start) input.acceptToken(stringContent);\n});\n\nfunction skipEscape(input, ch) {\n  if (ch == letter_o) {\n    for (let i = 0; i < 2 && input.next >= 48 && input.next <= 55; i++) input.advance();\n  } else if (ch == letter_x) {\n    for (let i = 0; i < 2 && isHex(input.next); i++) input.advance();\n  } else if (ch == letter_u) {\n    for (let i = 0; i < 4 && isHex(input.next); i++) input.advance();\n  } else if (ch == letter_U) {\n    for (let i = 0; i < 8 && isHex(input.next); i++) input.advance();\n  } else if (ch == letter_N) {\n    if (input.next == braceOpen) {\n      input.advance();\n      while (input.next >= 0 && input.next != braceClose && input.next != singleQuote &&\n             input.next != doubleQuote && input.next != newline) input.advance();\n      if (input.next == braceClose) input.advance();\n    }\n  }\n}\n\nconst pythonHighlighting = styleTags({\n  \"async \\\"*\\\" \\\"**\\\" FormatConversion FormatSpec\": tags.modifier,\n  \"for while if elif else try except finally return raise break continue with pass assert await yield match case\": tags.controlKeyword,\n  \"in not and or is del\": tags.operatorKeyword,\n  \"from def class global nonlocal lambda\": tags.definitionKeyword,\n  import: tags.moduleKeyword,\n  \"with as print\": tags.keyword,\n  Boolean: tags.bool,\n  None: tags.null,\n  VariableName: tags.variableName,\n  \"CallExpression/VariableName\": tags.function(tags.variableName),\n  \"FunctionDefinition/VariableName\": tags.function(tags.definition(tags.variableName)),\n  \"ClassDefinition/VariableName\": tags.definition(tags.className),\n  PropertyName: tags.propertyName,\n  \"CallExpression/MemberExpression/PropertyName\": tags.function(tags.propertyName),\n  Comment: tags.lineComment,\n  Number: tags.number,\n  String: tags.string,\n  FormatString: tags.special(tags.string),\n  Escape: tags.escape,\n  UpdateOp: tags.updateOperator,\n  \"ArithOp!\": tags.arithmeticOperator,\n  BitOp: tags.bitwiseOperator,\n  CompareOp: tags.compareOperator,\n  AssignOp: tags.definitionOperator,\n  Ellipsis: tags.punctuation,\n  At: tags.meta,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace,\n  \".\": tags.derefOperator,\n  \", ;\": tags.separator\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,await:44, or:54, and:56, in:60, not:62, is:64, if:70, else:72, lambda:76, yield:94, from:96, async:102, for:104, None:162, True:164, False:164, del:178, pass:182, break:186, continue:190, return:194, raise:202, import:206, as:208, global:212, nonlocal:214, assert:218, type:223, elif:236, while:240, try:246, except:248, finally:250, with:254, def:258, class:268, match:279, case:285};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"##jO`QeOOP$}OSOOO&WQtO'#HUOOQS'#Co'#CoOOQS'#Cp'#CpO'vQdO'#CnO*UQtO'#HTOOQS'#HU'#HUOOQS'#DU'#DUOOQS'#HT'#HTO*rQdO'#D_O+VQdO'#DfO+gQdO'#DjO+zOWO'#DuO,VOWO'#DvO.[QtO'#GuOOQS'#Gu'#GuO'vQdO'#GtO0ZQtO'#GtOOQS'#Eb'#EbO0rQdO'#EcOOQS'#Gs'#GsO0|QdO'#GrOOQV'#Gr'#GrO1XQdO'#FYOOQS'#G^'#G^O1^QdO'#FXOOQV'#IS'#ISOOQV'#Gq'#GqOOQV'#Fq'#FqQ`QeOOO'vQdO'#CqO1lQdO'#C}O1sQdO'#DRO2RQdO'#HYO2cQtO'#EVO'vQdO'#EWOOQS'#EY'#EYOOQS'#E['#E[OOQS'#E^'#E^O2wQdO'#E`O3_QdO'#EdO3rQdO'#EfO3zQtO'#EfO1XQdO'#EiO0rQdO'#ElO1XQdO'#EnO0rQdO'#EtO0rQdO'#EwO4VQdO'#EyO4^QdO'#FOO4iQdO'#EzO0rQdO'#FOO1XQdO'#FQO1XQdO'#FVO4nQdO'#F[P4uOdO'#GpPOOO)CBd)CBdOOQS'#Ce'#CeOOQS'#Cf'#CfOOQS'#Cg'#CgOOQS'#Ch'#ChOOQS'#Ci'#CiOOQS'#Cj'#CjOOQS'#Cl'#ClO'vQdO,59OO'vQdO,59OO'vQdO,59OO'vQdO,59OO'vQdO,59OO'vQdO,59OO5QQdO'#DoOOQS,5:Y,5:YO5eQdO'#HdOOQS,5:],5:]O5rQ!fO,5:]O5wQtO,59YO1lQdO,59bO1lQdO,59bO1lQdO,59bO8gQdO,59bO8lQdO,59bO8sQdO,59jO8zQdO'#HTO:QQdO'#HSOOQS'#HS'#HSOOQS'#D['#D[O:iQdO,59aO'vQdO,59aO:wQdO,59aOOQS,59y,59yO:|QdO,5:RO'vQdO,5:ROOQS,5:Q,5:QO;[QdO,5:QO;aQdO,5:XO'vQdO,5:XO'vQdO,5:VOOQS,5:U,5:UO;rQdO,5:UO;wQdO,5:WOOOW'#Fy'#FyO;|OWO,5:aOOQS,5:a,5:aO<XQdO'#HwOOOW'#Dw'#DwOOOW'#Fz'#FzO<iOWO,5:bOOQS,5:b,5:bOOQS'#F}'#F}O<wQtO,5:iO?iQtO,5=`O@SQ#xO,5=`O@sQtO,5=`OOQS,5:},5:}OA[QeO'#GWOBnQdO,5;^OOQV,5=^,5=^OByQtO'#IPOChQdO,5;tOOQS-E:[-E:[OOQV,5;s,5;sO4dQdO'#FQOOQV-E9o-E9oOCpQtO,59]OEwQtO,59iOFbQdO'#HVOFmQdO'#HVO1XQdO'#HVOFxQdO'#DTOGQQdO,59mOGVQdO'#HZO'vQdO'#HZO0rQdO,5=tOOQS,5=t,5=tO0rQdO'#EROOQS'#ES'#ESOGtQdO'#GPOHUQdO,58|OHUQdO,58|O*xQdO,5:oOHdQtO'#H]OOQS,5:r,5:rOOQS,5:z,5:zOHwQdO,5;OOIYQdO'#IOO1XQdO'#H}OOQS,5;Q,5;QOOQS'#GT'#GTOInQtO,5;QOI|QdO,5;QOJRQdO'#IQOOQS,5;T,5;TOJaQdO'#H|OOQS,5;W,5;WOJrQdO,5;YO4iQdO,5;`O4iQdO,5;cOJzQtO'#ITO'vQdO'#ITOKUQdO,5;eO4VQdO,5;eO0rQdO,5;jO1XQdO,5;lOKZQeO'#EuOLgQgO,5;fO!!hQdO'#IUO4iQdO,5;jO!!sQdO,5;lO!!{QdO,5;qO!#WQtO,5;vO'vQdO,5;vPOOO,5=[,5=[P!#_OSO,5=[P!#dOdO,5=[O!&XQtO1G.jO!&`QtO1G.jO!)PQtO1G.jO!)ZQtO1G.jO!+tQtO1G.jO!,XQtO1G.jO!,lQdO'#HcO!,zQtO'#GuO0rQdO'#HcO!-UQdO'#HbOOQS,5:Z,5:ZO!-^QdO,5:ZO!-cQdO'#HeO!-nQdO'#HeO!.RQdO,5>OOOQS'#Ds'#DsOOQS1G/w1G/wOOQS1G.|1G.|O!/RQtO1G.|O!/YQtO1G.|O1lQdO1G.|O!/uQdO1G/UOOQS'#DZ'#DZO0rQdO,59tOOQS1G.{1G.{O!/|QdO1G/eO!0^QdO1G/eO!0fQdO1G/fO'vQdO'#H[O!0kQdO'#H[O!0pQtO1G.{O!1QQdO,59iO!2WQdO,5=zO!2hQdO,5=zO!2pQdO1G/mO!2uQtO1G/mOOQS1G/l1G/lO!3VQdO,5=uO!3|QdO,5=uO0rQdO1G/qO!4kQdO1G/sO!4pQtO1G/sO!5QQtO1G/qOOQS1G/p1G/pOOQS1G/r1G/rOOOW-E9w-E9wOOQS1G/{1G/{O!5bQdO'#HxO0rQdO'#HxO!5sQdO,5>cOOOW-E9x-E9xOOQS1G/|1G/|OOQS-E9{-E9{O!6RQ#xO1G2zO!6rQtO1G2zO'vQdO,5<jOOQS,5<j,5<jOOQS-E9|-E9|OOQS,5<r,5<rOOQS-E:U-E:UOOQV1G0x1G0xO1XQdO'#GRO!7ZQtO,5>kOOQS1G1`1G1`O!7xQdO1G1`OOQS'#DV'#DVO0rQdO,5=qOOQS,5=q,5=qO!7}QdO'#FrO!8YQdO,59oO!8bQdO1G/XO!8lQtO,5=uOOQS1G3`1G3`OOQS,5:m,5:mO!9]QdO'#GtOOQS,5<k,5<kOOQS-E9}-E9}O!9nQdO1G.hOOQS1G0Z1G0ZO!9|QdO,5=wO!:^QdO,5=wO0rQdO1G0jO0rQdO1G0jO!:oQdO,5>jO!;QQdO,5>jO1XQdO,5>jO!;cQdO,5>iOOQS-E:R-E:RO!;hQdO1G0lO!;sQdO1G0lO!;xQdO,5>lO!<WQdO,5>lO!<fQdO,5>hO!<|QdO,5>hO!=_QdO'#EpO0rQdO1G0tO!=jQdO1G0tO!=oQgO1G0zO!AmQgO1G0}O!EhQdO,5>oO!ErQdO,5>oO!EzQtO,5>oO0rQdO1G1PO!FUQdO1G1PO4iQdO1G1UO!!sQdO1G1WOOQV,5;a,5;aO!FZQfO,5;aO!F`QgO1G1QO!JaQdO'#GZO4iQdO1G1QO4iQdO1G1QO!JqQdO,5>pO!KOQdO,5>pO1XQdO,5>pOOQV1G1U1G1UO!KWQdO'#FSO!KiQ!fO1G1WO!KqQdO1G1WOOQV1G1]1G1]O4iQdO1G1]O!KvQdO1G1]O!LOQdO'#F^OOQV1G1b1G1bO!#WQtO1G1bPOOO1G2v1G2vP!LTOSO1G2vOOQS,5=},5=}OOQS'#Dp'#DpO0rQdO,5=}O!LYQdO,5=|O!LmQdO,5=|OOQS1G/u1G/uO!LuQdO,5>PO!MVQdO,5>PO!M_QdO,5>PO!MrQdO,5>PO!NSQdO,5>POOQS1G3j1G3jOOQS7+$h7+$hO!8bQdO7+$pO# uQdO1G.|O# |QdO1G.|OOQS1G/`1G/`OOQS,5<`,5<`O'vQdO,5<`OOQS7+%P7+%PO#!TQdO7+%POOQS-E9r-E9rOOQS7+%Q7+%QO#!eQdO,5=vO'vQdO,5=vOOQS7+$g7+$gO#!jQdO7+%PO#!rQdO7+%QO#!wQdO1G3fOOQS7+%X7+%XO##XQdO1G3fO##aQdO7+%XOOQS,5<_,5<_O'vQdO,5<_O##fQdO1G3aOOQS-E9q-E9qO#$]QdO7+%]OOQS7+%_7+%_O#$kQdO1G3aO#%YQdO7+%_O#%_QdO1G3gO#%oQdO1G3gO#%wQdO7+%]O#%|QdO,5>dO#&gQdO,5>dO#&gQdO,5>dOOQS'#Dx'#DxO#&xO&jO'#DzO#'TO`O'#HyOOOW1G3}1G3}O#'YQdO1G3}O#'bQdO1G3}O#'mQ#xO7+(fO#(^QtO1G2UP#(wQdO'#GOOOQS,5<m,5<mOOQS-E:P-E:POOQS7+&z7+&zOOQS1G3]1G3]OOQS,5<^,5<^OOQS-E9p-E9pOOQS7+$s7+$sO#)UQdO,5=`O#)oQdO,5=`O#*QQtO,5<aO#*eQdO1G3cOOQS-E9s-E9sOOQS7+&U7+&UO#*uQdO7+&UO#+TQdO,5<nO#+iQdO1G4UOOQS-E:Q-E:QO#+zQdO1G4UOOQS1G4T1G4TOOQS7+&W7+&WO#,]QdO7+&WOOQS,5<p,5<pO#,hQdO1G4WOOQS-E:S-E:SOOQS,5<l,5<lO#,vQdO1G4SOOQS-E:O-E:OO1XQdO'#EqO#-^QdO'#EqO#-iQdO'#IRO#-qQdO,5;[OOQS7+&`7+&`O0rQdO7+&`O#-vQgO7+&fO!JdQdO'#GXO4iQdO7+&fO4iQdO7+&iO#1tQtO,5<tO'vQdO,5<tO#2OQdO1G4ZOOQS-E:W-E:WO#2YQdO1G4ZO4iQdO7+&kO0rQdO7+&kOOQV7+&p7+&pO!KiQ!fO7+&rO!KqQdO7+&rO`QeO1G0{OOQV-E:X-E:XO4iQdO7+&lO4iQdO7+&lOOQV,5<u,5<uO#2bQdO,5<uO!JdQdO,5<uOOQV7+&l7+&lO#2mQgO7+&lO#6hQdO,5<vO#6sQdO1G4[OOQS-E:Y-E:YO#7QQdO1G4[O#7YQdO'#IWO#7hQdO'#IWO1XQdO'#IWOOQS'#IW'#IWO#7sQdO'#IVOOQS,5;n,5;nO#7{QdO,5;nO0rQdO'#FUOOQV7+&r7+&rO4iQdO7+&rOOQV7+&w7+&wO4iQdO7+&wO#8QQfO,5;xOOQV7+&|7+&|POOO7+(b7+(bO#8VQdO1G3iOOQS,5<c,5<cO#8eQdO1G3hOOQS-E9u-E9uO#8xQdO,5<dO#9TQdO,5<dO#9hQdO1G3kOOQS-E9v-E9vO#9xQdO1G3kO#:QQdO1G3kO#:bQdO1G3kO#9xQdO1G3kOOQS<<H[<<H[O#:mQtO1G1zOOQS<<Hk<<HkP#:zQdO'#FtO8sQdO1G3bO#;XQdO1G3bO#;^QdO<<HkOOQS<<Hl<<HlO#;nQdO7+)QOOQS<<Hs<<HsO#<OQtO1G1yP#<oQdO'#FsO#<|QdO7+)RO#=^QdO7+)RO#=fQdO<<HwO#=kQdO7+({OOQS<<Hy<<HyO#>bQdO,5<bO'vQdO,5<bOOQS-E9t-E9tOOQS<<Hw<<HwOOQS,5<g,5<gO0rQdO,5<gO#>gQdO1G4OOOQS-E9y-E9yO#?QQdO1G4OO<XQdO'#H{OOOO'#D{'#D{OOOO'#F|'#F|O#?cO&jO,5:fOOOW,5>e,5>eOOOW7+)i7+)iO#?nQdO7+)iO#?vQdO1G2zO#@aQdO1G2zP'vQdO'#FuO0rQdO<<IpO1XQdO1G2YP1XQdO'#GSO#@rQdO7+)pO#ATQdO7+)pOOQS<<Ir<<IrP1XQdO'#GUP0rQdO'#GQOOQS,5;],5;]O#AfQdO,5>mO#AtQdO,5>mOOQS1G0v1G0vOOQS<<Iz<<IzOOQV-E:V-E:VO4iQdO<<JQOOQV,5<s,5<sO4iQdO,5<sOOQV<<JQ<<JQOOQV<<JT<<JTO#A|QtO1G2`P#BWQdO'#GYO#B_QdO7+)uO#BiQgO<<JVO4iQdO<<JVOOQV<<J^<<J^O4iQdO<<J^O!KiQ!fO<<J^O#FdQgO7+&gOOQV<<JW<<JWO#FnQgO<<JWOOQV1G2a1G2aO1XQdO1G2aO#JiQdO1G2aO4iQdO<<JWO1XQdO1G2bP0rQdO'#G[O#JtQdO7+)vO#KRQdO7+)vOOQS'#FT'#FTO0rQdO,5>rO#KZQdO,5>rOOQS,5>r,5>rO#KfQdO,5>qO#KwQdO,5>qOOQS1G1Y1G1YOOQS,5;p,5;pOOQV<<Jc<<JcO#LPQdO1G1dOOQS7+)T7+)TP#LUQdO'#FwO#LfQdO1G2OO#LyQdO1G2OO#MZQdO1G2OP#MfQdO'#FxO#MsQdO7+)VO#NTQdO7+)VO#NTQdO7+)VO#N]QdO7+)VO#NmQdO7+(|O8sQdO7+(|OOQSAN>VAN>VO$ WQdO<<LmOOQSAN>cAN>cO0rQdO1G1|O$ hQtO1G1|P$ rQdO'#FvOOQS1G2R1G2RP$!PQdO'#F{O$!^QdO7+)jO$!wQdO,5>gOOOO-E9z-E9zOOOW<<MT<<MTO$#VQdO7+(fOOQSAN?[AN?[OOQS7+'t7+'tO$#pQdO<<M[OOQS,5<q,5<qO$$RQdO1G4XOOQS-E:T-E:TOOQVAN?lAN?lOOQV1G2_1G2_O4iQdOAN?qO$$aQgOAN?qOOQVAN?xAN?xO4iQdOAN?xOOQV<<JR<<JRO4iQdOAN?rO4iQdO7+'{OOQV7+'{7+'{O1XQdO7+'{OOQVAN?rAN?rOOQS7+'|7+'|O$([QdO<<MbOOQS1G4^1G4^O0rQdO1G4^OOQS,5<w,5<wO$(iQdO1G4]OOQS-E:Z-E:ZOOQU'#G_'#G_O$(zQfO7+'OO$)VQdO'#F_O$*^QdO7+'jO$*nQdO7+'jOOQS7+'j7+'jO$*yQdO<<LqO$+ZQdO<<LqO$+ZQdO<<LqO$+cQdO'#H^OOQS<<Lh<<LhO$+mQdO<<LhOOQS7+'h7+'hOOQS'#D|'#D|OOOO1G4R1G4RO$,WQdO1G4RO$,`QdO1G4RP!=_QdO'#GVOOQVG25]G25]O4iQdOG25]OOQVG25dG25dOOQVG25^G25^OOQV<<Kg<<KgO4iQdO<<KgOOQS7+)x7+)xP$,kQdO'#G]OOQU-E:]-E:]OOQV<<Jj<<JjO$-_QtO'#FaOOQS'#Fc'#FcO$-oQdO'#FbO$.aQdO'#FbOOQS'#Fb'#FbO$.fQdO'#IYO$)VQdO'#FiO$)VQdO'#FiO$.}QdO'#FjO$)VQdO'#FkO$/UQdO'#IZOOQS'#IZ'#IZO$/sQdO,5;yOOQS<<KU<<KUO$/{QdO<<KUO$0]QdOANB]O$0mQdOANB]O$0uQdO'#H_OOQS'#H_'#H_O1sQdO'#DcO$1`QdO,5=xOOQSANBSANBSOOOO7+)m7+)mO$1wQdO7+)mOOQVLD*wLD*wOOQVANARANARO5rQ!fO'#GaO$2PQtO,5<SO$)VQdO'#FmOOQS,5<W,5<WOOQS'#Fd'#FdO$2qQdO,5;|O$2vQdO,5;|OOQS'#Fg'#FgO$)VQdO'#G`O$3hQdO,5<QO$4SQdO,5>tO$4dQdO,5>tO1XQdO,5<PO$4uQdO,5<TO$4zQdO,5<TO$)VQdO'#I[O$5PQdO'#I[O$5UQdO,5<UOOQS,5<V,5<VO'vQdO'#FpOOQU1G1e1G1eO4iQdO1G1eOOQSAN@pAN@pO$5ZQdOG27wO$5kQdO,59}OOQS1G3d1G3dOOOO<<MX<<MXOOQS,5<{,5<{OOQS-E:_-E:_O$5pQtO'#FaO$5wQdO'#I]O$6VQdO'#I]O$6_QdO,5<XOOQS1G1h1G1hO$6dQdO1G1hO$6iQdO,5<zOOQS-E:^-E:^O$7TQdO,5=OO$7lQdO1G4`OOQS-E:b-E:bOOQS1G1k1G1kOOQS1G1o1G1oO$7|QdO,5>vO$)VQdO,5>vOOQS1G1p1G1pO$8[QtO,5<[OOQU7+'P7+'PO$+cQdO1G/iO$)VQdO,5<YO$8cQdO,5>wO$8jQdO,5>wOOQS1G1s1G1sOOQS7+'S7+'SP$)VQdO'#GdO$8rQdO1G4bO$8|QdO1G4bO$9UQdO1G4bOOQS7+%T7+%TO$9dQdO1G1tO$9rQtO'#FaO$9yQdO,5<}OOQS,5<},5<}O$:XQdO1G4cOOQS-E:a-E:aO$)VQdO,5<|O$:`QdO,5<|O$:eQdO7+)|OOQS-E:`-E:`O$:oQdO7+)|O$)VQdO,5<ZP$)VQdO'#GcO$:wQdO1G2hO$)VQdO1G2hP$;VQdO'#GbO$;^QdO<<MhO$;hQdO1G1uO$;vQdO7+(SO8sQdO'#C}O8sQdO,59bO8sQdO,59bO8sQdO,59bO$<UQtO,5=`O8sQdO1G.|O0rQdO1G/XO0rQdO7+$pP$<iQdO'#GOO'vQdO'#GtO$<vQdO,59bO$<{QdO,59bO$=SQdO,59mO$=XQdO1G/UO1sQdO'#DRO8sQdO,59j\",\n  stateData: \"$=r~O%cOS%^OSSOS%]PQ~OPdOVaOfoOhYOopOs!POvqO!PrO!Q{O!T!SO!U!RO!XZO!][O!h`O!r`O!s`O!t`O!{tO!}uO#PvO#RwO#TxO#XyO#ZzO#^|O#_|O#a}O#c!OO#l!QO#o!TO#s!UO#u!VO#z!WO#}hO$P!XO%oRO%pRO%tSO%uWO&Z]O&[]O&]]O&^]O&_]O&`]O&a]O&b]O&c^O&d^O&e^O&f^O&g^O&h^O&i^O&j^O~O%]!YO~OV!aO_!aOa!bOh!iO!X!kO!f!mO%j![O%k!]O%l!^O%m!_O%n!_O%o!`O%p!`O%q!aO%r!aO%s!aO~Ok%xXl%xXm%xXn%xXo%xXp%xXs%xXz%xX{%xX!x%xX#g%xX%[%xX%_%xX%z%xXg%xX!T%xX!U%xX%{%xX!W%xX![%xX!Q%xX#[%xXt%xX!m%xX~P%SOfoOhYO!XZO!][O!h`O!r`O!s`O!t`O%oRO%pRO%tSO%uWO&Z]O&[]O&]]O&^]O&_]O&`]O&a]O&b]O&c^O&d^O&e^O&f^O&g^O&h^O&i^O&j^O~Oz%wX{%wX#g%wX%[%wX%_%wX%z%wX~Ok!pOl!qOm!oOn!oOo!rOp!sOs!tO!x%wX~P)pOV!zOg!|Oo0cOv0qO!PrO~P'vOV#OOo0cOv0qO!W#PO~P'vOV#SOa#TOo0cOv0qO![#UO~P'vOQ#XO%`#XO%a#ZO~OQ#^OR#[O%`#^O%a#`O~OV%iX_%iXa%iXh%iXk%iXl%iXm%iXn%iXo%iXp%iXs%iXz%iX!X%iX!f%iX%j%iX%k%iX%l%iX%m%iX%n%iX%o%iX%p%iX%q%iX%r%iX%s%iXg%iX!T%iX!U%iX~O&Z]O&[]O&]]O&^]O&_]O&`]O&a]O&b]O&c^O&d^O&e^O&f^O&g^O&h^O&i^O&j^O{%iX!x%iX#g%iX%[%iX%_%iX%z%iX%{%iX!W%iX![%iX!Q%iX#[%iXt%iX!m%iX~P,eOz#dO{%hX!x%hX#g%hX%[%hX%_%hX%z%hX~Oo0cOv0qO~P'vO#g#gO%[#iO%_#iO~O%uWO~O!T#nO#u!VO#z!WO#}hO~OopO~P'vOV#sOa#tO%uWO{wP~OV#xOo0cOv0qO!Q#yO~P'vO{#{O!x$QO%z#|O#g!yX%[!yX%_!yX~OV#xOo0cOv0qO#g#SX%[#SX%_#SX~P'vOo0cOv0qO#g#WX%[#WX%_#WX~P'vOh$WO%uWO~O!f$YO!r$YO%uWO~OV$eO~P'vO!U$gO#s$hO#u$iO~O{$jO~OV$qO~P'vOS$sO%[$rO%c$tO~OV$}Oa$}Og%POo0cOv0qO~P'vOo0cOv0qO{%SO~P'vO&Y%UO~Oa!bOh!iO!X!kO!f!mOVba_bakbalbambanbaobapbasbazba{ba!xba#gba%[ba%_ba%jba%kba%lba%mba%nba%oba%pba%qba%rba%sba%zbagba!Tba!Uba%{ba!Wba![ba!Qba#[batba!mba~On%ZO~Oo%ZO~P'vOo0cO~P'vOk0eOl0fOm0dOn0dOo0mOp0nOs0rOg%wX!T%wX!U%wX%{%wX!W%wX![%wX!Q%wX#[%wX!m%wX~P)pO%{%]Og%vXz%vX!T%vX!U%vX!W%vX{%vX~Og%_Oz%`O!T%dO!U%cO~Og%_O~Oz%gO!T%dO!U%cO!W&SX~O!W%kO~Oz%lO{%nO!T%dO!U%cO![%}X~O![%rO~O![%sO~OQ#XO%`#XO%a%uO~OV%wOo0cOv0qO!PrO~P'vOQ#^OR#[O%`#^O%a%zO~OV!qa_!qaa!qah!qak!qal!qam!qan!qao!qap!qas!qaz!qa{!qa!X!qa!f!qa!x!qa#g!qa%[!qa%_!qa%j!qa%k!qa%l!qa%m!qa%n!qa%o!qa%p!qa%q!qa%r!qa%s!qa%z!qag!qa!T!qa!U!qa%{!qa!W!qa![!qa!Q!qa#[!qat!qa!m!qa~P#yOz%|O{%ha!x%ha#g%ha%[%ha%_%ha%z%ha~P%SOV&OOopOvqO{%ha!x%ha#g%ha%[%ha%_%ha%z%ha~P'vOz%|O{%ha!x%ha#g%ha%[%ha%_%ha%z%ha~OPdOVaOopOvqO!PrO!Q{O!{tO!}uO#PvO#RwO#TxO#XyO#ZzO#^|O#_|O#a}O#c!OO#g$zX%[$zX%_$zX~P'vO#g#gO%[&TO%_&TO~O!f&UOh&sX%[&sXz&sX#[&sX#g&sX%_&sX#Z&sXg&sX~Oh!iO%[&WO~Okealeameaneaoeapeaseazea{ea!xea#gea%[ea%_ea%zeagea!Tea!Uea%{ea!Wea![ea!Qea#[eatea!mea~P%SOsqazqa{qa#gqa%[qa%_qa%zqa~Ok!pOl!qOm!oOn!oOo!rOp!sO!xqa~PE`O%z&YOz%yX{%yX~O%uWOz%yX{%yX~Oz&]O{wX~O{&_O~Oz%lO#g%}X%[%}X%_%}Xg%}X{%}X![%}X!m%}X%z%}X~OV0lOo0cOv0qO!PrO~P'vO%z#|O#gUa%[Ua%_Ua~Oz&hO#g&PX%[&PX%_&PXn&PX~P%SOz&kO!Q&jO#g#Wa%[#Wa%_#Wa~Oz&lO#[&nO#g&rX%[&rX%_&rXg&rX~O!f$YO!r$YO#Z&qO%uWO~O#Z&qO~Oz&sO#g&tX%[&tX%_&tX~Oz&uO#g&pX%[&pX%_&pX{&pX~O!X&wO%z&xO~Oz&|On&wX~P%SOn'PO~OPdOVaOopOvqO!PrO!Q{O!{tO!}uO#PvO#RwO#TxO#XyO#ZzO#^|O#_|O#a}O#c!OO%['UO~P'vOt'YO#p'WO#q'XOP#naV#naf#nah#nao#nas#nav#na!P#na!Q#na!T#na!U#na!X#na!]#na!h#na!r#na!s#na!t#na!{#na!}#na#P#na#R#na#T#na#X#na#Z#na#^#na#_#na#a#na#c#na#l#na#o#na#s#na#u#na#z#na#}#na$P#na%X#na%o#na%p#na%t#na%u#na&Z#na&[#na&]#na&^#na&_#na&`#na&a#na&b#na&c#na&d#na&e#na&f#na&g#na&h#na&i#na&j#na%Z#na%_#na~Oz'ZO#[']O{&xX~Oh'_O!X&wO~Oh!iO{$jO!X&wO~O{'eO~P%SO%['hO~OS'iO%['hO~OV!aO_!aOa!bOh!iO!X!kO!f!mO%l!^O%m!_O%n!_O%o!`O%p!`O%q!aO%r!aO%s!aOkWilWimWinWioWipWisWizWi{Wi!xWi#gWi%[Wi%_Wi%jWi%zWigWi!TWi!UWi%{Wi!WWi![Wi!QWi#[WitWi!mWi~O%k!]O~P!#lO%kWi~P!#lOV!aO_!aOa!bOh!iO!X!kO!f!mO%o!`O%p!`O%q!aO%r!aO%s!aOkWilWimWinWioWipWisWizWi{Wi!xWi#gWi%[Wi%_Wi%jWi%kWi%lWi%zWigWi!TWi!UWi%{Wi!WWi![Wi!QWi#[WitWi!mWi~O%m!_O%n!_O~P!&gO%mWi%nWi~P!&gOa!bOh!iO!X!kO!f!mOkWilWimWinWioWipWisWizWi{Wi!xWi#gWi%[Wi%_Wi%jWi%kWi%lWi%mWi%nWi%oWi%pWi%zWigWi!TWi!UWi%{Wi!WWi![Wi!QWi#[WitWi!mWi~OV!aO_!aO%q!aO%r!aO%s!aO~P!)eOVWi_Wi%qWi%rWi%sWi~P!)eO!T%dO!U%cOg&VXz&VX~O%z'kO%{'kO~P,eOz'mOg&UX~Og'oO~Oz'pO{'rO!W&XX~Oo0cOv0qOz'pO{'sO!W&XX~P'vO!W'uO~Om!oOn!oOo!rOp!sOkjisjizji{ji!xji#gji%[ji%_ji%zji~Ol!qO~P!.WOlji~P!.WOk0eOl0fOm0dOn0dOo0mOp0nO~Ot'wO~P!/aOV'|Og'}Oo0cOv0qO~P'vOg'}Oz(OO~Og(QO~O!U(SO~Og(TOz(OO!T%dO!U%cO~P%SOk0eOl0fOm0dOn0dOo0mOp0nOgqa!Tqa!Uqa%{qa!Wqa![qa!Qqa#[qatqa!mqa~PE`OV'|Oo0cOv0qO!W&Sa~P'vOz(WO!W&Sa~O!W(XO~Oz(WO!T%dO!U%cO!W&Sa~P%SOV(]Oo0cOv0qO![%}a#g%}a%[%}a%_%}ag%}a{%}a!m%}a%z%}a~P'vOz(^O![%}a#g%}a%[%}a%_%}ag%}a{%}a!m%}a%z%}a~O![(aO~Oz(^O!T%dO!U%cO![%}a~P%SOz(dO!T%dO!U%cO![&Ta~P%SOz(gO{&lX![&lX!m&lX%z&lX~O{(kO![(mO!m(nO%z(jO~OV&OOopOvqO{%hi!x%hi#g%hi%[%hi%_%hi%z%hi~P'vOz(pO{%hi!x%hi#g%hi%[%hi%_%hi%z%hi~O!f&UOh&sa%[&saz&sa#[&sa#g&sa%_&sa#Z&sag&sa~O%[(uO~OV#sOa#tO%uWO~Oz&]O{wa~OopOvqO~P'vOz(^O#g%}a%[%}a%_%}ag%}a{%}a![%}a!m%}a%z%}a~P%SOz(zO#g%hX%[%hX%_%hX%z%hX~O%z#|O#gUi%[Ui%_Ui~O#g&Pa%[&Pa%_&Pan&Pa~P'vOz(}O#g&Pa%[&Pa%_&Pan&Pa~O%uWO#g&ra%[&ra%_&rag&ra~Oz)SO#g&ra%[&ra%_&rag&ra~Og)VO~OV)WOh$WO%uWO~O#Z)XO~O%uWO#g&ta%[&ta%_&ta~Oz)ZO#g&ta%[&ta%_&ta~Oo0cOv0qO#g&pa%[&pa%_&pa{&pa~P'vOz)^O#g&pa%[&pa%_&pa{&pa~OV)`Oa)`O%uWO~O%z)eO~Ot)hO#j)gOP#hiV#hif#hih#hio#his#hiv#hi!P#hi!Q#hi!T#hi!U#hi!X#hi!]#hi!h#hi!r#hi!s#hi!t#hi!{#hi!}#hi#P#hi#R#hi#T#hi#X#hi#Z#hi#^#hi#_#hi#a#hi#c#hi#l#hi#o#hi#s#hi#u#hi#z#hi#}#hi$P#hi%X#hi%o#hi%p#hi%t#hi%u#hi&Z#hi&[#hi&]#hi&^#hi&_#hi&`#hi&a#hi&b#hi&c#hi&d#hi&e#hi&f#hi&g#hi&h#hi&i#hi&j#hi%Z#hi%_#hi~Ot)iOP#kiV#kif#kih#kio#kis#kiv#ki!P#ki!Q#ki!T#ki!U#ki!X#ki!]#ki!h#ki!r#ki!s#ki!t#ki!{#ki!}#ki#P#ki#R#ki#T#ki#X#ki#Z#ki#^#ki#_#ki#a#ki#c#ki#l#ki#o#ki#s#ki#u#ki#z#ki#}#ki$P#ki%X#ki%o#ki%p#ki%t#ki%u#ki&Z#ki&[#ki&]#ki&^#ki&_#ki&`#ki&a#ki&b#ki&c#ki&d#ki&e#ki&f#ki&g#ki&h#ki&i#ki&j#ki%Z#ki%_#ki~OV)kOn&wa~P'vOz)lOn&wa~Oz)lOn&wa~P%SOn)pO~O%Y)tO~Ot)wO#p'WO#q)vOP#niV#nif#nih#nio#nis#niv#ni!P#ni!Q#ni!T#ni!U#ni!X#ni!]#ni!h#ni!r#ni!s#ni!t#ni!{#ni!}#ni#P#ni#R#ni#T#ni#X#ni#Z#ni#^#ni#_#ni#a#ni#c#ni#l#ni#o#ni#s#ni#u#ni#z#ni#}#ni$P#ni%X#ni%o#ni%p#ni%t#ni%u#ni&Z#ni&[#ni&]#ni&^#ni&_#ni&`#ni&a#ni&b#ni&c#ni&d#ni&e#ni&f#ni&g#ni&h#ni&i#ni&j#ni%Z#ni%_#ni~OV)zOo0cOv0qO{$jO~P'vOo0cOv0qO{&xa~P'vOz*OO{&xa~OV*SOa*TOg*WO%q*UO%uWO~O{$jO&{*YO~Oh'_O~Oh!iO{$jO~O%[*_O~O%[*aO~OV$}Oa$}Oo0cOv0qOg&Ua~P'vOz*dOg&Ua~Oo0cOv0qO{*gO!W&Xa~P'vOz*hO!W&Xa~Oo0cOv0qOz*hO{*kO!W&Xa~P'vOo0cOv0qOz*hO!W&Xa~P'vOz*hO{*kO!W&Xa~Om0dOn0dOo0mOp0nOgjikjisjizji!Tji!Uji%{ji!Wji{ji![ji#gji%[ji%_ji!Qji#[jitji!mji%zji~Ol0fO~P!N_Olji~P!N_OV'|Og*pOo0cOv0qO~P'vOn*rO~Og*pOz*tO~Og*uO~OV'|Oo0cOv0qO!W&Si~P'vOz*vO!W&Si~O!W*wO~OV(]Oo0cOv0qO![%}i#g%}i%[%}i%_%}ig%}i{%}i!m%}i%z%}i~P'vOz*zO!T%dO!U%cO![&Ti~Oz*}O![%}i#g%}i%[%}i%_%}ig%}i{%}i!m%}i%z%}i~O![+OO~Oa+QOo0cOv0qO![&Ti~P'vOz*zO![&Ti~O![+SO~OV+UOo0cOv0qO{&la![&la!m&la%z&la~P'vOz+VO{&la![&la!m&la%z&la~O!]+YO&n+[O![!nX~O![+^O~O{(kO![+_O~O{(kO![+_O!m+`O~OV&OOopOvqO{%hq!x%hq#g%hq%[%hq%_%hq%z%hq~P'vOz$ri{$ri!x$ri#g$ri%[$ri%_$ri%z$ri~P%SOV&OOopOvqO~P'vOV&OOo0cOv0qO#g%ha%[%ha%_%ha%z%ha~P'vOz+aO#g%ha%[%ha%_%ha%z%ha~Oz$ia#g$ia%[$ia%_$ian$ia~P%SO#g&Pi%[&Pi%_&Pin&Pi~P'vOz+dO#g#Wq%[#Wq%_#Wq~O#[+eOz$va#g$va%[$va%_$vag$va~O%uWO#g&ri%[&ri%_&rig&ri~Oz+gO#g&ri%[&ri%_&rig&ri~OV+iOh$WO%uWO~O%uWO#g&ti%[&ti%_&ti~Oo0cOv0qO#g&pi%[&pi%_&pi{&pi~P'vO{#{Oz#eX!W#eX~Oz+mO!W&uX~O!W+oO~Ot+rO#j)gOP#hqV#hqf#hqh#hqo#hqs#hqv#hq!P#hq!Q#hq!T#hq!U#hq!X#hq!]#hq!h#hq!r#hq!s#hq!t#hq!{#hq!}#hq#P#hq#R#hq#T#hq#X#hq#Z#hq#^#hq#_#hq#a#hq#c#hq#l#hq#o#hq#s#hq#u#hq#z#hq#}#hq$P#hq%X#hq%o#hq%p#hq%t#hq%u#hq&Z#hq&[#hq&]#hq&^#hq&_#hq&`#hq&a#hq&b#hq&c#hq&d#hq&e#hq&f#hq&g#hq&h#hq&i#hq&j#hq%Z#hq%_#hq~On$|az$|a~P%SOV)kOn&wi~P'vOz+yOn&wi~Oz,TO{$jO#[,TO~O#q,VOP#nqV#nqf#nqh#nqo#nqs#nqv#nq!P#nq!Q#nq!T#nq!U#nq!X#nq!]#nq!h#nq!r#nq!s#nq!t#nq!{#nq!}#nq#P#nq#R#nq#T#nq#X#nq#Z#nq#^#nq#_#nq#a#nq#c#nq#l#nq#o#nq#s#nq#u#nq#z#nq#}#nq$P#nq%X#nq%o#nq%p#nq%t#nq%u#nq&Z#nq&[#nq&]#nq&^#nq&_#nq&`#nq&a#nq&b#nq&c#nq&d#nq&e#nq&f#nq&g#nq&h#nq&i#nq&j#nq%Z#nq%_#nq~O#[,WOz%Oa{%Oa~Oo0cOv0qO{&xi~P'vOz,YO{&xi~O{#{O%z,[Og&zXz&zX~O%uWOg&zXz&zX~Oz,`Og&yX~Og,bO~O%Y,eO~O!T%dO!U%cOg&Viz&Vi~OV$}Oa$}Oo0cOv0qOg&Ui~P'vO{,hOz$la!W$la~Oo0cOv0qO{,iOz$la!W$la~P'vOo0cOv0qO{*gO!W&Xi~P'vOz,lO!W&Xi~Oo0cOv0qOz,lO!W&Xi~P'vOz,lO{,oO!W&Xi~Og$hiz$hi!W$hi~P%SOV'|Oo0cOv0qO~P'vOn,qO~OV'|Og,rOo0cOv0qO~P'vOV'|Oo0cOv0qO!W&Sq~P'vOz$gi![$gi#g$gi%[$gi%_$gig$gi{$gi!m$gi%z$gi~P%SOV(]Oo0cOv0qO~P'vOa+QOo0cOv0qO![&Tq~P'vOz,sO![&Tq~O![,tO~OV(]Oo0cOv0qO![%}q#g%}q%[%}q%_%}qg%}q{%}q!m%}q%z%}q~P'vO{,uO~OV+UOo0cOv0qO{&li![&li!m&li%z&li~P'vOz,zO{&li![&li!m&li%z&li~O!]+YO&n+[O![!na~O{(kO![,}O~OV&OOo0cOv0qO#g%hi%[%hi%_%hi%z%hi~P'vOz-OO#g%hi%[%hi%_%hi%z%hi~O%uWO#g&rq%[&rq%_&rqg&rq~Oz-RO#g&rq%[&rq%_&rqg&rq~OV)`Oa)`O%uWO!W&ua~Oz-TO!W&ua~On$|iz$|i~P%SOV)kO~P'vOV)kOn&wq~P'vOt-XOP#myV#myf#myh#myo#mys#myv#my!P#my!Q#my!T#my!U#my!X#my!]#my!h#my!r#my!s#my!t#my!{#my!}#my#P#my#R#my#T#my#X#my#Z#my#^#my#_#my#a#my#c#my#l#my#o#my#s#my#u#my#z#my#}#my$P#my%X#my%o#my%p#my%t#my%u#my&Z#my&[#my&]#my&^#my&_#my&`#my&a#my&b#my&c#my&d#my&e#my&f#my&g#my&h#my&i#my&j#my%Z#my%_#my~O%Z-]O%_-]O~P`O#q-^OP#nyV#nyf#nyh#nyo#nys#nyv#ny!P#ny!Q#ny!T#ny!U#ny!X#ny!]#ny!h#ny!r#ny!s#ny!t#ny!{#ny!}#ny#P#ny#R#ny#T#ny#X#ny#Z#ny#^#ny#_#ny#a#ny#c#ny#l#ny#o#ny#s#ny#u#ny#z#ny#}#ny$P#ny%X#ny%o#ny%p#ny%t#ny%u#ny&Z#ny&[#ny&]#ny&^#ny&_#ny&`#ny&a#ny&b#ny&c#ny&d#ny&e#ny&f#ny&g#ny&h#ny&i#ny&j#ny%Z#ny%_#ny~Oz-aO{$jO#[-aO~Oo0cOv0qO{&xq~P'vOz-dO{&xq~O%z,[Og&zaz&za~OV*SOa*TO%q*UO%uWOg&ya~Oz-hOg&ya~O$S-lO~OV$}Oa$}Oo0cOv0qO~P'vOo0cOv0qO{-mOz$li!W$li~P'vOo0cOv0qOz$li!W$li~P'vO{-mOz$li!W$li~Oo0cOv0qO{*gO~P'vOo0cOv0qO{*gO!W&Xq~P'vOz-pO!W&Xq~Oo0cOv0qOz-pO!W&Xq~P'vOs-sO!T%dO!U%cOg&Oq!W&Oq![&Oqz&Oq~P!/aOa+QOo0cOv0qO![&Ty~P'vOz$ji![$ji~P%SOa+QOo0cOv0qO~P'vOV+UOo0cOv0qO~P'vOV+UOo0cOv0qO{&lq![&lq!m&lq%z&lq~P'vO{(kO![-xO!m-yO%z-wO~OV&OOo0cOv0qO#g%hq%[%hq%_%hq%z%hq~P'vO%uWO#g&ry%[&ry%_&ryg&ry~OV)`Oa)`O%uWO!W&ui~Ot-}OP#m!RV#m!Rf#m!Rh#m!Ro#m!Rs#m!Rv#m!R!P#m!R!Q#m!R!T#m!R!U#m!R!X#m!R!]#m!R!h#m!R!r#m!R!s#m!R!t#m!R!{#m!R!}#m!R#P#m!R#R#m!R#T#m!R#X#m!R#Z#m!R#^#m!R#_#m!R#a#m!R#c#m!R#l#m!R#o#m!R#s#m!R#u#m!R#z#m!R#}#m!R$P#m!R%X#m!R%o#m!R%p#m!R%t#m!R%u#m!R&Z#m!R&[#m!R&]#m!R&^#m!R&_#m!R&`#m!R&a#m!R&b#m!R&c#m!R&d#m!R&e#m!R&f#m!R&g#m!R&h#m!R&i#m!R&j#m!R%Z#m!R%_#m!R~Oo0cOv0qO{&xy~P'vOV*SOa*TO%q*UO%uWOg&yi~O$S-lO%Z.VO%_.VO~OV.aOh._O!X.^O!].`O!h.YO!s.[O!t.[O%p.XO%uWO&Z]O&[]O&]]O&^]O&_]O&`]O&a]O&b]O~Oo0cOv0qOz$lq!W$lq~P'vO{.fOz$lq!W$lq~Oo0cOv0qO{*gO!W&Xy~P'vOz.gO!W&Xy~Oo0cOv.kO~P'vOs-sO!T%dO!U%cOg&Oy!W&Oy![&Oyz&Oy~P!/aO{(kO![.nO~O{(kO![.nO!m.oO~OV*SOa*TO%q*UO%uWO~Oh.tO!f.rOz$TX#[$TX%j$TXg$TX~Os$TX{$TX!W$TX![$TX~P$,yO%o.vO%p.vOs$UXz$UX{$UX#[$UX%j$UX!W$UXg$UX![$UX~O!h.xO~Oz.|O#[/OO%j.yOs&|X{&|X!W&|Xg&|X~Oa/RO~P$)cOh.tOs&}Xz&}X{&}X#[&}X%j&}X!W&}Xg&}X![&}X~Os/VO{$jO~Oo0cOv0qOz$ly!W$ly~P'vOo0cOv0qO{*gO!W&X!R~P'vOz/ZO!W&X!R~Og&RXs&RX!T&RX!U&RX!W&RX![&RXz&RX~P!/aOs-sO!T%dO!U%cOg&Qa!W&Qa![&Qaz&Qa~O{(kO![/^O~O!f.rOh$[as$[az$[a{$[a#[$[a%j$[a!W$[ag$[a![$[a~O!h/eO~O%o.vO%p.vOs$Uaz$Ua{$Ua#[$Ua%j$Ua!W$Uag$Ua![$Ua~O%j.yOs$Yaz$Ya{$Ya#[$Ya!W$Yag$Ya![$Ya~Os&|a{&|a!W&|ag&|a~P$)VOz/jOs&|a{&|a!W&|ag&|a~O!W/mO~Og/mO~O{/oO~O![/pO~Oo0cOv0qO{*gO!W&X!Z~P'vO{/sO~O%z/tO~P$,yOz/uO#[/OO%j.yOg'PX~Oz/uOg'PX~Og/wO~O!h/xO~O#[/OOs%Saz%Sa{%Sa%j%Sa!W%Sag%Sa![%Sa~O#[/OO%j.yOs%Waz%Wa{%Wa!W%Wag%Wa~Os&|i{&|i!W&|ig&|i~P$)VOz/zO#[/OO%j.yO!['Oa~O{$da~P%SOg'Pa~P$)VOz0SOg'Pa~Oa0UO!['Oi~P$)cOz0WO!['Oi~Oz0WO#[/OO%j.yO!['Oi~O#[/OO%j.yOg$biz$bi~O%z0ZO~P$,yO#[/OO%j.yOg%Vaz%Va~Og'Pi~P$)VO{0^O~Oa0UO!['Oq~P$)cOz0`O!['Oq~O#[/OO%j.yOz%Ui![%Ui~Oa0UO~P$)cOa0UO!['Oy~P$)cO#[/OO%j.yOg$ciz$ci~O#[/OO%j.yOz%Uq![%Uq~Oz+aO#g%ha%[%ha%_%ha%z%ha~P%SOV&OOo0cOv0qO~P'vOn0hO~Oo0hO~P'vO{0iO~Ot0jO~P!/aO&]&Z&j&h&i&g&f&d&e&c&b&`&a&_&^&[%u~\",\n  goto: \"!=l'QPPPPPP'RP'Z*s+]+v,b,}-kP.YP'Z.y.y'ZPPP'Z2cPPPPPP2c5VPP5VP7g7p=xPP={>m>pPP'Z'ZPP?PPP'Z'ZPP'Z'Z'Z'Z'Z?T?}'ZP@QP@WD_G{HPPHSH^Hb'ZPPPHeHn'RP'R'RP'RP'RP'RP'RP'R'R'RP'RPP'RPP'RP'RPHtIQIYPIaIgPIaPIaIaPPPIaPKuPLOLYL`KuPIaLiPIaPLpLvPLzM`M}NhLzLzNnN{LzLzLzLz! a! g! j! o! r! |!!S!!`!!r!!x!#S!#Y!#v!#|!$S!$^!$d!$j!$|!%W!%^!%d!%n!%t!%z!&Q!&W!&^!&h!&n!&x!'O!'X!'_!'n!'v!(Q!(XPPPPPPPPPPP!(_!(b!(h!(q!({!)WPPPPPPPPPPPP!-z!/`!3`!6pPP!6x!7X!7b!8Z!8Q!8d!8j!8m!8p!8s!8{!9lPPPPPPPPPPPPPPPPP!9o!9s!9yP!:_!:c!:o!:x!;U!;l!;o!;r!;x!<O!<U!<XP!<a!<j!=f!=i]eOn#g$j)t,P'}`OTYZ[adnoprtxy}!P!Q!R!U!X!c!d!e!f!g!h!i!k!o!p!q!s!t!z#O#S#T#[#d#g#x#y#{#}$Q$e$g$h$j$q$}%S%Z%^%`%c%g%l%n%w%|&O&Z&_&h&j&k&u&x&|'P'W'Z'l'm'p'r's'w'|(O(S(W(](^(d(g(p(r(z(})^)e)g)k)l)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+Q+U+V+Y+a+c+d+k+x+y,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/V/Z/s0c0d0e0f0h0i0j0k0l0n0r}!cQ#c#p$R$d$p%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!P!dQ#c#p$R$d$p$u%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!R!eQ#c#p$R$d$p$u$v%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!T!fQ#c#p$R$d$p$u$v$w%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!V!gQ#c#p$R$d$p$u$v$w$x%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!X!hQ#c#p$R$d$p$u$v$w$x$y%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g!]!hQ!n#c#p$R$d$p$u$v$w$x$y$z%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0g'}TOTYZ[adnoprtxy}!P!Q!R!U!X!c!d!e!f!g!h!i!k!o!p!q!s!t!z#O#S#T#[#d#g#x#y#{#}$Q$e$g$h$j$q$}%S%Z%^%`%c%g%l%n%w%|&O&Z&_&h&j&k&u&x&|'P'W'Z'l'm'p'r's'w'|(O(S(W(](^(d(g(p(r(z(})^)e)g)k)l)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+Q+U+V+Y+a+c+d+k+x+y,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/V/Z/s0c0d0e0f0h0i0j0k0l0n0r&cVOYZ[dnprxy}!P!Q!U!i!k!o!p!q!s!t#[#d#g#y#{#}$Q$h$j$}%S%Z%^%`%g%l%n%w%|&Z&_&j&k&u&x'P'W'Z'l'm'p'r's'w(O(W(^(d(g(p(r(z)^)e)g)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+U+V+Y+a+d+k,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/Z/s0c0d0e0f0h0i0j0k0n0r%mXOYZ[dnrxy}!P!Q!U!i!k#[#d#g#y#{#}$Q$h$j$}%S%^%`%g%l%n%w%|&Z&_&j&k&u&x'P'W'Z'l'm'p'r's'w(O(W(^(d(g(p(r(z)^)e)g)p)t)z*O*Y*d*g*h*k*q*t*v*y*z*}+U+V+Y+a+d+k,P,X,Y,],g,h,i,k,l,o,s,u,w,y,z-O-d-f-m-p.f.g/Z0i0j0kQ#vqQ/[.kR0o0q't`OTYZ[adnoprtxy}!P!Q!R!U!X!c!d!e!f!g!h!k!o!p!q!s!t!z#O#S#T#[#d#g#x#y#{#}$Q$e$g$h$j$q$}%S%Z%^%`%c%g%l%n%w%|&O&Z&_&h&j&k&u&x&|'P'W'Z'l'p'r's'w'|(O(S(W(](^(d(g(p(r(z(})^)e)g)k)l)p)t)z*O*Y*g*h*k*q*r*t*v*y*z*}+Q+U+V+Y+a+c+d+k+x+y,P,X,Y,],h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/V/Z/s0c0d0e0f0h0i0j0k0l0n0rh#jhz{$W$Z&l&q)S)X+f+g-RW#rq&].k0qQ$]|Q$a!OQ$n!VQ$o!WW$|!i'm*d,gS&[#s#tQ'S$iQ(s&UQ)U&nU)Y&s)Z+jW)a&w+m-T-{Q*Q']W*R'_,`-h.TQ+l)`S,_*S*TQ-Q+eQ-_,TQ-c,WQ.R-al.W-l.^._.a.z.|/R/j/o/t/y0U0Z0^Q/S.`Q/a.tQ/l/OU0P/u0S0[X0V/z0W0_0`R&Z#r!_!wYZ!P!Q!k%S%`%g'p'r's(O(W)g*g*h*k*q*t*v,h,i,k,l,o-m-p.f.g/ZR%^!vQ!{YQ%x#[Q&d#}Q&g$QR,{+YT.j-s/s![!jQ!n#c#p$R$d$p$u$v$w$x$y$z%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0gQ&X#kQ'c$oR*^'dR'l$|Q%V!mR/_.r'|_OTYZ[adnoprtxy}!P!Q!R!U!X!c!d!e!f!g!h!i!k!o!p!q!s!t!z#O#S#T#[#d#g#x#y#{#}$Q$e$g$h$j$q$}%S%Z%^%`%c%g%l%n%w%|&O&Z&_&h&j&k&u&x&|'P'W'Z'l'm'p'r's'w'|(O(S(W(](^(d(g(p(r(z(})^)e)g)k)l)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+Q+U+V+Y+a+c+d+k+x+y,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/V/Z/s0c0d0e0f0h0i0j0k0l0n0rS#a_#b!P.[-l.^._.`.a.t.z.|/R/j/o/t/u/y/z0S0U0W0Z0[0^0_0`'|_OTYZ[adnoprtxy}!P!Q!R!U!X!c!d!e!f!g!h!i!k!o!p!q!s!t!z#O#S#T#[#d#g#x#y#{#}$Q$e$g$h$j$q$}%S%Z%^%`%c%g%l%n%w%|&O&Z&_&h&j&k&u&x&|'P'W'Z'l'm'p'r's'w'|(O(S(W(](^(d(g(p(r(z(})^)e)g)k)l)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+Q+U+V+Y+a+c+d+k+x+y,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/V/Z/s0c0d0e0f0h0i0j0k0l0n0rT#a_#bT#^^#_R(o%xa(l%x(n(o+`,{-y-z.oT+[(k+]R-z,{Q$PsQ+l)aR,^*RX#}s$O$P&fQ&y$aQ'a$nQ'd$oR)s'SQ)b&wV-S+m-T-{ZgOn$j)t,PXkOn)t,PQ$k!TQ&z$bQ&{$cQ'^$mQ'b$oQ)q'RQ)x'WQ){'XQ)|'YQ*Z'`S*]'c'dQ+s)gQ+u)hQ+v)iQ+z)oS+|)r*[Q,Q)vQ,R)wS,S)y)zQ,d*^Q-V+rQ-W+tQ-Y+{S-Z+},OQ-`,UQ-b,VQ-|-XQ.O-[Q.P-^Q.Q-_Q.p-}Q.q.RQ/W.dR/r/XWkOn)t,PR#mjQ'`$nS)r'S'aR,O)sQ,]*RR-f,^Q*['`Q+})rR-[,OZiOjn)t,PQ'f$pR*`'gT-j,e-ku.c-l.^._.a.t.z.|/R/j/o/t/u/y0S0U0Z0[0^t.c-l.^._.a.t.z.|/R/j/o/t/u/y0S0U0Z0[0^Q/S.`X0V/z0W0_0`!P.Z-l.^._.`.a.t.z.|/R/j/o/t/u/y/z0S0U0W0Z0[0^0_0`Q.w.YR/f.xg.z.].{/b/i/n/|0O0Q0]0a0bu.b-l.^._.a.t.z.|/R/j/o/t/u/y0S0U0Z0[0^X.u.W.b/a0PR/c.tV0R/u0S0[R/X.dQnOS#on,PR,P)tQ&^#uR(x&^S%m#R#wS(_%m(bT(b%p&`Q%a!yQ%h!}W(P%a%h(U(YQ(U%eR(Y%jQ&i$RR)O&iQ(e%qQ*{(`T+R(e*{Q'n%OR*e'nS'q%R%SY*i'q*j,m-q.hU*j'r's'tU,m*k*l*mS-q,n,oR.h-rQ#Y]R%t#YQ#_^R%y#_Q(h%vS+W(h+XR+X(iQ+](kR,|+]Q#b_R%{#bQ#ebQ%}#cW&Q#e%}({+bQ({&cR+b0gQ$OsS&e$O&fR&f$PQ&v$_R)_&vQ&V#jR(t&VQ&m$VS)T&m+hR+h)UQ$Z{R&p$ZQ&t$]R)[&tQ+n)bR-U+nQ#hfR&S#hQ)f&zR+q)fQ&}$dS)m&})nR)n'OQ'V$kR)u'VQ'[$lS*P'[,ZR,Z*QQ,a*VR-i,aWjOn)t,PR#ljQ-k,eR.U-kd.{.]/b/i/n/|0O0Q0]0a0bR/h.{U.s.W/a0PR/`.sQ/{/nS0X/{0YR0Y/|S/v/b/cR0T/vQ.}.]R/k.}R!ZPXmOn)t,PWlOn)t,PR'T$jYfOn$j)t,PR&R#g[sOn#g$j)t,PR&d#}&bQOYZ[dnprxy}!P!Q!U!i!k!o!p!q!s!t#[#d#g#y#{#}$Q$h$j$}%S%Z%^%`%g%l%n%w%|&Z&_&j&k&u&x'P'W'Z'l'm'p'r's'w(O(W(^(d(g(p(r(z)^)e)g)p)t)z*O*Y*d*g*h*k*q*r*t*v*y*z*}+U+V+Y+a+d+k,P,X,Y,],g,h,i,k,l,o,q,s,u,w,y,z-O-d-f-m-p-s.f.g/Z/s0c0d0e0f0h0i0j0k0n0rQ!nTQ#caQ#poU$Rt%c(SS$d!R$gQ$p!XQ$u!cQ$v!dQ$w!eQ$x!fQ$y!gQ$z!hQ%e!zQ%j#OQ%p#SQ%q#TQ&`#xQ'O$eQ'g$qQ(q&OU(|&h(}+cW)j&|)l+x+yQ*o'|Q*x(]Q+w)kQ,v+QQ/q/VR0g0lQ!yYQ!}ZQ$b!PQ$c!QQ%R!kQ't%S^'{%`%g(O(W*q*t*v^*f'p*h,k,l-p.g/ZQ*l'rQ*m'sQ+t)gQ,j*gQ,n*kQ-n,hQ-o,iQ-r,oQ.e-mR/Y.f[bOn#g$j)t,P!^!vYZ!P!Q!k%S%`%g'p'r's(O(W)g*g*h*k*q*t*v,h,i,k,l,o-m-p.f.g/ZQ#R[Q#fdS#wrxQ$UyW$_}$Q'P)pS$l!U$hW${!i'm*d,gS%v#[+Y`&P#d%|(p(r(z+a-O0kQ&a#yQ&b#{Q&c#}Q'j$}Q'z%^W([%l(^*y*}Q(`%nQ(i%wQ(v&ZS(y&_0iQ)P&jQ)Q&kU)]&u)^+kQ)d&xQ)y'WY)}'Z*O,X,Y-dQ*b'lS*n'w0jW+P(d*z,s,wW+T(g+V,y,zQ+p)eQ,U)zQ,c*YQ,x+UQ-P+dQ-e,]Q-v,uR.S-fhUOn#d#g$j%|&_'w(p(r)t,P%S!uYZ[drxy}!P!Q!U!i!k#[#y#{#}$Q$h$}%S%^%`%g%l%n%w&Z&j&k&u&x'P'W'Z'l'm'p'r's(O(W(^(d(g(z)^)e)g)p)z*O*Y*d*g*h*k*q*t*v*y*z*}+U+V+Y+a+d+k,X,Y,],g,h,i,k,l,o,s,u,w,y,z-O-d-f-m-p.f.g/Z0i0j0kQ#qpW%W!o!s0d0nQ%X!pQ%Y!qQ%[!tQ%f0cS'v%Z0hQ'x0eQ'y0fQ,p*rQ-u,qS.i-s/sR0p0rU#uq.k0qR(w&][cOn#g$j)t,PZ!xY#[#}$Q+YQ#W[Q#zrR$TxQ%b!yQ%i!}Q%o#RQ'j${Q(V%eQ(Z%jQ(c%pQ(f%qQ*|(`Q,f*bQ-t,pQ.m-uR/].lQ$StQ(R%cR*s(SQ.l-sR/}/sR#QZR#V[R%Q!iQ%O!iV*c'm*d,g!]!lQ!n#c#p$R$d$p$u$v$w$x$y$z%e%j%p%q&`'O'g(q(|)j*o*x+w,v/q0gR%T!kT#]^#_Q%x#[R,{+YQ(m%xS+_(n(oQ,}+`Q-x,{S.n-y-zR/^.oT+Z(k+]Q$`}Q&g$QQ)o'PR+{)pQ$XzQ)W&qR+i)XQ$XzQ&o$WQ)W&qR+i)XQ#khW$Vz$W&q)XQ$[{Q&r$ZZ)R&l)S+f+g-RR$^|R)c&wXlOn)t,PQ$f!RR'Q$gQ$m!UR'R$hR*X'_Q*V'_V-g,`-h.TQ.d-lQ/P.^R/Q._U.]-l.^._Q/U.aQ/b.tQ/g.zU/i.|/j/yQ/n/RQ/|/oQ0O/tU0Q/u0S0[Q0]0UQ0a0ZR0b0^R/T.`R/d.t\",\n  nodeNames: \"⚠ print Escape { Comment Script AssignStatement * BinaryExpression BitOp BitOp BitOp BitOp ArithOp ArithOp @ ArithOp ** UnaryExpression ArithOp BitOp AwaitExpression await ) ( ParenthesizedExpression BinaryExpression or and CompareOp in not is UnaryExpression ConditionalExpression if else LambdaExpression lambda ParamList VariableName AssignOp , : NamedExpression AssignOp YieldExpression yield from TupleExpression ComprehensionExpression async for LambdaExpression ] [ ArrayExpression ArrayComprehensionExpression } { DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression CallExpression ArgList AssignOp MemberExpression . PropertyName Number String FormatString FormatReplacement FormatSelfDoc FormatConversion FormatSpec FormatReplacement FormatSelfDoc ContinuedString Ellipsis None Boolean TypeDef AssignOp UpdateStatement UpdateOp ExpressionStatement DeleteStatement del PassStatement pass BreakStatement break ContinueStatement continue ReturnStatement return YieldStatement PrintStatement RaiseStatement raise ImportStatement import as ScopeStatement global nonlocal AssertStatement assert TypeDefinition type TypeParamList TypeParam StatementGroup ; IfStatement Body elif WhileStatement while ForStatement TryStatement try except finally WithStatement with FunctionDefinition def ParamList AssignOp TypeDef ClassDefinition class DecoratedStatement Decorator At MatchStatement match MatchBody MatchClause case CapturePattern LiteralPattern ArithOp ArithOp AsPattern OrPattern LogicOp AttributePattern SequencePattern MappingPattern StarPattern ClassPattern PatternArgList KeywordPattern KeywordPattern Guard\",\n  maxTerm: 277,\n  context: trackIndent,\n  nodeProps: [\n    [\"isolate\", -5,4,71,72,73,77,\"\"],\n    [\"group\", -15,6,85,87,88,90,92,94,96,98,99,100,102,105,108,110,\"Statement Statement\",-22,8,18,21,25,40,49,50,56,57,60,61,62,63,64,67,70,71,72,79,80,81,82,\"Expression\",-10,114,116,119,121,122,126,128,133,135,138,\"Statement\",-9,143,144,147,148,150,151,152,153,154,\"Pattern\"],\n    [\"openedBy\", 23,\"(\",54,\"[\",58,\"{\"],\n    [\"closedBy\", 24,\")\",55,\"]\",59,\"}\"]\n  ],\n  propSources: [pythonHighlighting],\n  skippedNodes: [0,4],\n  repeatNodeCount: 34,\n  tokenData: \"!2|~R!`OX%TXY%oY[%T[]%o]p%Tpq%oqr'ars)Yst*xtu%Tuv,dvw-hwx.Uxy/tyz0[z{0r{|2S|}2p}!O3W!O!P4_!P!Q:Z!Q!R;k!R![>_![!]Do!]!^Es!^!_FZ!_!`Gk!`!aHX!a!b%T!b!cIf!c!dJU!d!eK^!e!hJU!h!i!#f!i!tJU!t!u!,|!u!wJU!w!x!.t!x!}JU!}#O!0S#O#P&o#P#Q!0j#Q#R!1Q#R#SJU#S#T%T#T#UJU#U#VK^#V#YJU#Y#Z!#f#Z#fJU#f#g!,|#g#iJU#i#j!.t#j#oJU#o#p!1n#p#q!1s#q#r!2a#r#s!2f#s$g%T$g;'SJU;'S;=`KW<%lOJU`%YT&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%T`%lP;=`<%l%To%v]&n`%c_OX%TXY%oY[%T[]%o]p%Tpq%oq#O%T#O#P&o#P#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To&tX&n`OY%TYZ%oZ]%T]^%o^#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc'f[&n`O!_%T!_!`([!`#T%T#T#U(r#U#f%T#f#g(r#g#h(r#h#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc(cTmR&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc(yT!mR&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk)aV&n`&[ZOr%Trs)vs#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk){V&n`Or%Trs*bs#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk*iT&n`&^ZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To+PZS_&n`OY*xYZ%TZ]*x]^%T^#o*x#o#p+r#p#q*x#q#r+r#r;'S*x;'S;=`,^<%lO*x_+wTS_OY+rZ]+r^;'S+r;'S;=`,W<%lO+r_,ZP;=`<%l+ro,aP;=`<%l*xj,kV%rQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tj-XT!xY&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tj-oV%lQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk.]V&n`&ZZOw%Twx.rx#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk.wV&n`Ow%Twx/^x#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk/eT&n`&]ZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk/{ThZ&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc0cTgR&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk0yXVZ&n`Oz%Tz{1f{!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk1mVaR&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk2ZV%oZ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc2wTzR&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To3_W%pZ&n`O!_%T!_!`-Q!`!a3w!a#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Td4OT&{S&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk4fX!fQ&n`O!O%T!O!P5R!P!Q%T!Q![6T![#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk5WV&n`O!O%T!O!P5m!P#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk5tT!rZ&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti6[a!hX&n`O!Q%T!Q![6T![!g%T!g!h7a!h!l%T!l!m9s!m#R%T#R#S6T#S#X%T#X#Y7a#Y#^%T#^#_9s#_#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti7fZ&n`O{%T{|8X|}%T}!O8X!O!Q%T!Q![8s![#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti8^V&n`O!Q%T!Q![8s![#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti8z]!hX&n`O!Q%T!Q![8s![!l%T!l!m9s!m#R%T#R#S8s#S#^%T#^#_9s#_#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti9zT!hX&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk:bX%qR&n`O!P%T!P!Q:}!Q!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tj;UV%sQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti;ro!hX&n`O!O%T!O!P=s!P!Q%T!Q![>_![!d%T!d!e?q!e!g%T!g!h7a!h!l%T!l!m9s!m!q%T!q!rA]!r!z%T!z!{Bq!{#R%T#R#S>_#S#U%T#U#V?q#V#X%T#X#Y7a#Y#^%T#^#_9s#_#c%T#c#dA]#d#l%T#l#mBq#m#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti=xV&n`O!Q%T!Q![6T![#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti>fc!hX&n`O!O%T!O!P=s!P!Q%T!Q![>_![!g%T!g!h7a!h!l%T!l!m9s!m#R%T#R#S>_#S#X%T#X#Y7a#Y#^%T#^#_9s#_#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti?vY&n`O!Q%T!Q!R@f!R!S@f!S#R%T#R#S@f#S#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Ti@mY!hX&n`O!Q%T!Q!R@f!R!S@f!S#R%T#R#S@f#S#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TiAbX&n`O!Q%T!Q!YA}!Y#R%T#R#SA}#S#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TiBUX!hX&n`O!Q%T!Q!YA}!Y#R%T#R#SA}#S#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TiBv]&n`O!Q%T!Q![Co![!c%T!c!iCo!i#R%T#R#SCo#S#T%T#T#ZCo#Z#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TiCv]!hX&n`O!Q%T!Q![Co![!c%T!c!iCo!i#R%T#R#SCo#S#T%T#T#ZCo#Z#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%ToDvV{_&n`O!_%T!_!`E]!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TcEdT%{R&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkEzT#gZ&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkFbXmR&n`O!^%T!^!_F}!_!`([!`!a([!a#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TjGUV%mQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkGrV%zZ&n`O!_%T!_!`([!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkH`WmR&n`O!_%T!_!`([!`!aHx!a#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TjIPV%nQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkIoV_Q#}P&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%ToJ_]&n`&YS%uZO!Q%T!Q![JU![!c%T!c!}JU!}#R%T#R#SJU#S#T%T#T#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUoKZP;=`<%lJUoKge&n`&YS%uZOr%Trs)Ysw%Twx.Ux!Q%T!Q![JU![!c%T!c!tJU!t!uLx!u!}JU!}#R%T#R#SJU#S#T%T#T#fJU#f#gLx#g#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUoMRa&n`&YS%uZOr%TrsNWsw%Twx! vx!Q%T!Q![JU![!c%T!c!}JU!}#R%T#R#SJU#S#T%T#T#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUkN_V&n`&`ZOr%TrsNts#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%TkNyV&n`Or%Trs! `s#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk! gT&n`&bZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk! }V&n`&_ZOw%Twx!!dx#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!!iV&n`Ow%Twx!#Ox#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!#VT&n`&aZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To!#oe&n`&YS%uZOr%Trs!%Qsw%Twx!&px!Q%T!Q![JU![!c%T!c!tJU!t!u!(`!u!}JU!}#R%T#R#SJU#S#T%T#T#fJU#f#g!(`#g#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUk!%XV&n`&dZOr%Trs!%ns#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!%sV&n`Or%Trs!&Ys#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!&aT&n`&fZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!&wV&n`&cZOw%Twx!'^x#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!'cV&n`Ow%Twx!'xx#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!(PT&n`&eZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To!(ia&n`&YS%uZOr%Trs!)nsw%Twx!+^x!Q%T!Q![JU![!c%T!c!}JU!}#R%T#R#SJU#S#T%T#T#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUk!)uV&n`&hZOr%Trs!*[s#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!*aV&n`Or%Trs!*vs#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!*}T&n`&jZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!+eV&n`&gZOw%Twx!+zx#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!,PV&n`Ow%Twx!,fx#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tk!,mT&n`&iZO#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%To!-Vi&n`&YS%uZOr%TrsNWsw%Twx! vx!Q%T!Q![JU![!c%T!c!dJU!d!eLx!e!hJU!h!i!(`!i!}JU!}#R%T#R#SJU#S#T%T#T#UJU#U#VLx#V#YJU#Y#Z!(`#Z#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUo!.}a&n`&YS%uZOr%Trs)Ysw%Twx.Ux!Q%T!Q![JU![!c%T!c!}JU!}#R%T#R#SJU#S#T%T#T#oJU#p#q%T#r$g%T$g;'SJU;'S;=`KW<%lOJUk!0ZT!XZ&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tc!0qT!WR&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%Tj!1XV%kQ&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%T~!1sO!]~k!1zV%jR&n`O!_%T!_!`-Q!`#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%T~!2fO![~i!2mT%tX&n`O#o%T#p#q%T#r;'S%T;'S;=`%i<%lO%T\",\n  tokenizers: [legacyPrint, indentation, newlines, strings, 0, 1, 2, 3, 4],\n  topRules: {\"Script\":[0,5]},\n  specialized: [{term: 221, get: (value) => spec_identifier[value] || -1}],\n  tokenPrec: 7652\n});\n\nexport { parser };\n","import { parser } from '@lezer/python';\nimport { syntaxTree, LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { NodeWeakMap, IterMode } from '@lezer/common';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\n\nconst cache = /*@__PURE__*/new NodeWeakMap();\nconst ScopeNodes = /*@__PURE__*/new Set([\n    \"Script\", \"Body\",\n    \"FunctionDefinition\", \"ClassDefinition\", \"LambdaExpression\",\n    \"ForStatement\", \"MatchClause\"\n]);\nfunction defID(type) {\n    return (node, def, outer) => {\n        if (outer)\n            return false;\n        let id = node.node.getChild(\"VariableName\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst gatherCompletions = {\n    FunctionDefinition: /*@__PURE__*/defID(\"function\"),\n    ClassDefinition: /*@__PURE__*/defID(\"class\"),\n    ForStatement(node, def, outer) {\n        if (outer)\n            for (let child = node.node.firstChild; child; child = child.nextSibling) {\n                if (child.name == \"VariableName\")\n                    def(child, \"variable\");\n                else if (child.name == \"in\")\n                    break;\n            }\n    },\n    ImportStatement(_node, def) {\n        var _a, _b;\n        let { node } = _node;\n        let isFrom = ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.name) == \"from\";\n        for (let ch = node.getChild(\"import\"); ch; ch = ch.nextSibling) {\n            if (ch.name == \"VariableName\" && ((_b = ch.nextSibling) === null || _b === void 0 ? void 0 : _b.name) != \"as\")\n                def(ch, isFrom ? \"variable\" : \"namespace\");\n        }\n    },\n    AssignStatement(node, def) {\n        for (let child = node.node.firstChild; child; child = child.nextSibling) {\n            if (child.name == \"VariableName\")\n                def(child, \"variable\");\n            else if (child.name == \":\" || child.name == \"AssignOp\")\n                break;\n        }\n    },\n    ParamList(node, def) {\n        for (let prev = null, child = node.node.firstChild; child; child = child.nextSibling) {\n            if (child.name == \"VariableName\" && (!prev || !/\\*|AssignOp/.test(prev.name)))\n                def(child, \"variable\");\n            prev = child;\n        }\n    },\n    CapturePattern: /*@__PURE__*/defID(\"variable\"),\n    AsPattern: /*@__PURE__*/defID(\"variable\"),\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(IterMode.IncludeAnonymous).iterate(node => {\n        if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def, top) || !top && ScopeNodes.has(node.name))\n                return false;\n            top = false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier = /^[\\w\\xa1-\\uffff][\\w\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\"String\", \"FormatString\", \"Comment\", \"PropertyName\"];\n/**\nCompletion source that looks up locally defined names in\nPython code.\n*/\nfunction localCompletionSource(context) {\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.name == \"VariableName\" ||\n        inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier\n    };\n}\nconst globals = /*@__PURE__*/[\n    \"__annotations__\", \"__builtins__\", \"__debug__\", \"__doc__\", \"__import__\", \"__name__\",\n    \"__loader__\", \"__package__\", \"__spec__\",\n    \"False\", \"None\", \"True\"\n].map(n => ({ label: n, type: \"constant\" })).concat(/*@__PURE__*/[\n    \"ArithmeticError\", \"AssertionError\", \"AttributeError\", \"BaseException\", \"BlockingIOError\",\n    \"BrokenPipeError\", \"BufferError\", \"BytesWarning\", \"ChildProcessError\", \"ConnectionAbortedError\",\n    \"ConnectionError\", \"ConnectionRefusedError\", \"ConnectionResetError\", \"DeprecationWarning\",\n    \"EOFError\", \"Ellipsis\", \"EncodingWarning\", \"EnvironmentError\", \"Exception\", \"FileExistsError\",\n    \"FileNotFoundError\", \"FloatingPointError\", \"FutureWarning\", \"GeneratorExit\", \"IOError\",\n    \"ImportError\", \"ImportWarning\", \"IndentationError\", \"IndexError\", \"InterruptedError\",\n    \"IsADirectoryError\", \"KeyError\", \"KeyboardInterrupt\", \"LookupError\", \"MemoryError\",\n    \"ModuleNotFoundError\", \"NameError\", \"NotADirectoryError\", \"NotImplemented\", \"NotImplementedError\",\n    \"OSError\", \"OverflowError\", \"PendingDeprecationWarning\", \"PermissionError\", \"ProcessLookupError\",\n    \"RecursionError\", \"ReferenceError\", \"ResourceWarning\", \"RuntimeError\", \"RuntimeWarning\",\n    \"StopAsyncIteration\", \"StopIteration\", \"SyntaxError\", \"SyntaxWarning\", \"SystemError\",\n    \"SystemExit\", \"TabError\", \"TimeoutError\", \"TypeError\", \"UnboundLocalError\", \"UnicodeDecodeError\",\n    \"UnicodeEncodeError\", \"UnicodeError\", \"UnicodeTranslateError\", \"UnicodeWarning\", \"UserWarning\",\n    \"ValueError\", \"Warning\", \"ZeroDivisionError\"\n].map(n => ({ label: n, type: \"type\" }))).concat(/*@__PURE__*/[\n    \"bool\", \"bytearray\", \"bytes\", \"classmethod\", \"complex\", \"float\", \"frozenset\", \"int\", \"list\",\n    \"map\", \"memoryview\", \"object\", \"range\", \"set\", \"staticmethod\", \"str\", \"super\", \"tuple\", \"type\"\n].map(n => ({ label: n, type: \"class\" }))).concat(/*@__PURE__*/[\n    \"abs\", \"aiter\", \"all\", \"anext\", \"any\", \"ascii\", \"bin\", \"breakpoint\", \"callable\", \"chr\",\n    \"compile\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"exec\", \"exit\", \"filter\",\n    \"format\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\", \"input\", \"isinstance\",\n    \"issubclass\", \"iter\", \"len\", \"license\", \"locals\", \"max\", \"min\", \"next\", \"oct\", \"open\",\n    \"ord\", \"pow\", \"print\", \"property\", \"quit\", \"repr\", \"reversed\", \"round\", \"setattr\", \"slice\",\n    \"sorted\", \"sum\", \"vars\", \"zip\"\n].map(n => ({ label: n, type: \"function\" })));\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"def ${name}(${params}):\\n\\t${}\", {\n        label: \"def\",\n        detail: \"function\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for ${name} in ${collection}:\\n\\t${}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"while ${}:\\n\\t${}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try:\\n\\t${}\\nexcept ${error}:\\n\\t${}\", {\n        label: \"try\",\n        detail: \"/ except block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if ${}:\\n\\t\\n\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if ${}:\\n\\t${}\\nelse:\\n\\t${}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name}:\\n\\tdef __init__(self, ${params}):\\n\\t\\t\\t${}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${module}\", {\n        label: \"import\",\n        detail: \"statement\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"from ${module} import ${names}\", {\n        label: \"from\",\n        detail: \"import\",\n        type: \"keyword\"\n    })\n];\n/**\nAutocompletion for built-in Python globals and keywords.\n*/\nconst globalCompletion = /*@__PURE__*/ifNotIn(dontComplete, /*@__PURE__*/completeFromList(/*@__PURE__*/globals.concat(snippets)));\n\nfunction innerBody(context) {\n    let { node, pos } = context;\n    let lineIndent = context.lineIndent(pos, -1);\n    let found = null;\n    for (;;) {\n        let before = node.childBefore(pos);\n        if (!before) {\n            break;\n        }\n        else if (before.name == \"Comment\") {\n            pos = before.from;\n        }\n        else if (before.name == \"Body\") {\n            if (context.baseIndentFor(before) + context.unit <= lineIndent)\n                found = before;\n            node = before;\n        }\n        else if (before.type.is(\"Statement\")) {\n            node = before;\n        }\n        else {\n            break;\n        }\n    }\n    return found;\n}\nfunction indentBody(context, node) {\n    let base = context.baseIndentFor(node);\n    let line = context.lineAt(context.pos, -1), to = line.from + line.text.length;\n    // Don't consider blank, deindented lines at the end of the\n    // block part of the block\n    if (/^\\s*($|#)/.test(line.text) &&\n        context.node.to < to + 100 &&\n        !/\\S/.test(context.state.sliceDoc(to, context.node.to)) &&\n        context.lineIndent(context.pos, -1) <= base)\n        return null;\n    // A normally deindenting keyword that appears at a higher\n    // indentation than the block should probably be handled by the next\n    // level\n    if (/^\\s*(else:|elif |except |finally:)/.test(context.textAfter) && context.lineIndent(context.pos, -1) > base)\n        return null;\n    return base + context.unit;\n}\n/**\nA language provider based on the [Lezer Python\nparser](https://github.com/lezer-parser/python), extended with\nhighlighting and indentation information.\n*/\nconst pythonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"python\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Body: context => {\n                    var _a;\n                    let inner = innerBody(context);\n                    return (_a = indentBody(context, inner || context.node)) !== null && _a !== void 0 ? _a : context.continue();\n                },\n                IfStatement: cx => /^\\s*(else:|elif )/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                \"ForStatement WhileStatement\": cx => /^\\s*else:/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                TryStatement: cx => /^\\s*(except |finally:|else:)/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                \"TupleExpression ComprehensionExpression ParamList ArgList ParenthesizedExpression\": /*@__PURE__*/delimitedIndent({ closing: \")\" }),\n                \"DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression\": /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                \"ArrayExpression ArrayComprehensionExpression\": /*@__PURE__*/delimitedIndent({ closing: \"]\" }),\n                \"String FormatString\": () => null,\n                Script: context => {\n                    var _a;\n                    let inner = innerBody(context);\n                    return (_a = (inner && indentBody(context, inner))) !== null && _a !== void 0 ? _a : context.continue();\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"ArrayExpression DictionaryExpression SetExpression TupleExpression\": foldInside,\n                Body: (node, state) => ({ from: node.from + 1, to: node.to - (node.to == state.doc.length ? 0 : 1) })\n            })\n        ],\n    }),\n    languageData: {\n        closeBrackets: {\n            brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"'],\n            stringPrefixes: [\"f\", \"fr\", \"rf\", \"r\", \"u\", \"b\", \"br\", \"rb\",\n                \"F\", \"FR\", \"RF\", \"R\", \"U\", \"B\", \"BR\", \"RB\"]\n        },\n        commentTokens: { line: \"#\" },\n        indentOnInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/\n    }\n});\n/**\nPython language support.\n*/\nfunction python() {\n    return new LanguageSupport(pythonLanguage, [\n        pythonLanguage.data.of({ autocomplete: localCompletionSource }),\n        pythonLanguage.data.of({ autocomplete: globalCompletion }),\n    ]);\n}\n\nexport { globalCompletion, localCompletionSource, python, pythonLanguage };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { parseMixed } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst scriptText = 54,\n  StartCloseScriptTag = 1,\n  styleText = 55,\n  StartCloseStyleTag = 2,\n  textareaText = 56,\n  StartCloseTextareaTag = 3,\n  EndTag = 4,\n  SelfClosingEndTag = 5,\n  StartTag = 6,\n  StartScriptTag = 7,\n  StartStyleTag = 8,\n  StartTextareaTag = 9,\n  StartSelfClosingTag = 10,\n  StartCloseTag = 11,\n  NoMatchStartCloseTag = 12,\n  MismatchedStartCloseTag = 13,\n  missingCloseTag = 57,\n  IncompleteCloseTag = 14,\n  commentContent$1 = 58,\n  Element = 20,\n  TagName = 22,\n  Attribute = 23,\n  AttributeName = 24,\n  AttributeValue = 26,\n  UnquotedAttributeValue = 27,\n  ScriptText = 28,\n  StyleText = 31,\n  TextareaText = 34,\n  OpenTag = 36,\n  CloseTag = 37,\n  Dialect_noMatch = 0,\n  Dialect_selfClosing = 1;\n\n/* Hand-written tokenizers for HTML. */\n\nconst selfClosers = {\n  area: true, base: true, br: true, col: true, command: true,\n  embed: true, frame: true, hr: true, img: true, input: true,\n  keygen: true, link: true, meta: true, param: true, source: true,\n  track: true, wbr: true, menuitem: true\n};\n\nconst implicitlyClosed = {\n  dd: true, li: true, optgroup: true, option: true, p: true,\n  rp: true, rt: true, tbody: true, td: true, tfoot: true,\n  th: true, tr: true\n};\n\nconst closeOnOpen = {\n  dd: {dd: true, dt: true},\n  dt: {dd: true, dt: true},\n  li: {li: true},\n  option: {option: true, optgroup: true},\n  optgroup: {optgroup: true},\n  p: {\n    address: true, article: true, aside: true, blockquote: true, dir: true,\n    div: true, dl: true, fieldset: true, footer: true, form: true,\n    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,\n    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,\n    p: true, pre: true, section: true, table: true, ul: true\n  },\n  rp: {rp: true, rt: true},\n  rt: {rp: true, rt: true},\n  tbody: {tbody: true, tfoot: true},\n  td: {td: true, th: true},\n  tfoot: {tbody: true},\n  th: {td: true, th: true},\n  thead: {tbody: true, tfoot: true},\n  tr: {tr: true}\n};\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedPos == pos && cachedInput == input) return cachedName\n  let next = input.peek(offset);\n  while (isSpace(next)) next = input.peek(++offset);\n  let name = \"\";\n  for (;;) {\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    next = input.peek(++offset);\n  }\n  // Undefined to signal there's a <? or <!, null for just missing\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null\n}\n\nconst lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash = 45;\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n}\n\nconst startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  strict: false\n});\n\nconst tagStart = new ExternalTokenizer((input, stack) => {\n  if (input.next != lessThan) {\n    // End of file, close any open tags\n    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);\n    return\n  }\n  input.advance();\n  let close = input.next == slash;\n  if (close) input.advance();\n  let name = tagNameAfter(input, 0);\n  if (name === undefined) return\n  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)\n\n  let parent = stack.context ? stack.context.name : null;\n  if (close) {\n    if (name == parent) return input.acceptToken(StartCloseTag)\n    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)\n    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return\n    input.acceptToken(MismatchedStartCloseTag);\n  } else {\n    if (name == \"script\") return input.acceptToken(StartScriptTag)\n    if (name == \"style\") return input.acceptToken(StartStyleTag)\n    if (name == \"textarea\") return input.acceptToken(StartTextareaTag)\n    if (selfClosers.hasOwnProperty(name)) return input.acceptToken(StartSelfClosingTag)\n    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);\n    else input.acceptToken(StartTag);\n  }\n}, {contextual: true});\n\nconst commentContent = new ExternalTokenizer(input => {\n  for (let dashes = 0, i = 0;; i++) {\n    if (input.next < 0) {\n      if (i) input.acceptToken(commentContent$1);\n      break\n    }\n    if (input.next == dash) {\n      dashes++;\n    } else if (input.next == greaterThan && dashes >= 2) {\n      if (i >= 3) input.acceptToken(commentContent$1, -2);\n      break\n    } else {\n      dashes = 0;\n    }\n    input.advance();\n  }\n});\n\nfunction inForeignElement(context) {\n  for (; context; context = context.parent)\n    if (context.name == \"svg\" || context.name == \"math\") return true\n  return false\n}\n\nconst endTag = new ExternalTokenizer((input, stack) => {\n  if (input.next == slash && input.peek(1) == greaterThan) {\n    let selfClosing = stack.dialectEnabled(Dialect_selfClosing) || inForeignElement(stack.context);\n    input.acceptToken(selfClosing ? SelfClosingEndTag : EndTag, 2);\n  } else if (input.next == greaterThan) {\n    input.acceptToken(EndTag, 1);\n  }\n});\n\nfunction contentTokenizer(tag, textToken, endToken) {\n  let lastState = 2 + tag.length;\n  return new ExternalTokenizer(input => {\n    // state means:\n    // - 0 nothing matched\n    // - 1 '<' matched\n    // - 2 '</' + possibly whitespace matched\n    // - 3-(1+tag.length) part of the tag matched\n    // - lastState whole tag + possibly whitespace matched\n    for (let state = 0, matchedLen = 0, i = 0;; i++) {\n      if (input.next < 0) {\n        if (i) input.acceptToken(textToken);\n        break\n      }\n      if (state == 0 && input.next == lessThan ||\n          state == 1 && input.next == slash ||\n          state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {\n        state++;\n        matchedLen++;\n      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {\n        matchedLen++;\n      } else if (state == lastState && input.next == greaterThan) {\n        if (i > matchedLen)\n          input.acceptToken(textToken, -matchedLen);\n        else\n          input.acceptToken(endToken, -(matchedLen - 2));\n        break\n      } else if ((input.next == 10 /* '\\n' */ || input.next == 13 /* '\\r' */) && i) {\n        input.acceptToken(textToken, 1);\n        break\n      } else {\n        state = matchedLen = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst scriptTokens = contentTokenizer(\"script\", scriptText, StartCloseScriptTag);\n\nconst styleTokens = contentTokenizer(\"style\", styleText, StartCloseStyleTag);\n\nconst textareaTokens = contentTokenizer(\"textarea\", textareaText, StartCloseTextareaTag);\n\nconst htmlHighlighting = styleTags({\n  \"Text RawText\": tags.content,\n  \"StartTag StartCloseTag SelfClosingEndTag EndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/TagName\": [tags.tagName,  tags.invalid],\n  AttributeName: tags.attributeName,\n  \"AttributeValue UnquotedAttributeValue\": tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%ZQ&rO,59fO%fQ&rO,59iO%qQ&rO,59lO%|Q&rO,59nOOOa'#D^'#D^O&XOaO'#CxO&dOaO,59[OOOb'#D_'#D_O&lObO'#C{O&wObO,59[OOOd'#D`'#D`O'POdO'#DOO'[OdO,59[OOO`'#Da'#DaO'dO!rO,59[O'kQ#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'pO$fO,59oOOO`,59o,59oO'xQ#|O,59qO'}Q#|O,59rOOO`-E7W-E7WO(SQ&rO'#CsOOQW'#DZ'#DZO(bQ&rO1G.wOOOa1G.w1G.wOOO`1G/Y1G/YO(mQ&rO1G/QOOOb1G/Q1G/QO(xQ&rO1G/TOOOd1G/T1G/TO)TQ&rO1G/WOOO`1G/W1G/WO)`Q&rO1G/YOOOa-E7[-E7[O)kQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)pQ#tO'#C|OOOd-E7^-E7^O)uQ#tO'#DPOOO`-E7_-E7_O)zQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O*PQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOO`7+$t7+$tOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rO*[Q#|O,59eO*aQ#|O,59hO*fQ#|O,59kOOO`1G/X1G/XO*kO7[O'#CvO*|OMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O+_O7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+pOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z\",\n  stateData: \",]~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OT}OhyO~OS!POT}OhyO~OS!ROT}OhyO~OS!TOT}OhyO~OS}OT}OhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXTgXhgX~OS!fOT!gOhyO~OS!hOT!gOhyO~OS!iOT!gOhyO~OS!jOT!gOhyO~OS!gOT!gOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~\",\n  goto: \"%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{!O!Q!S!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ!ObQ!QcQ!SdQ!UeZ!e{!O!Q!S!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp\",\n  nodeNames: \"⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl\",\n  maxTerm: 67,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", -10,1,2,3,7,8,9,10,11,12,13,\"EndTag\",6,\"EndTag SelfClosingEndTag\",-4,21,30,33,36,\"CloseTag\"],\n    [\"openedBy\", 4,\"StartTag StartCloseTag\",5,\"StartTag\",-4,29,32,35,37,\"OpenTag\"],\n    [\"group\", -9,14,17,18,19,20,39,40,41,42,\"Entity\",16,\"Entity TextContent\",-3,28,31,34,\"TextContent Entity\"],\n    [\"isolate\", -11,21,29,30,32,33,35,36,37,38,41,42,\"ltr\",-3,26,27,39,\"\"]\n  ],\n  propSources: [htmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"!<p!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs3_sv-_vw3}wxHYx}-_}!OH{!O!P-_!P!Q$q!Q![-_![!]Mz!]!^-_!^!_!$S!_!`!;x!`!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4U-_4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/ebhSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0rXhSqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0mS1bP;=`<%l0m[1hP;=`<%l/^!V1vchS`P!a`!cpOq&Xqr1krs&}sv1kvw0mwx(tx!P1k!P!Q&X!Q!^1k!^!_*V!_!a&X!a#s1k#s$f&X$f;'S1k;'S;=`3R<%l?Ah1k?Ah?BY&X?BY?Mn1k?MnO&X!V3UP;=`<%l1k!_3[P;=`<%l-_!Z3hV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_4WihSkWc!ROX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst>]tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^/^!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!Z5zbkWOX5uXZ7SZ[5u[^7S^p5uqr5urs7Sst+Ptw5uwx7Sx!]5u!]!^7w!^!a7S!a#S5u#S#T7S#T;'S5u;'S;=`8n<%lO5u!R7VVOp7Sqs7St!]7S!]!^7l!^;'S7S;'S;=`7q<%lO7S!R7qOa!R!R7tP;=`<%l7S!Z8OYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z8qP;=`<%l5u!_8{ihSkWOX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst/^tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^:j!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!_:sbhSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V<QchSOp7Sqr;{rs7Sst0mtw;{wx7Sx!P;{!P!Q7S!Q!];{!]!^=]!^!a7S!a#s;{#s$f7S$f;'S;{;'S;=`>P<%l?Ah;{?Ah?BY7S?BY?Mn;{?MnO7S!V=dXhSa!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!V>SP;=`<%l;{!_>YP;=`<%l8t!_>dhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^/^!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!Z@TakWOX@OXZAYZ[@O[^AY^p@Oqr@OrsAYsw@OwxAYx!]@O!]!^Az!^!aAY!a#S@O#S#TAY#T;'S@O;'S;=`Bq<%lO@O!RA]UOpAYq!]AY!]!^Ao!^;'SAY;'S;=`At<%lOAY!RAtOb!R!RAwP;=`<%lAY!ZBRYkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZBtP;=`<%l@O!_COhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^Dj!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!_DsbhSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VFQbhSOpAYqrE{rsAYswE{wxAYx!PE{!P!QAY!Q!]E{!]!^GY!^!aAY!a#sE{#s$fAY$f;'SE{;'S;=`G|<%l?AhE{?Ah?BYAY?BY?MnE{?MnOAY!VGaXhSb!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!VHPP;=`<%lE{!_HVP;=`<%lBw!ZHcW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aIYlhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OKQ!O!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aK_khS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!`&X!`!aMS!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!TM_X`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!aNZ!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMz!O!PMz!P!Q$q!Q![Mz![!]Mz!]!^-_!^!_*V!_!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f$}-_$}%OMz%O%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4UMz4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Je-_$Je$JgMz$Jg$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!a!$PP;=`<%lMz!R!$ZY!a`!cpOq*Vqr!$yrs(Vsv*Vwx)ex!a*V!a!b!4t!b;'S*V;'S;=`*s<%lO*V!R!%Q]!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!%y!O!f*V!f!g!']!g#W*V#W#X!0`#X;'S*V;'S;=`*s<%lO*V!R!&QX!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!&m!O;'S*V;'S;=`*s<%lO*V!R!&vV!a`!cp!dPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!'dX!a`!cpOr*Vrs(Vsv*Vwx)ex!q*V!q!r!(P!r;'S*V;'S;=`*s<%lO*V!R!(WX!a`!cpOr*Vrs(Vsv*Vwx)ex!e*V!e!f!(s!f;'S*V;'S;=`*s<%lO*V!R!(zX!a`!cpOr*Vrs(Vsv*Vwx)ex!v*V!v!w!)g!w;'S*V;'S;=`*s<%lO*V!R!)nX!a`!cpOr*Vrs(Vsv*Vwx)ex!{*V!{!|!*Z!|;'S*V;'S;=`*s<%lO*V!R!*bX!a`!cpOr*Vrs(Vsv*Vwx)ex!r*V!r!s!*}!s;'S*V;'S;=`*s<%lO*V!R!+UX!a`!cpOr*Vrs(Vsv*Vwx)ex!g*V!g!h!+q!h;'S*V;'S;=`*s<%lO*V!R!+xY!a`!cpOr!+qrs!,hsv!+qvw!-Swx!.[x!`!+q!`!a!/j!a;'S!+q;'S;=`!0Y<%lO!+qq!,mV!cpOv!,hvx!-Sx!`!,h!`!a!-q!a;'S!,h;'S;=`!.U<%lO!,hP!-VTO!`!-S!`!a!-f!a;'S!-S;'S;=`!-k<%lO!-SP!-kO{PP!-nP;=`<%l!-Sq!-xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!.XP;=`<%l!,ha!.aX!a`Or!.[rs!-Ssv!.[vw!-Sw!`!.[!`!a!.|!a;'S!.[;'S;=`!/d<%lO!.[a!/TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!/gP;=`<%l!.[!R!/sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!0]P;=`<%l!+q!R!0gX!a`!cpOr*Vrs(Vsv*Vwx)ex#c*V#c#d!1S#d;'S*V;'S;=`*s<%lO*V!R!1ZX!a`!cpOr*Vrs(Vsv*Vwx)ex#V*V#V#W!1v#W;'S*V;'S;=`*s<%lO*V!R!1}X!a`!cpOr*Vrs(Vsv*Vwx)ex#h*V#h#i!2j#i;'S*V;'S;=`*s<%lO*V!R!2qX!a`!cpOr*Vrs(Vsv*Vwx)ex#m*V#m#n!3^#n;'S*V;'S;=`*s<%lO*V!R!3eX!a`!cpOr*Vrs(Vsv*Vwx)ex#d*V#d#e!4Q#e;'S*V;'S;=`*s<%lO*V!R!4XX!a`!cpOr*Vrs(Vsv*Vwx)ex#X*V#X#Y!+q#Y;'S*V;'S;=`*s<%lO*V!R!4{Y!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!a!4t!a!b!:]!b;'S!4t;'S;=`!;r<%lO!4tq!5pV!cpOv!5kvx!6Vx!a!5k!a!b!7W!b;'S!5k;'S;=`!8V<%lO!5kP!6YTO!a!6V!a!b!6i!b;'S!6V;'S;=`!7Q<%lO!6VP!6lTO!`!6V!`!a!6{!a;'S!6V;'S;=`!7Q<%lO!6VP!7QOxPP!7TP;=`<%l!6Vq!7]V!cpOv!5kvx!6Vx!`!5k!`!a!7r!a;'S!5k;'S;=`!8V<%lO!5kq!7yS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!8YP;=`<%l!5ka!8bX!a`Or!8]rs!6Vsv!8]vw!6Vw!a!8]!a!b!8}!b;'S!8];'S;=`!:V<%lO!8]a!9SX!a`Or!8]rs!6Vsv!8]vw!6Vw!`!8]!`!a!9o!a;'S!8];'S;=`!:V<%lO!8]a!9vT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!:YP;=`<%l!8]!R!:dY!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!`!4t!`!a!;S!a;'S!4t;'S;=`!;r<%lO!4t!R!;]V!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;uP;=`<%l!4t!V!<TXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X\",\n  tokenizers: [scriptTokens, styleTokens, textareaTokens, endTag, tagStart, commentContent, 0, 1, 2, 3, 4, 5],\n  topRules: {\"Document\":[0,15]},\n  dialects: {noMatch: 0, selfClosing: 509},\n  tokenPrec: 511\n});\n\nfunction getAttrs(openTag, input) {\n  let attrs = Object.create(null);\n  for (let att of openTag.getChildren(Attribute)) {\n    let name = att.getChild(AttributeName), value = att.getChild(AttributeValue) || att.getChild(UnquotedAttributeValue);\n    if (name) attrs[input.read(name.from, name.to)] =\n      !value ? \"\" : value.type.id == AttributeValue ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);\n  }\n  return attrs\n}\n\nfunction findTagName(openTag, input) {\n  let tagNameNode = openTag.getChild(TagName);\n  return tagNameNode ? input.read(tagNameNode.from, tagNameNode.to) : \" \"\n}\n\nfunction maybeNest(node, input, tags) {\n  let attrs;\n  for (let tag of tags) {\n    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent.firstChild, input))))\n      return {parser: tag.parser}\n  }\n  return null\n}\n\n// tags?: {\n//   tag: string,\n//   attrs?: ({[attr: string]: string}) => boolean,\n//   parser: Parser\n// }[]\n// attributes?: {\n//   name: string,\n//   tagName?: string,\n//   parser: Parser\n// }[]\n \nfunction configureNesting(tags = [], attributes = []) {\n  let script = [], style = [], textarea = [], other = [];\n  for (let tag of tags) {\n    let array = tag.tag == \"script\" ? script : tag.tag == \"style\" ? style : tag.tag == \"textarea\" ? textarea : other;\n    array.push(tag);\n  }\n  let attrs = attributes.length ? Object.create(null) : null;\n  for (let attr of attributes) (attrs[attr.name] || (attrs[attr.name] = [])).push(attr);\n\n  return parseMixed((node, input) => {\n    let id = node.type.id;\n    if (id == ScriptText) return maybeNest(node, input, script)\n    if (id == StyleText) return maybeNest(node, input, style)\n    if (id == TextareaText) return maybeNest(node, input, textarea)\n\n    if (id == Element && other.length) {\n      let n = node.node, open = n.firstChild, tagName = open && findTagName(open, input), attrs;\n      if (tagName) for (let tag of other) {\n        if (tag.tag == tagName && (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(open, input))))) {\n          let close = n.lastChild;\n          let to = close.type.id == CloseTag ? close.from : n.to;\n          if (to > open.to)\n            return {parser: tag.parser, overlay: [{from: open.to, to}]}\n        }\n      }\n    }\n\n    if (attrs && id == Attribute) {\n      let n = node.node, nameNode;\n      if (nameNode = n.firstChild) {\n        let matches = attrs[input.read(nameNode.from, nameNode.to)];\n        if (matches) for (let attr of matches) {\n          if (attr.tagName && attr.tagName != findTagName(n.parent, input)) continue\n          let value = n.lastChild;\n          if (value.type.id == AttributeValue) {\n            let from = value.from + 1;\n            let last = value.lastChild, to = value.to - (last && last.isError ? 0 : 1);\n            if (to > from) return {parser: attr.parser, overlay: [{from, to}]}\n          } else if (value.type.id == UnquotedAttributeValue) {\n            return {parser: attr.parser, overlay: [{from: value.from, to: value.to}]}\n          }\n        }\n      }\n    }\n    return null\n  })\n}\n\nexport { configureNesting, parser };\n","import { ExternalTokenizer, LRParser, LocalTokenGroup } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst descendantOp = 99,\n  Unit = 1,\n  callee = 100,\n  identifier = 101,\n  VariableName = 2;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37, ampersand = 38, backslash = 92, newline = 10;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else if (next == backslash && input.peek(1) != newline) {\n      input.advance();\n      if (input.next > -1) input.advance();\n      inside = true;\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon && isAlpha(input.peek(1)) ||\n        next == dash || next == ampersand)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next) || isDigit(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nconst cssHighlighting = styleTags({\n  \"AtKeyword import charset namespace keyframes media supports\": tags.definitionKeyword,\n  \"from to selector\": tags.keyword,\n  NamespaceName: tags.namespace,\n  KeyframeName: tags.labelName,\n  KeyframeRangeName: tags.operatorKeyword,\n  TagName: tags.tagName,\n  ClassName: tags.className,\n  PseudoClassName: tags.constant(tags.className),\n  IdName: tags.labelName,\n  \"FeatureName PropertyName\": tags.propertyName,\n  AttributeName: tags.attributeName,\n  NumberLiteral: tags.number,\n  KeywordQuery: tags.keyword,\n  UnaryQueryOp: tags.operatorKeyword,\n  \"CallTag ValueName\": tags.atom,\n  VariableName: tags.variableName,\n  Callee: tags.operatorKeyword,\n  Unit: tags.unit,\n  \"UniversalSelector NestingSelector\": tags.definitionOperator,\n  MatchOp: tags.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags.logicOperator,\n  BinOp: tags.arithmeticOperator,\n  Important: tags.modifier,\n  Comment: tags.blockComment,\n  ColorLiteral: tags.color,\n  \"ParenthesizedContent StringLiteral\": tags.string,\n  \":\": tags.punctuation,\n  \"PseudoOp #\": tags.derefOperator,\n  \"; ,\": tags.separator,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_callee = {__proto__:null,lang:32, \"nth-child\":32, \"nth-last-child\":32, \"nth-of-type\":32, \"nth-last-of-type\":32, dir:32, \"host-context\":32, url:60, \"url-prefix\":60, domain:60, regexp:60, selector:138};\nconst spec_AtKeyword = {__proto__:null,\"@import\":118, \"@media\":142, \"@charset\":146, \"@namespace\":150, \"@keyframes\":156, \"@supports\":168};\nconst spec_identifier = {__proto__:null,not:132, only:132};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \":jQYQ[OOO#_Q[OOP#fOWOOOOQP'#Cd'#CdOOQP'#Cc'#CcO#kQ[O'#CfO$_QXO'#CaO$fQ[O'#ChO$qQ[O'#DTO$vQ[O'#DWOOQP'#Em'#EmO${QdO'#DgO%jQ[O'#DtO${QdO'#DvO%{Q[O'#DxO&WQ[O'#D{O&`Q[O'#ERO&nQ[O'#ETOOQS'#El'#ElOOQS'#EW'#EWQYQ[OOO&uQXO'#CdO'jQWO'#DcO'oQWO'#EsO'zQ[O'#EsQOQWOOP(UO#tO'#C_POOO)C@[)C@[OOQP'#Cg'#CgOOQP,59Q,59QO#kQ[O,59QO(aQ[O'#E[O({QWO,58{O)TQ[O,59SO$qQ[O,59oO$vQ[O,59rO(aQ[O,59uO(aQ[O,59wO(aQ[O,59xO)`Q[O'#DbOOQS,58{,58{OOQP'#Ck'#CkOOQO'#DR'#DROOQP,59S,59SO)gQWO,59SO)lQWO,59SOOQP'#DV'#DVOOQP,59o,59oOOQO'#DX'#DXO)qQ`O,59rOOQS'#Cp'#CpO${QdO'#CqO)yQvO'#CsO+ZQtO,5:ROOQO'#Cx'#CxO)lQWO'#CwO+oQWO'#CyO+tQ[O'#DOOOQS'#Ep'#EpOOQO'#Dj'#DjO+|Q[O'#DqO,[QWO'#EtO&`Q[O'#DoO,jQWO'#DrOOQO'#Eu'#EuO)OQWO,5:`O,oQpO,5:bOOQS'#Dz'#DzO,wQWO,5:dO,|Q[O,5:dOOQO'#D}'#D}O-UQWO,5:gO-ZQWO,5:mO-cQWO,5:oOOQS-E8U-E8UO-kQdO,59}O-{Q[O'#E^O.YQWO,5;_O.YQWO,5;_POOO'#EV'#EVP.eO#tO,58yPOOO,58y,58yOOQP1G.l1G.lO/[QXO,5:vOOQO-E8Y-E8YOOQS1G.g1G.gOOQP1G.n1G.nO)gQWO1G.nO)lQWO1G.nOOQP1G/Z1G/ZO/iQ`O1G/^O0SQXO1G/aO0jQXO1G/cO1QQXO1G/dO1hQWO,59|O1mQ[O'#DSO1tQdO'#CoOOQP1G/^1G/^O${QdO1G/^O1{QpO,59]OOQS,59_,59_O${QdO,59aO2TQWO1G/mOOQS,59c,59cO2YQ!bO,59eOOQS'#DP'#DPOOQS'#EY'#EYO2eQ[O,59jOOQS,59j,59jO2mQWO'#DjO2xQWO,5:VO2}QWO,5:]O&`Q[O,5:XO&`Q[O'#E_O3VQWO,5;`O3bQWO,5:ZO(aQ[O,5:^OOQS1G/z1G/zOOQS1G/|1G/|OOQS1G0O1G0OO3sQWO1G0OO3xQdO'#EOOOQS1G0R1G0ROOQS1G0X1G0XOOQS1G0Z1G0ZO4TQtO1G/iOOQO1G/i1G/iOOQO,5:x,5:xO4kQ[O,5:xOOQO-E8[-E8[O4xQWO1G0yPOOO-E8T-E8TPOOO1G.e1G.eOOQP7+$Y7+$YOOQP7+$x7+$xO${QdO7+$xOOQS1G/h1G/hO5TQXO'#ErO5[QWO,59nO5aQtO'#EXO6XQdO'#EoO6cQWO,59ZO6hQpO7+$xOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%X7+%XOOQS1G/P1G/PO6pQWO1G/POOQS-E8W-E8WOOQS1G/U1G/UO${QdO1G/qOOQO1G/w1G/wOOQO1G/s1G/sO6uQWO,5:yOOQO-E8]-E8]O7TQXO1G/xOOQS7+%j7+%jO7[QYO'#CsOOQO'#EQ'#EQO7gQ`O'#EPOOQO'#EP'#EPO7rQWO'#E`O7zQdO,5:jOOQS,5:j,5:jO8VQtO'#E]O${QdO'#E]O9WQdO7+%TOOQO7+%T7+%TOOQO1G0d1G0dO9kQpO<<HdO9sQWO,5;^OOQP1G/Y1G/YOOQS-E8V-E8VO${QdO'#EZO9{QWO,5;ZOOQT1G.u1G.uOOQP<<Hd<<HdOOQS7+$k7+$kO:TQdO7+%]OOQO7+%d7+%dOOQO,5:k,5:kO3{QdO'#EaO7rQWO,5:zOOQS,5:z,5:zOOQS-E8^-E8^OOQS1G0U1G0UO:[QtO,5:wOOQS-E8Z-E8ZOOQO<<Ho<<HoOOQPAN>OAN>OO;]QdO,5:uOOQO-E8X-E8XOOQO<<Hw<<HwOOQO,5:{,5:{OOQO-E8_-E8_OOQS1G0f1G0f\",\n  stateData: \";o~O#ZOS#[QQ~OUYOXYO]VO^VOqXOxWO![aO!]ZO!i[O!k]O!m^O!p_O!v`O#XRO#bTO~OQfOUYOXYO]VO^VOqXOxWO![aO!]ZO!i[O!k]O!m^O!p_O!v`O#XeO#bTO~O#U#gP~P!ZO#[jO~O#XlO~O]qO^qOqsOtoOxrO!OtO!RvO#VuO#bnO~O!TwO~P#pO`}O#WzO#XyO~O#X!OO~O#X!QO~OQ![Ob!TOf![Oh![On!YOq!ZO#W!WO#X!SO#e!UO~Ob!^O!d!`O!g!aO#X!]O!T#hP~Oh!fOn!YO#X!eO~Oh!hO#X!hO~Ob!^O!d!`O!g!aO#X!]O~O!Y#hP~P%jO]WX]!WX^WXqWXtWXxWX!OWX!RWX!TWX#VWX#bWX~O]!mO~O!Y!nO#U#gX!S#gX~O#U#gX!S#gX~P!ZO#]!qO#^!qO#_!sO~OUYOXYO]VO^VOqXOxWO#XRO#bTO~OtoO!TwO~O`!zO#WzO#XyO~O!S#gP~P!ZOb#RO~Ob#SO~Op#TO|#UO~OP#WObgXjgX!YgX!dgX!ggX#XgXagXQgXfgXhgXngXqgXtgX!XgX#UgX#WgX#egXpgX!SgX~Ob!^Oj#XO!d!`O!g!aO#X!]O!Y#hP~Ob#[O~Op#`O#X#]O~Ob!^O!d!`O!g!aO#X#aO~Ot#eO!b#dO!T#hX!Y#hX~Ob#hO~Oj#XO!Y#jO~O!Y#kO~Oh#lOn!YO~O!T#mO~O!TwO!b#dO~O!TwO!Y#pO~O!X#rO!Y!Va#U!Va!S!Va~P${O!Y#QX#U#QX!S#QX~P!ZO!Y!nO#U#ga!S#ga~O#]!qO#^!qO#_#xO~O]qO^qOqsOxrO!OtO!RvO#VuO#bnO~Ot#Oa!T#Oaa#Oa~P.pOp#zO|#{O~O]qO^qOqsOxrO#bnO~Ot}i!O}i!R}i!T}i#V}ia}i~P/qOt!Pi!O!Pi!R!Pi!T!Pi#V!Pia!Pi~P/qOt!Qi!O!Qi!R!Qi!T!Qi#V!Qia!Qi~P/qO!S#|O~Oa#fP~P(aOa#cP~P${Oa$TOj#XO~O!Y$VO~Oa$WOh$XOo$XO~Op$ZO#X#]O~O]!`Xa!^X!b!^X~O]$[O~Oa$]O!b#dO~Ot#eO!T#ha!Y#ha~O!b#dOt!ca!T!ca!Y!caa!ca~O!Y$bO~O!S$iO#X$dO#e$cO~Oj#XOt$kO!X$mO!Y!Vi#U!Vi!S!Vi~P${O!Y#Qa#U#Qa!S#Qa~P!ZO!Y!nO#U#gi!S#gi~Oa#fX~P#pOa$qO~Oj#XOQ!{Xa!{Xb!{Xf!{Xh!{Xn!{Xq!{Xt!{X#W!{X#X!{X#e!{X~Ot$sOa#cX~P${Oa$uO~Oj#XOp$vO~Oa$wO~O!b#dOt#Ra!T#Ra!Y#Ra~Oa$yO~P.pOP#WOtgX!TgX~O#e$cOt!sX!T!sX~Ot${O!TwO~O!S%PO#X$dO#e$cO~Oj#XOQ#PXb#PXf#PXh#PXn#PXq#PXt#PX!X#PX!Y#PX#U#PX#W#PX#X#PX#e#PX!S#PX~Ot$kO!X%SO!Y!Vq#U!Vq!S!Vq~P${Oj#XOp%TO~OtoOa#fa~Ot$sOa#ca~Oa%WO~P${Oj#XOQ#Pab#Paf#Pah#Pan#Paq#Pat#Pa!X#Pa!Y#Pa#U#Pa#W#Pa#X#Pa#e#Pa!S#Pa~Oa!}at!}a~P${O#Zo#[#ej!R#e~\",\n  goto: \"-g#jPPP#kP#nP#w$WP#w$g#wPP$mPPP$s$|$|P%`P$|P$|%z&^PPPP$|&vP&z'Q#wP'W#w'^P#wP#w#wPPP'd'y(WPP#nPP(_(_(i(_P(_P(_(_P#nP#nP#nP(l#nP(o(r(u(|#nP#nP)R)X)h)v)|*S*^*d*n*t*zPPPPPPPPPP+Q+ZP+v+yP,o,r,x-RRkQ_bOPdhw!n#tkYOPdhotuvw!n#R#h#tkSOPdhotuvw!n#R#h#tQmTR!tnQ{VR!xqQ!x}Q#Z!XR#y!zq![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UU$f#m$h${R$z$eq!XZ]!T!m#S#U#X#q#{$Q$[$k$l$s$x%Up![Z]!T!m#S#U#X#q#{$Q$[$k$l$s$x%UQ!f^R#l!gT#^!Z#_Q|VR!yqQ!x|R#y!yQ!PWR!{rQ!RXR!|sQxUQ!wpQ#i!cQ#o!jQ#p!kQ$}$gR%Z$|SgPwQ!phQ#s!nR$n#tZfPhw!n#ta!b[`a!V!^!`#d#eR#b!^R!g^R!i_R#n!iS$g#m$hR%X${V$e#m$h${Q!rjR#w!rQdOShPwU!ldh#tR#t!nQ$Q#SU$r$Q$x%UQ$x$[R%U$sQ#_!ZR$Y#_Q$t$QR%V$tQpUS!vp$pR$p#}Q$l#qR%R$lQ!ogS#u!o#vR#v!pQ#f!_R$`#fQ$h#mR%O$hQ$|$gR%Y$|_cOPdhw!n#t^UOPdhw!n#tQ!uoQ!}tQ#OuQ#PvQ#}#RR$a#hR$R#SQ!VZQ!d]Q#V!TQ#q!m[$P#S$Q$[$s$x%UQ$S#UQ$U#XS$j#q$lQ$o#{R%Q$kR$O#RQiPR#QwQ!c[Q!kaR#Y!VU!_[a!VQ!j`Q#c!^Q#g!`Q$^#dR$_#e\",\n  nodeNames: \"⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent ] [ LineNames LineName , PseudoClassName ArgList IdSelector # IdName AttributeSelector AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList KeyframeSelector KeyframeRangeName SupportsStatement supports AtRule Styles\",\n  maxTerm: 117,\n  nodeProps: [\n    [\"isolate\", -2,3,24,\"\"],\n    [\"openedBy\", 17,\"(\",32,\"[\",50,\"{\"],\n    [\"closedBy\", 18,\")\",33,\"]\",51,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,3,87],\n  repeatNodeCount: 11,\n  tokenData: \"J^~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Ab![!]B]!]!^CX!^!_$}!_!`Cj!`!aC{!a!b$}!b!cDw!c!}$}!}#OFa#O#P$}#P#QFr#Q#R6d#R#T$}#T#UGT#U#c$}#c#dHf#d#o$}#o#pH{#p#q6d#q#rI^#r#sIo#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`JW<%lO$}`%QSOy%^z;'S%^;'S;=`%o<%lO%^`%cSo`Oy%^z;'S%^;'S;=`%o<%lO%^`%rP;=`<%l%^~%zh#Z~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#Z~o`OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^l)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^l)sUo`Oy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^l*[Uo`Oy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^l*sUo`Oy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^l+[Uo`Oy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^l+sUo`Oy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^l,[Uo`Oy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^l,sUo`Oy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^l-[Uo`Oy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^l-uS!X[o`Oy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOh~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.Rn/zYxQOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^l0oYo`Oy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^l1dYo`Oy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^l2ZYf[o`Oy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^l3QYf[o`Oy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^l3uYo`Oy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^l4lYf[o`Oy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^l5aYo`Oy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^l6WSf[o`Oy%^z;'S%^;'S;=`%o<%lO%^d6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^d7QS|So`Oy%^z;'S%^;'S;=`%o<%lO%^b7cSXQOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7on9cSb^Oy%^z;'S%^;'S;=`%o<%lO%^~9tOa~n9{UUQjWOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^n:fWjW!RQOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^l;TUo`Oy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^l;nYo`#e[Oy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^l<cYo`Oy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=WUo`Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=qUo`#e[Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l>[[o`#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^n?VSt^Oy%^z;'S%^;'S;=`%o<%lO%^l?hWjWOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^n@VU#bQOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTjWOy%^z{@}{;'S%^;'S;=`%o<%lO%^~AUSo`#[~Oy%^z;'S%^;'S;=`%o<%lO%^lAg[#e[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^bBbU]QOy%^z![%^![!]Bt!];'S%^;'S;=`%o<%lO%^bB{S^Qo`Oy%^z;'S%^;'S;=`%o<%lO%^nC^S!Y^Oy%^z;'S%^;'S;=`%o<%lO%^dCoS|SOy%^z;'S%^;'S;=`%o<%lO%^bDQU!OQOy%^z!`%^!`!aDd!a;'S%^;'S;=`%o<%lO%^bDkS!OQo`Oy%^z;'S%^;'S;=`%o<%lO%^bDzWOy%^z!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^bEk[![Qo`Oy%^z}%^}!OEd!O!Q%^!Q![Ed![!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^nFfSq^Oy%^z;'S%^;'S;=`%o<%lO%^nFwSp^Oy%^z;'S%^;'S;=`%o<%lO%^bGWUOy%^z#b%^#b#cGj#c;'S%^;'S;=`%o<%lO%^bGoUo`Oy%^z#W%^#W#XHR#X;'S%^;'S;=`%o<%lO%^bHYS!bQo`Oy%^z;'S%^;'S;=`%o<%lO%^bHiUOy%^z#f%^#f#gHR#g;'S%^;'S;=`%o<%lO%^fIQS!TUOy%^z;'S%^;'S;=`%o<%lO%^nIcS!S^Oy%^z;'S%^;'S;=`%o<%lO%^fItU!RQOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^`JZP;=`<%l$}\",\n  tokenizers: [descendant, unitToken, identifiers, 1, 2, 3, 4, new LocalTokenGroup(\"m~RRYZ[z{a~~g~aO#^~~dP!P!Qg~lO#_~~\", 28, 105)],\n  topRules: {\"StyleSheet\":[0,4],\"Styles\":[1,86]},\n  specialized: [{term: 100, get: (value) => spec_callee[value] || -1},{term: 58, get: (value) => spec_AtKeyword[value] || -1},{term: 101, get: (value) => spec_identifier[value] || -1}],\n  tokenPrec: 1219\n});\n\nexport { parser };\n","import { parser } from '@lezer/css';\nimport { syntaxTree, LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { NodeWeakMap, IterMode } from '@lezer/common';\n\nlet _properties = null;\nfunction properties() {\n    if (!_properties && typeof document == \"object\" && document.body) {\n        let { style } = document.body, names = [], seen = new Set;\n        for (let prop in style)\n            if (prop != \"cssText\" && prop != \"cssFloat\") {\n                if (typeof style[prop] == \"string\") {\n                    if (/[A-Z]/.test(prop))\n                        prop = prop.replace(/[A-Z]/g, ch => \"-\" + ch.toLowerCase());\n                    if (!seen.has(prop)) {\n                        names.push(prop);\n                        seen.add(prop);\n                    }\n                }\n            }\n        _properties = names.sort().map(name => ({ type: \"property\", label: name }));\n    }\n    return _properties || [];\n}\nconst pseudoClasses = /*@__PURE__*/[\n    \"active\", \"after\", \"any-link\", \"autofill\", \"backdrop\", \"before\",\n    \"checked\", \"cue\", \"default\", \"defined\", \"disabled\", \"empty\",\n    \"enabled\", \"file-selector-button\", \"first\", \"first-child\",\n    \"first-letter\", \"first-line\", \"first-of-type\", \"focus\",\n    \"focus-visible\", \"focus-within\", \"fullscreen\", \"has\", \"host\",\n    \"host-context\", \"hover\", \"in-range\", \"indeterminate\", \"invalid\",\n    \"is\", \"lang\", \"last-child\", \"last-of-type\", \"left\", \"link\", \"marker\",\n    \"modal\", \"not\", \"nth-child\", \"nth-last-child\", \"nth-last-of-type\",\n    \"nth-of-type\", \"only-child\", \"only-of-type\", \"optional\", \"out-of-range\",\n    \"part\", \"placeholder\", \"placeholder-shown\", \"read-only\", \"read-write\",\n    \"required\", \"right\", \"root\", \"scope\", \"selection\", \"slotted\", \"target\",\n    \"target-text\", \"valid\", \"visited\", \"where\"\n].map(name => ({ type: \"class\", label: name }));\nconst values = /*@__PURE__*/[\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"after-white-space\",\n    \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\",\n    \"antialiased\", \"appworkspace\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\",\n    \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\",\n    \"bidi-override\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"capitalize\",\n    \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\",\n    \"cjk-decimal\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\",\n    \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\",\n    \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\",\n    \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\",\n    \"destination-out\", \"destination-over\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\",\n    \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\",\n    \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\",\n    \"ethiopic-abegede-gez\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-gez\", \"ew-resize\", \"exclusion\",\n    \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\",\n    \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\",\n    \"geometricPrecision\", \"graytext\", \"grid\", \"groove\", \"hand\", \"hard-light\", \"help\", \"hidden\", \"hide\",\n    \"higher\", \"highlight\", \"highlighttext\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\",\n    \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\",\n    \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"justify\", \"keep-all\",\n    \"landscape\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\",\n    \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\",\n    \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lowercase\", \"ltr\", \"luminosity\", \"manipulation\",\n    \"match\", \"matrix\", \"matrix3d\", \"medium\", \"menu\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"n-resize\", \"narrower\",\n    \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\",\n    \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\",\n    \"oblique\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"outset\", \"outside\",\n    \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\",\n    \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\",\n    \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\",\n    \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\",\n    \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\",\n    \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\",\n    \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\",\n    \"se-resize\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\",\n    \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\",\n    \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"source-atop\", \"source-in\", \"source-out\",\n    \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"start\",\n    \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\",\n    \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\",\n    \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\",\n    \"table-row-group\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thick\", \"thin\",\n    \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"to\", \"top\",\n    \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\",\n    \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-latin\",\n    \"uppercase\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\",\n    \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\",\n    \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"\n].map(name => ({ type: \"keyword\", label: name })).concat(/*@__PURE__*/[\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n].map(name => ({ type: \"constant\", label: name })));\nconst tags = /*@__PURE__*/[\n    \"a\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"blockquote\", \"body\",\n    \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\",\n    \"form\", \"header\", \"hgroup\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"meter\", \"nav\", \"ol\", \"output\",\n    \"p\", \"pre\", \"ruby\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"sub\", \"summary\",\n    \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n].map(name => ({ type: \"type\", label: name }));\nconst atRules = /*@__PURE__*/[\n    \"@charset\", \"@color-profile\", \"@container\", \"@counter-style\", \"@font-face\", \"@font-feature-values\",\n    \"@font-palette-values\", \"@import\", \"@keyframes\", \"@layer\", \"@media\", \"@namespace\", \"@page\",\n    \"@position-try\", \"@property\", \"@scope\", \"@starting-style\", \"@supports\", \"@view-transition\"\n].map(label => ({ type: \"keyword\", label }));\nconst identifier = /^(\\w[\\w-]*|-\\w[\\w-]*|)$/, variable = /^-(-[\\w-]*)?$/;\nfunction isVarArg(node, doc) {\n    var _a;\n    if (node.name == \"(\" || node.type.isError)\n        node = node.parent || node;\n    if (node.name != \"ArgList\")\n        return false;\n    let callee = (_a = node.parent) === null || _a === void 0 ? void 0 : _a.firstChild;\n    if ((callee === null || callee === void 0 ? void 0 : callee.name) != \"Callee\")\n        return false;\n    return doc.sliceString(callee.from, callee.to) == \"var\";\n}\nconst VariablesByNode = /*@__PURE__*/new NodeWeakMap();\nconst declSelector = [\"Declaration\"];\nfunction astTop(node) {\n    for (let cur = node;;) {\n        if (cur.type.isTop)\n            return cur;\n        if (!(cur = cur.parent))\n            return node;\n    }\n}\nfunction variableNames(doc, node, isVariable) {\n    if (node.to - node.from > 4096) {\n        let known = VariablesByNode.get(node);\n        if (known)\n            return known;\n        let result = [], seen = new Set, cursor = node.cursor(IterMode.IncludeAnonymous);\n        if (cursor.firstChild())\n            do {\n                for (let option of variableNames(doc, cursor.node, isVariable))\n                    if (!seen.has(option.label)) {\n                        seen.add(option.label);\n                        result.push(option);\n                    }\n            } while (cursor.nextSibling());\n        VariablesByNode.set(node, result);\n        return result;\n    }\n    else {\n        let result = [], seen = new Set;\n        node.cursor().iterate(node => {\n            var _a;\n            if (isVariable(node) && node.matchContext(declSelector) && ((_a = node.node.nextSibling) === null || _a === void 0 ? void 0 : _a.name) == \":\") {\n                let name = doc.sliceString(node.from, node.to);\n                if (!seen.has(name)) {\n                    seen.add(name);\n                    result.push({ label: name, type: \"variable\" });\n                }\n            }\n        });\n        return result;\n    }\n}\n/**\nCreate a completion source for a CSS dialect, providing a\npredicate for determining what kind of syntax node can act as a\ncompletable variable. This is used by language modes like Sass and\nLess to reuse this package's completion logic.\n*/\nconst defineCSSCompletionSource = (isVariable) => context => {\n    let { state, pos } = context, node = syntaxTree(state).resolveInner(pos, -1);\n    let isDash = node.type.isError && node.from == node.to - 1 && state.doc.sliceString(node.from, node.to) == \"-\";\n    if (node.name == \"PropertyName\" ||\n        (isDash || node.name == \"TagName\") && /^(Block|Styles)$/.test(node.resolve(node.to).name))\n        return { from: node.from, options: properties(), validFor: identifier };\n    if (node.name == \"ValueName\")\n        return { from: node.from, options: values, validFor: identifier };\n    if (node.name == \"PseudoClassName\")\n        return { from: node.from, options: pseudoClasses, validFor: identifier };\n    if (isVariable(node) || (context.explicit || isDash) && isVarArg(node, state.doc))\n        return { from: isVariable(node) || isDash ? node.from : pos,\n            options: variableNames(state.doc, astTop(node), isVariable),\n            validFor: variable };\n    if (node.name == \"TagName\") {\n        for (let { parent } = node; parent; parent = parent.parent)\n            if (parent.name == \"Block\")\n                return { from: node.from, options: properties(), validFor: identifier };\n        return { from: node.from, options: tags, validFor: identifier };\n    }\n    if (node.name == \"AtKeyword\")\n        return { from: node.from, options: atRules, validFor: identifier };\n    if (!context.explicit)\n        return null;\n    let above = node.resolve(pos), before = above.childBefore(pos);\n    if (before && before.name == \":\" && above.name == \"PseudoClassSelector\")\n        return { from: pos, options: pseudoClasses, validFor: identifier };\n    if (before && before.name == \":\" && above.name == \"Declaration\" || above.name == \"ArgList\")\n        return { from: pos, options: values, validFor: identifier };\n    if (above.name == \"Block\" || above.name == \"Styles\")\n        return { from: pos, options: properties(), validFor: identifier };\n    return null;\n};\n/**\nCSS property, variable, and value keyword completion source.\n*/\nconst cssCompletionSource = /*@__PURE__*/defineCSSCompletionSource(n => n.name == \"VariableName\");\n\n/**\nA language provider based on the [Lezer CSS\nparser](https://github.com/lezer-parser/css), extended with\nhighlighting and indentation information.\n*/\nconst cssLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"css\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block KeyframeList\": foldInside\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"-\"\n    }\n});\n/**\nLanguage support for CSS.\n*/\nfunction css() {\n    return new LanguageSupport(cssLanguage, cssLanguage.data.of({ autocomplete: cssCompletionSource }));\n}\n\nexport { css, cssCompletionSource, cssLanguage, defineCSSCompletionSource };\n","import { parser, configureNesting } from '@lezer/html';\nimport { cssLanguage, css } from '@codemirror/lang-css';\nimport { javascriptLanguage, typescriptLanguage, jsxLanguage, tsxLanguage, javascript } from '@codemirror/lang-javascript';\nimport { EditorView } from '@codemirror/view';\nimport { EditorSelection } from '@codemirror/state';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\n\nconst Targets = [\"_blank\", \"_self\", \"_top\", \"_parent\"];\nconst Charsets = [\"ascii\", \"utf-8\", \"utf-16\", \"latin1\", \"latin1\"];\nconst Methods = [\"get\", \"post\", \"put\", \"delete\"];\nconst Encs = [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"];\nconst Bool = [\"true\", \"false\"];\nconst S = {}; // Empty tag spec\nconst Tags = {\n    a: {\n        attrs: {\n            href: null, ping: null, type: null,\n            media: null,\n            target: Targets,\n            hreflang: null\n        }\n    },\n    abbr: S,\n    address: S,\n    area: {\n        attrs: {\n            alt: null, coords: null, href: null, target: null, ping: null,\n            media: null, hreflang: null, type: null,\n            shape: [\"default\", \"rect\", \"circle\", \"poly\"]\n        }\n    },\n    article: S,\n    aside: S,\n    audio: {\n        attrs: {\n            src: null, mediagroup: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"none\", \"metadata\", \"auto\"],\n            autoplay: [\"autoplay\"],\n            loop: [\"loop\"],\n            controls: [\"controls\"]\n        }\n    },\n    b: S,\n    base: { attrs: { href: null, target: Targets } },\n    bdi: S,\n    bdo: S,\n    blockquote: { attrs: { cite: null } },\n    body: S,\n    br: S,\n    button: {\n        attrs: {\n            form: null, formaction: null, name: null, value: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"autofocus\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            type: [\"submit\", \"reset\", \"button\"]\n        }\n    },\n    canvas: { attrs: { width: null, height: null } },\n    caption: S,\n    center: S,\n    cite: S,\n    code: S,\n    col: { attrs: { span: null } },\n    colgroup: { attrs: { span: null } },\n    command: {\n        attrs: {\n            type: [\"command\", \"checkbox\", \"radio\"],\n            label: null, icon: null, radiogroup: null, command: null, title: null,\n            disabled: [\"disabled\"],\n            checked: [\"checked\"]\n        }\n    },\n    data: { attrs: { value: null } },\n    datagrid: { attrs: { disabled: [\"disabled\"], multiple: [\"multiple\"] } },\n    datalist: { attrs: { data: null } },\n    dd: S,\n    del: { attrs: { cite: null, datetime: null } },\n    details: { attrs: { open: [\"open\"] } },\n    dfn: S,\n    div: S,\n    dl: S,\n    dt: S,\n    em: S,\n    embed: { attrs: { src: null, type: null, width: null, height: null } },\n    eventsource: { attrs: { src: null } },\n    fieldset: { attrs: { disabled: [\"disabled\"], form: null, name: null } },\n    figcaption: S,\n    figure: S,\n    footer: S,\n    form: {\n        attrs: {\n            action: null, name: null,\n            \"accept-charset\": Charsets,\n            autocomplete: [\"on\", \"off\"],\n            enctype: Encs,\n            method: Methods,\n            novalidate: [\"novalidate\"],\n            target: Targets\n        }\n    },\n    h1: S, h2: S, h3: S, h4: S, h5: S, h6: S,\n    head: {\n        children: [\"title\", \"base\", \"link\", \"style\", \"meta\", \"script\", \"noscript\", \"command\"]\n    },\n    header: S,\n    hgroup: S,\n    hr: S,\n    html: {\n        attrs: { manifest: null }\n    },\n    i: S,\n    iframe: {\n        attrs: {\n            src: null, srcdoc: null, name: null, width: null, height: null,\n            sandbox: [\"allow-top-navigation\", \"allow-same-origin\", \"allow-forms\", \"allow-scripts\"],\n            seamless: [\"seamless\"]\n        }\n    },\n    img: {\n        attrs: {\n            alt: null, src: null, ismap: null, usemap: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"]\n        }\n    },\n    input: {\n        attrs: {\n            alt: null, dirname: null, form: null, formaction: null,\n            height: null, list: null, max: null, maxlength: null, min: null,\n            name: null, pattern: null, placeholder: null, size: null, src: null,\n            step: null, value: null, width: null,\n            accept: [\"audio/*\", \"video/*\", \"image/*\"],\n            autocomplete: [\"on\", \"off\"],\n            autofocus: [\"autofocus\"],\n            checked: [\"checked\"],\n            disabled: [\"disabled\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            multiple: [\"multiple\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            type: [\"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"datetime\", \"date\", \"month\",\n                \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\",\n                \"file\", \"submit\", \"image\", \"reset\", \"button\"]\n        }\n    },\n    ins: { attrs: { cite: null, datetime: null } },\n    kbd: S,\n    keygen: {\n        attrs: {\n            challenge: null, form: null, name: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            keytype: [\"RSA\"]\n        }\n    },\n    label: { attrs: { for: null, form: null } },\n    legend: S,\n    li: { attrs: { value: null } },\n    link: {\n        attrs: {\n            href: null, type: null,\n            hreflang: null,\n            media: null,\n            sizes: [\"all\", \"16x16\", \"16x16 32x32\", \"16x16 32x32 64x64\"]\n        }\n    },\n    map: { attrs: { name: null } },\n    mark: S,\n    menu: { attrs: { label: null, type: [\"list\", \"context\", \"toolbar\"] } },\n    meta: {\n        attrs: {\n            content: null,\n            charset: Charsets,\n            name: [\"viewport\", \"application-name\", \"author\", \"description\", \"generator\", \"keywords\"],\n            \"http-equiv\": [\"content-language\", \"content-type\", \"default-style\", \"refresh\"]\n        }\n    },\n    meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },\n    nav: S,\n    noscript: S,\n    object: {\n        attrs: {\n            data: null, type: null, name: null, usemap: null, form: null, width: null, height: null,\n            typemustmatch: [\"typemustmatch\"]\n        }\n    },\n    ol: { attrs: { reversed: [\"reversed\"], start: null, type: [\"1\", \"a\", \"A\", \"i\", \"I\"] },\n        children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    optgroup: { attrs: { disabled: [\"disabled\"], label: null } },\n    option: { attrs: { disabled: [\"disabled\"], label: null, selected: [\"selected\"], value: null } },\n    output: { attrs: { for: null, form: null, name: null } },\n    p: S,\n    param: { attrs: { name: null, value: null } },\n    pre: S,\n    progress: { attrs: { value: null, max: null } },\n    q: { attrs: { cite: null } },\n    rp: S,\n    rt: S,\n    ruby: S,\n    samp: S,\n    script: {\n        attrs: {\n            type: [\"text/javascript\"],\n            src: null,\n            async: [\"async\"],\n            defer: [\"defer\"],\n            charset: Charsets\n        }\n    },\n    section: S,\n    select: {\n        attrs: {\n            form: null, name: null, size: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            multiple: [\"multiple\"]\n        }\n    },\n    slot: { attrs: { name: null } },\n    small: S,\n    source: { attrs: { src: null, type: null, media: null } },\n    span: S,\n    strong: S,\n    style: {\n        attrs: {\n            type: [\"text/css\"],\n            media: null,\n            scoped: null\n        }\n    },\n    sub: S,\n    summary: S,\n    sup: S,\n    table: S,\n    tbody: S,\n    td: { attrs: { colspan: null, rowspan: null, headers: null } },\n    template: S,\n    textarea: {\n        attrs: {\n            dirname: null, form: null, maxlength: null, name: null, placeholder: null,\n            rows: null, cols: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            wrap: [\"soft\", \"hard\"]\n        }\n    },\n    tfoot: S,\n    th: { attrs: { colspan: null, rowspan: null, headers: null, scope: [\"row\", \"col\", \"rowgroup\", \"colgroup\"] } },\n    thead: S,\n    time: { attrs: { datetime: null } },\n    title: S,\n    tr: S,\n    track: {\n        attrs: {\n            src: null, label: null, default: null,\n            kind: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"],\n            srclang: null\n        }\n    },\n    ul: { children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    var: S,\n    video: {\n        attrs: {\n            src: null, poster: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"auto\", \"metadata\", \"none\"],\n            autoplay: [\"autoplay\"],\n            mediagroup: [\"movie\"],\n            muted: [\"muted\"],\n            controls: [\"controls\"]\n        }\n    },\n    wbr: S\n};\nconst GlobalAttrs = {\n    accesskey: null,\n    class: null,\n    contenteditable: Bool,\n    contextmenu: null,\n    dir: [\"ltr\", \"rtl\", \"auto\"],\n    draggable: [\"true\", \"false\", \"auto\"],\n    dropzone: [\"copy\", \"move\", \"link\", \"string:\", \"file:\"],\n    hidden: [\"hidden\"],\n    id: null,\n    inert: [\"inert\"],\n    itemid: null,\n    itemprop: null,\n    itemref: null,\n    itemscope: [\"itemscope\"],\n    itemtype: null,\n    lang: [\"ar\", \"bn\", \"de\", \"en-GB\", \"en-US\", \"es\", \"fr\", \"hi\", \"id\", \"ja\", \"pa\", \"pt\", \"ru\", \"tr\", \"zh\"],\n    spellcheck: Bool,\n    autocorrect: Bool,\n    autocapitalize: Bool,\n    style: null,\n    tabindex: null,\n    title: null,\n    translate: [\"yes\", \"no\"],\n    rel: [\"stylesheet\", \"alternate\", \"author\", \"bookmark\", \"help\", \"license\", \"next\", \"nofollow\", \"noreferrer\", \"prefetch\", \"prev\", \"search\", \"tag\"],\n    role: /*@__PURE__*/\"alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer\".split(\" \"),\n    \"aria-activedescendant\": null,\n    \"aria-atomic\": Bool,\n    \"aria-autocomplete\": [\"inline\", \"list\", \"both\", \"none\"],\n    \"aria-busy\": Bool,\n    \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-controls\": null,\n    \"aria-describedby\": null,\n    \"aria-disabled\": Bool,\n    \"aria-dropeffect\": null,\n    \"aria-expanded\": [\"true\", \"false\", \"undefined\"],\n    \"aria-flowto\": null,\n    \"aria-grabbed\": [\"true\", \"false\", \"undefined\"],\n    \"aria-haspopup\": Bool,\n    \"aria-hidden\": Bool,\n    \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n    \"aria-label\": null,\n    \"aria-labelledby\": null,\n    \"aria-level\": null,\n    \"aria-live\": [\"off\", \"polite\", \"assertive\"],\n    \"aria-multiline\": Bool,\n    \"aria-multiselectable\": Bool,\n    \"aria-owns\": null,\n    \"aria-posinset\": null,\n    \"aria-pressed\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-readonly\": Bool,\n    \"aria-relevant\": null,\n    \"aria-required\": Bool,\n    \"aria-selected\": [\"true\", \"false\", \"undefined\"],\n    \"aria-setsize\": null,\n    \"aria-sort\": [\"ascending\", \"descending\", \"none\", \"other\"],\n    \"aria-valuemax\": null,\n    \"aria-valuemin\": null,\n    \"aria-valuenow\": null,\n    \"aria-valuetext\": null\n};\nconst eventAttributes = /*@__PURE__*/(\"beforeunload copy cut dragstart dragover dragleave dragenter dragend \" +\n    \"drag paste focus blur change click load mousedown mouseenter mouseleave \" +\n    \"mouseup keydown keyup resize scroll unload\").split(\" \").map(n => \"on\" + n);\nfor (let a of eventAttributes)\n    GlobalAttrs[a] = null;\nclass Schema {\n    constructor(extraTags, extraAttrs) {\n        this.tags = Object.assign(Object.assign({}, Tags), extraTags);\n        this.globalAttrs = Object.assign(Object.assign({}, GlobalAttrs), extraAttrs);\n        this.allTags = Object.keys(this.tags);\n        this.globalAttrNames = Object.keys(this.globalAttrs);\n    }\n}\nSchema.default = /*@__PURE__*/new Schema;\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let tag = tree.firstChild;\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nfunction findParentElement(tree, skip = false) {\n    for (; tree; tree = tree.parent)\n        if (tree.name == \"Element\") {\n            if (skip)\n                skip = false;\n            else\n                return tree;\n        }\n    return null;\n}\nfunction allowedChildren(doc, tree, schema) {\n    let parentInfo = schema.tags[elementName(doc, findParentElement(tree))];\n    return (parentInfo === null || parentInfo === void 0 ? void 0 : parentInfo.children) || schema.allTags;\n}\nfunction openTags(doc, tree) {\n    let open = [];\n    for (let parent = findParentElement(tree); parent && !parent.type.isTop; parent = findParentElement(parent.parent)) {\n        let tagName = elementName(doc, parent);\n        if (tagName && parent.lastChild.name == \"CloseTag\")\n            break;\n        if (tagName && open.indexOf(tagName) < 0 && (tree.name == \"EndTag\" || tree.from >= parent.firstChild.to))\n            open.push(tagName);\n    }\n    return open;\n}\nconst identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction completeTag(state, schema, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    let parent = findParentElement(tree, true);\n    return { from, to,\n        options: allowedChildren(state.doc, parent, schema).map(tagName => ({ label: tagName, type: \"type\" })).concat(openTags(state.doc, tree).map((tag, i) => ({ label: \"/\" + tag, apply: \"/\" + tag + end,\n            type: \"type\", boost: 99 - i }))),\n        validFor: /^\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeCloseTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: openTags(state.doc, tree).map((tag, i) => ({ label: tag, apply: tag + end, type: \"type\", boost: 99 - i })),\n        validFor: identifier };\n}\nfunction completeStartTag(state, schema, tree, pos) {\n    let options = [], level = 0;\n    for (let tagName of allowedChildren(state.doc, tree, schema))\n        options.push({ label: \"<\" + tagName, type: \"type\" });\n    for (let open of openTags(state.doc, tree))\n        options.push({ label: \"</\" + open + \">\", type: \"type\", boost: 99 - level++ });\n    return { from: pos, to: pos, options, validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeAttrName(state, schema, tree, from, to) {\n    let elt = findParentElement(tree), info = elt ? schema.tags[elementName(state.doc, elt)] : null;\n    let localAttrs = info && info.attrs ? Object.keys(info.attrs) : [];\n    let names = info && info.globalAttrs === false ? localAttrs\n        : localAttrs.length ? localAttrs.concat(schema.globalAttrNames) : schema.globalAttrNames;\n    return { from, to,\n        options: names.map(attrName => ({ label: attrName, type: \"property\" })),\n        validFor: identifier };\n}\nfunction completeAttrValue(state, schema, tree, from, to) {\n    var _a;\n    let nameNode = (_a = tree.parent) === null || _a === void 0 ? void 0 : _a.getChild(\"AttributeName\");\n    let options = [], token = undefined;\n    if (nameNode) {\n        let attrName = state.sliceDoc(nameNode.from, nameNode.to);\n        let attrs = schema.globalAttrs[attrName];\n        if (!attrs) {\n            let elt = findParentElement(tree), info = elt ? schema.tags[elementName(state.doc, elt)] : null;\n            attrs = (info === null || info === void 0 ? void 0 : info.attrs) && info.attrs[attrName];\n        }\n        if (attrs) {\n            let base = state.sliceDoc(from, to).toLowerCase(), quoteStart = '\"', quoteEnd = '\"';\n            if (/^['\"]/.test(base)) {\n                token = base[0] == '\"' ? /^[^\"]*$/ : /^[^']*$/;\n                quoteStart = \"\";\n                quoteEnd = state.sliceDoc(to, to + 1) == base[0] ? \"\" : base[0];\n                base = base.slice(1);\n                from++;\n            }\n            else {\n                token = /^[^\\s<>='\"]*$/;\n            }\n            for (let value of attrs)\n                options.push({ label: value, apply: quoteStart + value + quoteEnd, type: \"constant\" });\n        }\n    }\n    return { from, to, options, validFor: token };\n}\nfunction htmlCompletionFor(schema, context) {\n    let { state, pos } = context, tree = syntaxTree(state).resolveInner(pos, -1), around = tree.resolve(pos);\n    for (let scan = pos, before; around == tree && (before = tree.childBefore(scan));) {\n        let last = before.lastChild;\n        if (!last || !last.type.isError || last.from < last.to)\n            break;\n        around = tree = before;\n        scan = last.from;\n    }\n    if (tree.name == \"TagName\") {\n        return tree.parent && /CloseTag$/.test(tree.parent.name) ? completeCloseTag(state, tree, tree.from, pos)\n            : completeTag(state, schema, tree, tree.from, pos);\n    }\n    else if (tree.name == \"StartTag\") {\n        return completeTag(state, schema, tree, pos, pos);\n    }\n    else if (tree.name == \"StartCloseTag\" || tree.name == \"IncompleteCloseTag\") {\n        return completeCloseTag(state, tree, pos, pos);\n    }\n    else if (tree.name == \"OpenTag\" || tree.name == \"SelfClosingTag\" || tree.name == \"AttributeName\") {\n        return completeAttrName(state, schema, tree, tree.name == \"AttributeName\" ? tree.from : pos, pos);\n    }\n    else if (tree.name == \"Is\" || tree.name == \"AttributeValue\" || tree.name == \"UnquotedAttributeValue\") {\n        return completeAttrValue(state, schema, tree, tree.name == \"Is\" ? pos : tree.from, pos);\n    }\n    else if (context.explicit && (around.name == \"Element\" || around.name == \"Text\" || around.name == \"Document\")) {\n        return completeStartTag(state, schema, tree, pos);\n    }\n    else {\n        return null;\n    }\n}\n/**\nHTML tag completion. Opens and closes tags and attributes in a\ncontext-aware way.\n*/\nfunction htmlCompletionSource(context) {\n    return htmlCompletionFor(Schema.default, context);\n}\n/**\nCreate a completion source for HTML extended with additional tags\nor attributes.\n*/\nfunction htmlCompletionSourceWith(config) {\n    let { extraTags, extraGlobalAttributes: extraAttrs } = config;\n    let schema = extraAttrs || extraTags ? new Schema(extraTags, extraAttrs) : Schema.default;\n    return (context) => htmlCompletionFor(schema, context);\n}\n\nconst jsonParser = /*@__PURE__*/javascriptLanguage.parser.configure({ top: \"SingleExpression\" });\nconst defaultNesting = [\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/typescript\" || attrs.lang == \"ts\",\n        parser: typescriptLanguage.parser },\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/babel\" || attrs.type == \"text/jsx\",\n        parser: jsxLanguage.parser },\n    { tag: \"script\",\n        attrs: attrs => attrs.type == \"text/typescript-jsx\",\n        parser: tsxLanguage.parser },\n    { tag: \"script\",\n        attrs(attrs) {\n            return /^(importmap|speculationrules|application\\/(.+\\+)?json)$/i.test(attrs.type);\n        },\n        parser: jsonParser },\n    { tag: \"script\",\n        attrs(attrs) {\n            return !attrs.type || /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(attrs.type);\n        },\n        parser: javascriptLanguage.parser },\n    { tag: \"style\",\n        attrs(attrs) {\n            return (!attrs.lang || attrs.lang == \"css\") && (!attrs.type || /^(text\\/)?(x-)?(stylesheet|css)$/i.test(attrs.type));\n        },\n        parser: cssLanguage.parser }\n];\nconst defaultAttrs = /*@__PURE__*/[\n    { name: \"style\",\n        parser: /*@__PURE__*/cssLanguage.parser.configure({ top: \"Styles\" }) }\n].concat(/*@__PURE__*/eventAttributes.map(name => ({ name, parser: javascriptLanguage.parser })));\n/**\nA language provider based on the [Lezer HTML\nparser](https://github.com/lezer-parser/html), extended with the\nJavaScript and CSS parsers to parse the content of `<script>` and\n`<style>` tags.\n*/\nconst htmlPlain = /*@__PURE__*/LRLanguage.define({\n    name: \"html\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let after = /^(\\s*)(<\\/)?/.exec(context.textAfter);\n                    if (context.node.to <= context.pos + after[0].length)\n                        return context.continue();\n                    return context.lineIndent(context.node.from) + (after[2] ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                },\n                Document(context) {\n                    if (context.pos + /\\s*/.exec(context.textAfter)[0].length < context.node.to)\n                        return context.continue();\n                    let endElt = null, close;\n                    for (let cur = context.node;;) {\n                        let last = cur.lastChild;\n                        if (!last || last.name != \"Element\" || last.to != cur.to)\n                            break;\n                        endElt = cur = last;\n                    }\n                    if (endElt && !((close = endElt.lastChild) && (close.name == \"CloseTag\" || close.name == \"SelfClosingTag\")))\n                        return context.lineIndent(endElt.from) + context.unit;\n                    return null;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(node) {\n                    let first = node.firstChild, last = node.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : node.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/\\w+\\W$/,\n        wordChars: \"-._\"\n    }\n});\n/**\nA language provider based on the [Lezer HTML\nparser](https://github.com/lezer-parser/html), extended with the\nJavaScript and CSS parsers to parse the content of `<script>` and\n`<style>` tags.\n*/\nconst htmlLanguage = /*@__PURE__*/htmlPlain.configure({\n    wrap: /*@__PURE__*/configureNesting(defaultNesting, defaultAttrs)\n});\n/**\nLanguage support for HTML, including\n[`htmlCompletion`](https://codemirror.net/6/docs/ref/#lang-html.htmlCompletion) and JavaScript and\nCSS support extensions.\n*/\nfunction html(config = {}) {\n    let dialect = \"\", wrap;\n    if (config.matchClosingTags === false)\n        dialect = \"noMatch\";\n    if (config.selfClosingTags === true)\n        dialect = (dialect ? dialect + \" \" : \"\") + \"selfClosing\";\n    if (config.nestedLanguages && config.nestedLanguages.length ||\n        config.nestedAttributes && config.nestedAttributes.length)\n        wrap = configureNesting((config.nestedLanguages || []).concat(defaultNesting), (config.nestedAttributes || []).concat(defaultAttrs));\n    let lang = wrap ? htmlPlain.configure({ wrap, dialect }) : dialect ? htmlLanguage.configure({ dialect }) : htmlLanguage;\n    return new LanguageSupport(lang, [\n        htmlLanguage.data.of({ autocomplete: htmlCompletionSourceWith(config) }),\n        config.autoCloseTags !== false ? autoCloseTags : [],\n        javascript().support,\n        css().support\n    ]);\n}\nconst selfClosers = /*@__PURE__*/new Set(/*@__PURE__*/\"area base br col command embed frame hr img input keygen link meta param source track wbr menuitem\".split(\" \"));\n/**\nExtension that will automatically insert close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text, insertTransaction) => {\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\n        !htmlLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let base = insertTransaction(), { state } = base;\n    let closeTags = state.changeByRange(range => {\n        var _a, _b, _c;\n        let didType = state.doc.sliceString(range.from - 1, range.to) == text;\n        let { head } = range, after = syntaxTree(state).resolveInner(head, -1), name;\n        if (didType && text == \">\" && after.name == \"EndTag\") {\n            let tag = after.parent;\n            if (((_b = (_a = tag.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, tag.parent, head)) &&\n                !selfClosers.has(name)) {\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\n                let insert = `</${name}>`;\n                return { range, changes: { from: head, to, insert } };\n            }\n        }\n        else if (didType && text == \"/\" && after.name == \"IncompleteCloseTag\") {\n            let tag = after.parent;\n            if (after.from == head - 2 && ((_c = tag.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" &&\n                (name = elementName(state.doc, tag, head)) && !selfClosers.has(name)) {\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\n                let insert = `${name}>`;\n                return {\n                    range: EditorSelection.cursor(head + insert.length, -1),\n                    changes: { from: head, to, insert }\n                };\n            }\n        }\n        return { range };\n    });\n    if (closeTags.changes.empty)\n        return false;\n    view.dispatch([\n        base,\n        state.update(closeTags, {\n            userEvent: \"input.complete\",\n            scrollIntoView: true\n        })\n    ]);\n    return true;\n});\n\nexport { autoCloseTags, html, htmlCompletionSource, htmlCompletionSourceWith, htmlLanguage, htmlPlain };\n","import ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport { ReactMarkdownProps } from \"react-markdown/lib/complex-types\";\nimport * as cn from \"./TableOfContent.module.scss\";\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\";\nimport { useState, useLayoutEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { useLocation } from \"@reach/router\";\n\nconst TableOfContents = ({ value }: { value: string }) => {\n    return (\n        <div className={cn.grid}>\n            <div className={cn.container}>\n                <ReactMarkdown\n                    remarkPlugins={[gfm]}\n                    components={TOCInlineRenderer}\n                >\n                    {value}\n                </ReactMarkdown>\n            </div>\n        </div>\n    );\n};\n\nconst TOCInlineRenderer = {\n    a: ({ children, href }) => {\n        const location = useLocation();\n        const anchorHref = href.replace(/[^a-z0-9#\\-]/gi, \"\");\n        const [visible, setVisible] = useState(true);\n\n        useLayoutEffect(() => {\n            const anchor = document.querySelector(anchorHref + \"-visible\");\n\n            console.log(\"@ryqndev\", anchor);\n            if (!anchor) return;\n            const observer = new IntersectionObserver(([entry]) => {\n                setVisible(entry.isIntersecting);\n            });\n\n            try {\n                observer.observe(anchor);\n                return () => observer.unobserve(anchor);\n            } catch (e) {\n                console.error(\n                    `This article is malformed - some links might or might not work. Error: ${anchorHref}`\n                );\n            }\n        });\n\n        return (\n            <AnchorLink\n                to={location.pathname + anchorHref}\n                className={clsx(cn.link, visible && cn.highlight)}\n            >\n                {children}\n            </AnchorLink>\n        );\n    },\n\n    li: ({ children }: ReactMarkdownProps) => <li>{children}</li>,\n    ol: ({ children }: ReactMarkdownProps) => (\n        <ol style={{ paddingLeft: 32, listStyle: \"decimal\" }}>{children}</ol>\n    ),\n    ul: ({ children }: ReactMarkdownProps) => (\n        <ul style={{ paddingLeft: 32, listStyle: \"disc\" }}>{children}</ul>\n    ),\n};\n\nexport { TableOfContents };\n","// extracted by mini-css-extract-plugin\nexport var container = \"TableOfContent-module--container--85bc4\";\nexport var grid = \"TableOfContent-module--grid--80218\";\nexport var highlight = \"TableOfContent-module--highlight--5a003\";\nexport var link = \"TableOfContent-module--link--ad54b\";","import * as cn from './CodeRenderer.module.scss';\n\nconst Video = ({ link }: { link: string }) => {\n\treturn (\n\t\t<div className={cn.video}>\n\t\t\t<iframe\n\t\t\t\tsrc={link}\n\t\t\t\ttitle='Embedded Workshop Video'\n\t\t\t\tframeBorder='0'\n\t\t\t\tallow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n\t\t\t\tallowFullScreen\n\t\t\t></iframe>\n\t\t</div>\n\t);\n};\n\nexport { Video };\n","import CodeMirror from \"@uiw/react-codemirror\";\nimport {\n    FileStructureDisplay,\n    ParsedFileStructureDisplay,\n} from \"./components/FileStructureDisplay/FileStructureDisplay\";\nimport type { CodeComponent, CodeProps } from \"react-markdown/lib/ast-to-react\";\nimport * as cn from \"./CodeRenderer.module.scss\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { python } from \"@codemirror/lang-python\";\nimport { html } from \"@codemirror/lang-html\";\nimport { css } from \"@codemirror/lang-css\";\nimport { PalenightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport { TableOfContents } from \"../TableOfContents\";\nimport { Video } from \"./Video\";\n\nconst Code: CodeComponent = ({\n    node,\n    children,\n    className,\n    inline,\n}: CodeProps) => {\n    const [minimized, setMinimized] = useState(false);\n\n    if (inline) return <span className={cn.inline}>{children}</span>;\n\n    const extensions = [];\n\n    switch (className?.substring(9)) {\n        case undefined:\n        case null:\n            return <>{children}</>;\n        case \"video\":\n            return <Video link={children} />;\n        case \"file\":\n            return <FileStructureDisplay value={children} />;\n        case \"file-json\":\n            return <ParsedFileStructureDisplay value={children} />;\n        case \"table-of-contents\":\n            return <TableOfContents value={children} />;\n        case \"html\":\n            extensions.push(html());\n            break;\n        case \"css\":\n            extensions.push(css());\n            break;\n        case \"js\":\n        case \"ts\":\n        case \"jsx\":\n        case \"tsx\":\n        case \"javascript\":\n            extensions.push(\n                javascript({\n                    jsx: className === \"jsx\" || className === \"tsx\",\n                    typescript: className === \"ts\" || className === \"tsx\",\n                })\n            );\n            break;\n        case \"py\":\n        case \"python\":\n            extensions.push(python());\n            break;\n    }\n\n    return (\n        <div className={cn.code}>\n            <div className={cn.title}>\n                <svg\n                    height=\"44px\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    onClick={() => setMinimized((p) => !p)}\n                >\n                    <circle cx=\"25px\" cy=\"22px\" r=\"6.5px\" fill=\"red\" />\n                    <circle cx=\"48px\" cy=\"22px\" r=\"6.5px\" fill=\"yellow\" />\n                    <circle cx=\"71px\" cy=\"22px\" r=\"6.5px\" fill=\"green\" />\n                </svg>\n                <h3>{node?.data?.meta as string}</h3>\n            </div>\n            {!minimized && (\n                <div className={cn.editor}>\n                    <CodeMirror\n                        theme={PalenightTheme}\n                        value={children}\n                        extensions={extensions}\n                        basicSetup={{\n                            syntaxHighlighting: true,\n                        }}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Code;\n","// extracted by mini-css-extract-plugin\nexport var container = \"LinkRenderer-module--container--7e4c7\";","import { Link } from \"gatsby\";\nimport { AnchorLink } from \"gatsby-plugin-anchor-links\";\nimport { ReactNode } from \"react\";\nimport * as cn from \"./LinkRenderer.module.scss\";\n\nconst LinkRenderer = ({\n    href,\n    children,\n    ...props\n}: HTMLAnchorElement & { children: ReactNode }) => {\n    if (href.substring(0, 1) === \".\")\n        return (\n            <Link className={cn.container} to={href}>\n                {children}\n            </Link>\n        );\n    if (href.substring(0, 1) === \"#\")\n        return (\n            <AnchorLink to={\"./\" + href} className={cn.container}>\n                {children}\n            </AnchorLink>\n        );\n\n    return (\n        <a\n            className={cn.container}\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n        >\n            {children}\n        </a>\n    );\n};\n\nexport default LinkRenderer;\n","// extracted by mini-css-extract-plugin\nexport var article = \"HeaderRenderer-module--article--34899\";\nexport var header = \"HeaderRenderer-module--header--c2e07\";\nexport var invisible = \"HeaderRenderer-module--invisible--4d7eb\";","import { ReactNode } from \"react\";\nimport { HeadingComponent } from \"react-markdown/lib/ast-to-react\";\nimport * as cn from \"./HeaderRenderer.module.scss\";\n\nexport type HeadingLevel = \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\" | \"p\";\n\nexport interface IStandardHeaderProps {\n    children: ReactNode[];\n    node: {\n        tagName: HeadingLevel;\n    };\n}\n\nconst convertToHashLinkID = (content) =>\n    content\n        .split(\" \")\n        .join(\"-\")\n        .toLowerCase()\n        .replace(/[^a-z0-9#\\-]/gi, \"\");\n\nconst StandardHeader: HeadingComponent = ({ children, node: { tagName } }) => {\n    const HeaderLevel = tagName;\n    const content: string = children ?? \"\";\n\n    return (\n        <>\n            <HeaderLevel\n                className={cn.invisible}\n                id={convertToHashLinkID(content)}\n            >\n                {children}\n            </HeaderLevel>\n            <HeaderLevel\n                className={cn.header}\n                id={convertToHashLinkID(content) + \"-visible\"}\n            >\n                {children}\n            </HeaderLevel>\n        </>\n    );\n};\n\nexport { StandardHeader, convertToHashLinkID };\n","/**\n * @author ryan yang\n *\n * @description react-markdown custom renderer\n */\nimport CodeRenderer from \"./CodeRenderer\";\nimport LinkRenderer from \"./LinkRenderer\";\nimport * as cn from \"./MarkdownRenderer.module.scss\";\nimport H1Renderer from \"./H1Renderer\";\nimport type { SpecialComponents } from \"react-markdown/lib/ast-to-react\";\nimport type {\n    NormalComponents,\n    ReactMarkdownProps,\n} from \"react-markdown/lib/complex-types\";\nimport { StandardHeader } from \"./HeaderRenderer\";\n\nexport const MarkdownRenderer: SpecialComponents & NormalComponents = {\n    code: CodeRenderer,\n    blockquote: ({ children }: ReactMarkdownProps) => (\n        <div className={cn.blockquote}>{children}</div>\n    ),\n    em: ({ children }: ReactMarkdownProps) => (\n        <span className=\"italicize\">{children}</span>\n    ),\n    h1: H1Renderer,\n    h2: StandardHeader,\n    h3: StandardHeader,\n    h4: StandardHeader,\n    h5: StandardHeader,\n    h6: StandardHeader,\n    p: ({ children }) => <p className={cn.p}>{children}</p>,\n    ol: ({ children }: ReactMarkdownProps) => <ol>{children}</ol>,\n    ul: ({ children }: ReactMarkdownProps) => <ul>{children}</ul>,\n    li: ({ children }) => <li className={cn.li}>{children}</li>,\n    a: LinkRenderer,\n    strong: ({ children }: ReactMarkdownProps) => (\n        <strong className={cn.bolded}>{children}</strong>\n    ),\n    table: ({ children }: ReactMarkdownProps) => (\n        <div className={cn.table}>\n            <table>{children}</table>\n        </div>\n    ),\n};\n","// extracted by mini-css-extract-plugin\nexport var blockquote = \"MarkdownRenderer-module--blockquote--a8a72\";\nexport var bolded = \"MarkdownRenderer-module--bolded--9e794\";\nexport var italicize = \"MarkdownRenderer-module--italicize--c02fa\";\nexport var li = \"MarkdownRenderer-module--li--ff148\";\nexport var listItem__indent = \"MarkdownRenderer-module--list-item__indent--bf269\";\nexport var p = \"MarkdownRenderer-module--p--c3f17\";\nexport var table = \"MarkdownRenderer-module--table--8292c\";\nexport var text = \"MarkdownRenderer-module--text--df54e\";","import * as cn from \"../HeaderRenderer/HeaderRenderer.module.scss\";\n\nconst H1Renderer = (props) => {\n    const headerContent = props.node.children[0].value;\n    const headerHashLink = headerContent.split(\" \").join(\"-\").toLowerCase();\n\n    return (\n        <header className={cn.article}>\n            <h1 className={cn.header} id={headerHashLink}>\n                {headerContent}\n            </h1>\n            <p>\n                by{\" \"}\n                <a\n                    href=\"https://ryqn.dev/\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Ryan Yang\n                </a>\n            </p>\n        </header>\n    );\n};\n\nexport default H1Renderer;\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","var React = require('react');\n\nfunction Expand (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M479.973-353.174q-6.69 0-12.515-2.369-5.825-2.37-11.328-7.827l-198-198q-9.195-9.255-8.695-24.279.5-15.025 9.695-24.34 11.196-11.315 24.37-9.815 13.174 1.5 23.37 10.695L480-435.978l173.13-173.131q9.316-9.195 24.43-10.195 15.114-1 24.31 10.298 11.195 9.298 9.695 23.869-1.5 14.572-10.695 24.767l-197 197q-5.518 5.457-11.362 7.827-5.844 2.369-12.535 2.369Z\"}));\n}\n\nExpand.defaultProps = {\"height\":\"48\",\"viewBox\":\"0 -960 960 960\",\"width\":\"48\"};\n\nmodule.exports = Expand;\n\nExpand.default = Expand;\n","function _extends() {\n  return module.exports = _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _extends.apply(null, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, Transaction, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, logException, showTooltip, EditorView, ViewPlugin, getTooltip, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit, \n    /**\n    The editor view. May be undefined if the context was created\n    in a situation where there is no such view available, such as\n    in synchronous updates via\n    [`CompletionResult.update`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.update)\n    or when called by test code.\n    */\n    view) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        this.view = view;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n        /**\n        @internal\n        */\n        this.abortOnDocChange = false;\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    \n    By default, running queries will not be aborted for regular\n    typing or backspacing, on the assumption that they are likely to\n    return a result with a\n    [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that\n    allows the result to be used after all. Passing `onDocChange:\n    true` will cause this query to be aborted for any document\n    change.\n    */\n    addEventListener(type, listener, options) {\n        if (type == \"abort\" && this.abortListeners) {\n            this.abortListeners.push(listener);\n            if (options && options.onDocChange)\n                this.abortOnDocChange = true;\n        }\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        let lines = state.toText(text);\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: lines },\n            range: EditorSelection.cursor(range.from + fromOff + lines.length)\n        };\n    })), { scrollIntoView: true, userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        this.score = 0;\n        this.matched = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    ret(score, matched) {\n        this.score = score;\n        this.matched = matched;\n        return this;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return a boolean indicating whether there was a match and,\n    // on success, set `this.score` to the score, `this.matched` to an\n    // array of `from, to` pairs indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return this.ret(-100 /* Penalty.NotFull */, []);\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return this.ret(score, [0, firstSize]);\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return this.ret(word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, [0, this.pattern.length]);\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return this.ret(-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), [0, adjacentEnd]);\n        if (direct > -1)\n            return this.ret(-700 /* Penalty.NotStart */ - word.length, [direct, direct + this.pattern.length]);\n        if (adjacentTo == len)\n            return this.ret(-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, [adjacentStart, adjacentEnd]);\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null\n            : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [], i = 0;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return this.ret(score - word.length, result);\n    }\n}\nclass StrictMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.matched = [];\n        this.score = 0;\n        this.folded = pattern.toLowerCase();\n    }\n    match(word) {\n        if (word.length < this.pattern.length)\n            return null;\n        let start = word.slice(0, this.pattern.length);\n        let match = start == this.pattern ? 0 : start.toLowerCase() == this.folded ? -200 /* Penalty.CaseFold */ : null;\n        if (match == null)\n            return null;\n        this.matched = [0, start.length];\n        this.score = match + (word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */);\n        return this;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            activateOnCompletion: () => false,\n            activateOnTypingDelay: 100,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            filterStrict: false,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75,\n            updateSyncTime: 100\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b),\n            filterStrict: (a, b) => a || b,\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space, tooltip) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    let scaleY = (list.bottom - list.top) / tooltip.offsetHeight;\n    let scaleX = (list.right - list.left) / tooltip.offsetWidth;\n    return {\n        style: `${side}: ${offset / scaleY}px; max-width: ${maxWidth / scaleX}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, _v, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let label = completion.displayLabel || completion.label, off = 0;\n            for (let j = 0; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField, applyCompletion) {\n        this.view = view;\n        this.stateField = stateField;\n        this.applyCompletion = applyCompletion;\n        this.info = null;\n        this.infoDestroy = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            let { options } = view.state.field(stateField).open;\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    this.applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.showOptions(options, cState.id);\n    }\n    mount() { this.updateSel(); }\n    showOptions(options, id) {\n        if (this.list)\n            this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(options, id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    update(update) {\n        var _a;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            let { options, selected, disabled } = cState.open;\n            if (!prevState.open || prevState.open.options != options) {\n                this.range = rangeAroundSelected(options.length, selected, update.state.facet(completionConfig).maxRenderedOptions);\n                this.showOptions(options, cState.id);\n            }\n            this.updateSel();\n            if (disabled != ((_a = prevState.open) === null || _a === void 0 ? void 0 : _a.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!disabled);\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.showOptions(open.options, cState.id);\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            this.destroyInfo();\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === \"string\" ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if (\"then\" in infoResult) {\n                infoResult.then(obj => {\n                    if (obj && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(obj, completion);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult, completion);\n            }\n        }\n    }\n    addInfoPane(content, completion) {\n        this.destroyInfo();\n        let wrap = this.info = document.createElement(\"div\");\n        wrap.className = \"cm-tooltip cm-completionInfo\";\n        if (content.nodeType != null) {\n            wrap.appendChild(content);\n            this.infoDestroy = null;\n        }\n        else {\n            let { dom, destroy } = content;\n            wrap.appendChild(dom);\n            this.infoDestroy = destroy || null;\n        }\n        this.dom.appendChild(wrap);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let win = this.dom.ownerDocument.defaultView || window;\n            space = { left: 0, top: 0, right: win.innerWidth, bottom: win.innerHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space, this.dom);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, this.view, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n    destroyInfo() {\n        if (this.info) {\n            if (this.infoDestroy)\n                this.infoDestroy();\n            this.info.remove();\n            this.info = null;\n        }\n    }\n    destroy() {\n        this.destroyInfo();\n    }\n}\nfunction completionTooltip(stateField, applyCompletion) {\n    return (view) => new CompletionTooltip(view, stateField, applyCompletion);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    let scaleY = parent.height / container.offsetHeight;\n    if (self.top < parent.top)\n        container.scrollTop -= (parent.top - self.top) / scaleY;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += (self.bottom - parent.bottom) / scaleY;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    let conf = state.facet(completionConfig);\n    for (let a of active)\n        if (a.hasResult()) {\n            let getMatch = a.result.getMatch;\n            if (a.result.filter === false) {\n                for (let option of a.result.options) {\n                    addOption(new Option(option, a.source, getMatch ? getMatch(option) : [], 1e9 - options.length));\n                }\n            }\n            else {\n                let pattern = state.sliceDoc(a.from, a.to), match;\n                let matcher = conf.filterStrict ? new StrictMatcher(pattern) : new FuzzyMatcher(pattern);\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        let matched = !option.displayLabel ? match.matched : getMatch ? getMatch(option, match.matched) : [];\n                        addOption(new Option(option, a.source, matched, match.score + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = conf.compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        let cur = opt.completion;\n        if (!prev || prev.label != cur.label || prev.detail != cur.detail ||\n            (prev.type != null && cur.type != null && prev.type != cur.type) ||\n            prev.apply != cur.apply || prev.boost != cur.boost)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length) {\n            return prev && active.some(a => a.state == 1 /* State.Pending */) ?\n                new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n        }\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: createTooltip,\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open;\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active))\n            open = CompletionDialog.build(active, state, this.id, open, conf);\n        else if (open && open.disabled && !active.some(a => a.state == 1 /* State.Pending */))\n            open = null;\n        if (!open && active.every(a => a.state != 1 /* State.Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : this.active.length ? baseAttrs : noAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nconst noAttrs = {};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUpdateType(tr, conf) {\n    if (tr.isUserEvent(\"input.complete\")) {\n        let completion = tr.annotation(pickedCompletion);\n        if (completion && conf.activateOnCompletion(completion))\n            return 4 /* UpdateType.Activate */ | 8 /* UpdateType.Reset */;\n    }\n    let typing = tr.isUserEvent(\"input.type\");\n    return typing && conf.activateOnTyping ? 4 /* UpdateType.Activate */ | 1 /* UpdateType.Typing */\n        : typing ? 1 /* UpdateType.Typing */\n            : tr.isUserEvent(\"delete.backward\") ? 2 /* UpdateType.Backspacing */\n                : tr.selection ? 8 /* UpdateType.Reset */\n                    : tr.docChanged ? 16 /* UpdateType.ResetIfTouching */ : 0 /* UpdateType.None */;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let type = getUpdateType(tr, conf), value = this;\n        if ((type & 8 /* UpdateType.Reset */) || (type & 16 /* UpdateType.ResetIfTouching */) && this.touches(tr))\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        if ((type & 4 /* UpdateType.Activate */) && value.state == 0 /* State.Inactive */)\n            value = new ActiveSource(this.source, 1 /* State.Pending */);\n        value = value.updateFor(tr, type);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    updateFor(tr, type) { return this.map(tr.changes); }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n    touches(tr) {\n        return tr.changes.touchesRange(cur(tr.state));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to) {\n        super(source, 2 /* State.Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    updateFor(tr, type) {\n        var _a;\n        if (!(type & 3 /* UpdateType.SimpleInteraction */))\n            return this.map(tr.changes);\n        let result = this.result;\n        if (result.map && !tr.changes.empty)\n            result = result.map(result, tr.changes);\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos < 0 ? pos <= from : pos < this.from) ||\n            pos > to || !result ||\n            (type & 2 /* UpdateType.Backspacing */) && cur(tr.startState) == this.from)\n            return new ActiveSource(this.source, type & 4 /* UpdateType.Activate */ ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos);\n        if (checkValid(result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, explicitPos, result, from, to);\n        if (result.update &&\n            (result = result.update(result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0))))\n            return new ActiveResult(this.source, explicitPos, result, result.from, (_a = result.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        let result = this.result.map ? this.result.map(this.result, mapping) : this.result;\n        if (!result)\n            return new ActiveSource(this.source, 0 /* State.Inactive */);\n        return new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n    touches(tr) {\n        return tr.changes.touchesRange(this.from, this.to);\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\nconst createTooltip = /*@__PURE__*/completionTooltip(completionState, applyCompletion);\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || cState.open.disabled ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    return applyCompletion(view, cState.open.options[cState.open.selected]);\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.pendingStart = false;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* State.Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        let conf = update.state.facet(completionConfig);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let type = getUpdateType(tr, conf);\n            return (type & 8 /* UpdateType.Reset */) || (tr.selection || tr.docChanged) && !(type & 3 /* UpdateType.SimpleInteraction */);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.context.abortOnDocChange && update.docChanged ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        if (update.transactions.some(tr => tr.effects.some(e => e.is(startCompletionEffect))))\n            this.pendingStart = true;\n        let delay = this.pendingStart ? 50 : conf.activateOnTypingDelay;\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* State.Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), delay) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (tr.isUserEvent(\"input.type\"))\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        this.pendingStart = false;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* State.Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos, this.view);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state));\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* State.Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* State.Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    setTimeout(() => this.view.dispatch({ effects: closeCompletionEffect.of(null) }), 10);\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nconst windows = typeof navigator == \"object\" && /*@__PURE__*//Win/.test(navigator.platform);\nconst commitCharacters = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        let field = view.state.field(completionState, false);\n        if (!field || !field.open || field.open.disabled || field.open.selected < 0 ||\n            event.key.length > 1 || event.ctrlKey && !(windows && event.altKey) || event.metaKey)\n            return false;\n        let option = field.open.options[field.open.selected];\n        let result = field.active.find(a => a.source == option.source);\n        let commitChars = option.completion.commitCharacters || result.result.commitCharacters;\n        if (commitChars && commitChars.indexOf(event.key) > -1)\n            applyCompletion(view, option);\n        return false;\n    }\n}));\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\",\n        whiteSpace: \"pre-line\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|((?:\\\\[{}]|[^}])*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, rawName = m[2] || m[3] || \"\", found = -1;\n                let name = rawName.replace(/\\\\[{}]/g, m => m[1]);\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + rawName + line.slice(m.index + m[0].length);\n            }\n            line = line.replace(/\\\\([{}])/g, (_, brace, index) => {\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n                return brace;\n            });\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = {\n            changes: { from, to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? [pickedCompletion.of(completion), Transaction.userEvent.of(\"input.complete\")] : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.some(r => r.field > 0)) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next)),\n            scrollIntoView: true\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field)\n                ? new ActiveSnippet(active.ranges, match.field) : null),\n            scrollIntoView: true\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\]\\-\\\\]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        value = value.map(tr.changes);\n        if (tr.selection) {\n            let line = tr.state.doc.lineAt(tr.selection.main.head);\n            value = value.update({ filter: from => from >= line.from && from <= line.to });\n        }\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        commitCharacters,\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space (and Alt-\\` on macOS): [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { mac: \"Alt-`\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* State.Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n","import { ContextTracker, ExternalTokenizer, LRParser, LocalTokenGroup } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst noSemi = 312,\n  incdec = 1,\n  incdecPrefix = 2,\n  questionDot = 3,\n  JSXStartTag = 4,\n  insertSemi = 313,\n  spaces = 315,\n  newline = 316,\n  LineComment = 5,\n  BlockComment = 6,\n  Dialect_jsx = 0;\n\n/* Hand-written tokenizers for JavaScript tokens that can't be\n   expressed by lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,\n               8201, 8202, 8232, 8233, 8239, 8287, 12288];\n\nconst braceR = 125, semicolon = 59, slash = 47, star = 42, plus = 43, minus = 45, lt = 60, comma = 44,\n      question = 63, dot = 46;\n\nconst trackNewline = new ContextTracker({\n  start: false,\n  shift(context, term) {\n    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline\n  },\n  strict: false\n});\n\nconst insertSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == braceR || next == -1 || stack.context)\n    input.acceptToken(insertSemi);\n}, {contextual: true, fallback: true});\n\nconst noSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input, after;\n  if (space.indexOf(next) > -1) return\n  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return\n  if (next != braceR && next != semicolon && next != -1 && !stack.context)\n    input.acceptToken(noSemi);\n}, {contextual: true});\n\nconst operatorToken = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == plus || next == minus) {\n    input.advance();\n    if (next == input.next) {\n      input.advance();\n      let mayPostfix = !stack.context && stack.canShift(incdec);\n      input.acceptToken(mayPostfix ? incdec : incdecPrefix);\n    }\n  } else if (next == question && input.peek(1) == dot) {\n    input.advance(); input.advance();\n    if (input.next < 48 || input.next > 57) // No digit after\n      input.acceptToken(questionDot);\n  }\n}, {contextual: true});\n\nfunction identifierChar(ch, start) {\n  return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch == 95 || ch >= 192 ||\n    !start && ch >= 48 && ch <= 57\n}\n\nconst jsx = new ExternalTokenizer((input, stack) => {\n  if (input.next != lt || !stack.dialectEnabled(Dialect_jsx)) return\n  input.advance();\n  if (input.next == slash) return\n  // Scan for an identifier followed by a comma or 'extends', don't\n  // treat this as a start tag if present.\n  let back = 0;\n  while (space.indexOf(input.next) > -1) { input.advance(); back++; }\n  if (identifierChar(input.next, true)) {\n    input.advance();\n    back++;\n    while (identifierChar(input.next, false)) { input.advance(); back++; }\n    while (space.indexOf(input.next) > -1) { input.advance(); back++; }\n    if (input.next == comma) return\n    for (let i = 0;; i++) {\n      if (i == 7) {\n        if (!identifierChar(input.next, true)) return\n        break\n      }\n      if (input.next != \"extends\".charCodeAt(i)) break\n      input.advance();\n      back++;\n    }\n  }\n  input.acceptToken(JSXStartTag, -back);\n});\n\nconst jsHighlight = styleTags({\n  \"get set async static\": tags.modifier,\n  \"for while do if else switch try catch finally return throw break continue default case\": tags.controlKeyword,\n  \"in of await yield void typeof delete instanceof\": tags.operatorKeyword,\n  \"let var const using function class extends\": tags.definitionKeyword,\n  \"import export from\": tags.moduleKeyword,\n  \"with debugger as new\": tags.keyword,\n  TemplateString: tags.special(tags.string),\n  super: tags.atom,\n  BooleanLiteral: tags.bool,\n  this: tags.self,\n  null: tags.null,\n  Star: tags.modifier,\n  VariableName: tags.variableName,\n  \"CallExpression/VariableName TaggedTemplateExpression/VariableName\": tags.function(tags.variableName),\n  VariableDefinition: tags.definition(tags.variableName),\n  Label: tags.labelName,\n  PropertyName: tags.propertyName,\n  PrivatePropertyName: tags.special(tags.propertyName),\n  \"CallExpression/MemberExpression/PropertyName\": tags.function(tags.propertyName),\n  \"FunctionDeclaration/VariableDefinition\": tags.function(tags.definition(tags.variableName)),\n  \"ClassDeclaration/VariableDefinition\": tags.definition(tags.className),\n  PropertyDefinition: tags.definition(tags.propertyName),\n  PrivatePropertyDefinition: tags.definition(tags.special(tags.propertyName)),\n  UpdateOp: tags.updateOperator,\n  \"LineComment Hashbang\": tags.lineComment,\n  BlockComment: tags.blockComment,\n  Number: tags.number,\n  String: tags.string,\n  Escape: tags.escape,\n  ArithOp: tags.arithmeticOperator,\n  LogicOp: tags.logicOperator,\n  BitOp: tags.bitwiseOperator,\n  CompareOp: tags.compareOperator,\n  RegExp: tags.regexp,\n  Equals: tags.definitionOperator,\n  Arrow: tags.function(tags.punctuation),\n  \": Spread\": tags.punctuation,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace,\n  \"InterpolationStart InterpolationEnd\": tags.special(tags.brace),\n  \".\": tags.derefOperator,\n  \", ;\": tags.separator,\n  \"@\": tags.meta,\n\n  TypeName: tags.typeName,\n  TypeDefinition: tags.definition(tags.typeName),\n  \"type enum interface implements namespace module declare\": tags.definitionKeyword,\n  \"abstract global Privacy readonly override\": tags.modifier,\n  \"is keyof unique infer\": tags.operatorKeyword,\n\n  JSXAttributeValue: tags.attributeValue,\n  JSXText: tags.content,\n  \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": tags.angleBracket,\n  \"JSXIdentifier JSXNameSpacedName\": tags.tagName,\n  \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": tags.attributeName,\n  \"JSXBuiltin/JSXIdentifier\": tags.standard(tags.tagName)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,export:20, as:25, from:33, default:36, async:41, function:42, extends:54, this:58, true:66, false:66, null:78, void:82, typeof:86, super:102, new:136, delete:148, yield:157, await:161, class:166, public:229, private:229, protected:229, readonly:231, instanceof:250, satisfies:253, in:254, const:256, import:290, keyof:345, unique:349, infer:355, is:391, abstract:411, implements:413, type:415, let:418, var:420, using:423, interface:429, enum:433, namespace:439, module:441, declare:445, global:449, for:468, of:477, while:480, with:484, do:488, if:492, else:494, switch:498, case:504, try:510, catch:514, finally:518, return:522, throw:526, break:530, continue:534, debugger:538};\nconst spec_word = {__proto__:null,async:123, get:125, set:127, declare:189, public:191, private:191, protected:191, static:193, abstract:195, override:197, readonly:203, accessor:205, new:395};\nconst spec_LessThan = {__proto__:null,\"<\":187};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$BUQ%TQ^OOO%[Q^OOO'_Q`OOP(lOWOOO*zQ?NdO'#CiO+RO!bO'#CjO+aO#tO'#CjO+oO!0LbO'#D^O.QQ^O'#DdO.bQ^O'#DoO%[Q^O'#DwO0fQ^O'#EPOOQ?Mr'#EX'#EXO1PQWO'#EUOOQO'#Em'#EmOOQO'#Ih'#IhO1XQWO'#GpO1dQWO'#ElO1iQWO'#ElO3hQ?NdO'#JmO6[Q?NdO'#JnO6uQWO'#F[O6zQ&jO'#FsOOQ?Mr'#Fe'#FeO7VO,YO'#FeO7eQ7[O'#FzO9RQWO'#FyOOQ?Mr'#Jn'#JnOOQ?Mp'#Jm'#JmO9WQWO'#GtOOQU'#KZ'#KZO9cQWO'#IUO9hQ?MxO'#IVOOQU'#JZ'#JZOOQU'#IZ'#IZQ`Q^OOQ`Q^OOO9pQMnO'#DsO9wQ^O'#D{O:OQ^O'#D}O9^QWO'#GpO:VQ7[O'#CoO:eQWO'#EkO:pQWO'#EvO:uQ7[O'#FdO;dQWO'#GpOOQO'#K['#K[O;iQWO'#K[O;wQWO'#GxO;wQWO'#GyO;wQWO'#G{O9^QWO'#HOO<nQWO'#HRO>VQWO'#CeO>gQWO'#H_O>oQWO'#HeO>oQWO'#HgO`Q^O'#HiO>oQWO'#HkO>oQWO'#HnO>tQWO'#HtO>yQ?MyO'#HzO%[Q^O'#H|O?UQ?MyO'#IOO?aQ?MyO'#IQO9hQ?MxO'#ISO?lQ?NdO'#CiO@nQ`O'#DiQOQWOOO%[Q^O'#D}OAUQWO'#EQO:VQ7[O'#EkOAaQWO'#EkOAlQpO'#FdOOQU'#Cg'#CgOOQ?Mp'#Dn'#DnOOQ?Mp'#Jq'#JqO%[Q^O'#JqOOQO'#Jt'#JtOOQO'#Id'#IdOBlQ`O'#EdOOQ?Mp'#Ec'#EcOOQ?Mp'#Jx'#JxOChQ?NQO'#EdOCrQ`O'#ETOOQO'#Js'#JsODWQ`O'#JtOEeQ`O'#ETOCrQ`O'#EdPErO#@ItO'#CbPOOO)CDx)CDxOOOO'#I['#I[OE}O!bO,59UOOQ?Mr,59U,59UOOOO'#I]'#I]OF]O#tO,59UOFkQMnO'#D`OOOO'#I_'#I_OFrO!0LbO,59xOOQ?Mr,59x,59xOGQQ^O'#I`OGeQWO'#JoOIdQrO'#JoO+}Q^O'#JoOIkQWO,5:OOJRQWO'#EmOJ`QWO'#KOOJkQWO'#J}OJkQWO'#J}OJsQWO,5;ZOJxQWO'#J|OOQ?Mv,5:Z,5:ZOKPQ^O,5:ZOL}Q?NdO,5:cOMnQWO,5:kONXQ?MxO'#J{ON`QWO'#JzO9WQWO'#JzONtQWO'#JzON|QWO,5;YO! RQWO'#JzO!#WQrO'#JnOOQ?Mr'#Ci'#CiO%[Q^O'#EPO!#vQrO,5:pOOQQ'#Ju'#JuOOQO-E<f-E<fO9^QWO,5=[O!$^QWO,5=[O!$cQ^O,5;WO!&fQ7[O'#EhO!(PQWO,5;WO!(UQ^O'#DvO!(`Q`O,5;aO!(hQ`O,5;aO%[Q^O,5;aOOQU'#FS'#FSOOQU'#FU'#FUO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bO%[Q^O,5;bOOQU'#FY'#FYO!(vQ^O,5;sOOQ?Mr,5;x,5;xOOQ?Mr,5;y,5;yOOQ?Mr,5;{,5;{O%[Q^O'#IlO!*yQ?MxO,5<gO%[Q^O,5;bO!&fQ7[O,5;bO!+hQ7[O,5;bO!-YQ7[O'#EZO%[Q^O,5;vOOQ?Mr,5;z,5;zO!-aQ&jO'#FiO!.^Q&jO'#KSO!-xQ&jO'#KSO!.eQ&jO'#KSOOQO'#KS'#KSO!.yQ&jO,5<ROOOS,5<_,5<_O!/[Q^O'#FuOOOS'#Ik'#IkO7VO,YO,5<PO!/cQ&jO'#FwOOQ?Mr,5<P,5<PO!0SQ!LQO'#CvOOQ?Mr'#Cz'#CzO!0gO!0LbO'#DOO!1TQ7[O,5<dO!1[QWO,5<fO!2wQ$ISO'#GVO!3UQWO'#GWO!3ZQWO'#GWO!4yQ$ISO'#G[O!5uQ`O'#G`OOQO'#Gk'#GkO!+oQ7[O'#GjOOQO'#Gm'#GmO!+oQ7[O'#GlO!6hQ!LQO'#JgOOQ?Mr'#Jg'#JgO!6rQWO'#JfO!7QQWO'#JeO!7YQWO'#CuOOQ?Mr'#Cx'#CxO!7bQWO'#CzOOQ?Mr'#DS'#DSOOQ?Mr'#DU'#DUO1SQWO'#DWO!+oQ7[O'#F}O!+oQ7[O'#GPO!7gQWO'#GRO!7lQWO'#GSO!3ZQWO'#GYO!+oQ7[O'#G_O!7qQWO'#EnO!8`QWO,5<eOOQ?Mp'#Cr'#CrO!8hQWO'#EoO!9bQ`O'#EpOOQ?Mp'#J|'#J|O!9iQ?MxO'#K]O9hQ?MxO,5=`O`Q^O,5>pOOQU'#Jc'#JcOOQU,5>q,5>qOOQU-E<X-E<XO!;hQ?NdO,5:_O!9]Q`O,5:]O!>RQ?NdO,5:gO%[Q^O,5:gO!@iQ?NdO,5:iOOQO,5@v,5@vO!AYQ7[O,5=[O!AhQ?MxO'#JdO9RQWO'#JdO!AyQ?MxO,59ZO!BUQ`O,59ZO!B^Q7[O,59ZO:VQ7[O,59ZO!BiQWO,5;WO!BqQWO'#H^O!CVQWO'#K`O%[Q^O,5;|O!9]Q`O,5<OO!C_QWO,5=wO!CdQWO,5=wO!CiQWO,5=wO9hQ?MxO,5=wO;wQWO,5=gOOQO'#Cv'#CvO!CwQ`O,5=dO!DPQ7[O,5=eO!D[QWO,5=gO!DaQpO,5=jO!DiQWO'#K[O>tQWO'#HTO9^QWO'#HVO!DnQWO'#HVO:VQ7[O'#HXO!DsQWO'#HXOOQU,5=m,5=mO!DxQWO'#HYO!EZQWO'#CoO!E`QWO,59PO!EjQWO,59PO!GoQ^O,59POOQU,59P,59PO!HPQ?MxO,59PO%[Q^O,59PO!J[Q^O'#HaOOQU'#Hb'#HbOOQU'#Hc'#HcO`Q^O,5=yO!JrQWO,5=yO`Q^O,5>PO`Q^O,5>RO!JwQWO,5>TO`Q^O,5>VO!J|QWO,5>YO!KRQ^O,5>`OOQU,5>f,5>fO%[Q^O,5>fO9hQ?MxO,5>hOOQU,5>j,5>jO# ]QWO,5>jOOQU,5>l,5>lO# ]QWO,5>lOOQU,5>n,5>nO# yQ`O'#D[O%[Q^O'#JqO#!TQ`O'#JqO#!rQ`O'#DjO##TQ`O'#DjO#%fQ^O'#DjO#%mQWO'#JpO#%uQWO,5:TO#%zQWO'#EqO#&YQWO'#KPO#&bQWO,5;[O#&gQ`O'#DjO#&tQ`O'#ESOOQ?Mr,5:l,5:lO%[Q^O,5:lO#&{QWO,5:lO>tQWO,5;VO!BUQ`O,5;VO!B^Q7[O,5;VO:VQ7[O,5;VO#'TQWO,5@]O#'YQ(CYO,5:pOOQO-E<b-E<bO#(`Q?NQO,5;OOCrQ`O,5:oO#(jQ`O,5:oOCrQ`O,5;OO!AyQ?MxO,5:oOOQ?Mp'#Eg'#EgOOQO,5;O,5;OO%[Q^O,5;OO#(wQ?MxO,5;OO#)SQ?MxO,5;OO!BUQ`O,5:oOOQO,5;U,5;UO#)bQ?MxO,5;OPOOO'#IY'#IYP#)vO#@ItO,58|POOO,58|,58|OOOO-E<Y-E<YOOQ?Mr1G.p1G.pOOOO-E<Z-E<ZOOOO,59z,59zO#*RQpO,59zOOOO-E<]-E<]OOQ?Mr1G/d1G/dO#*WQrO,5>zO+}Q^O,5>zOOQO,5?Q,5?QO#*bQ^O'#I`OOQO-E<^-E<^O#*oQWO,5@ZO#*wQrO,5@ZO#+OQWO,5@iOOQ?Mr1G/j1G/jO%[Q^O,5@jO#+WQWO'#IfOOQO-E<d-E<dO#+OQWO,5@iOOQ?Mp1G0u1G0uOOQ?Mv1G/u1G/uOOQ?Mv1G0V1G0VO%[Q^O,5@gO#+lQ?MxO,5@gO#+}Q?MxO,5@gO#,UQWO,5@fO9WQWO,5@fO#,^QWO,5@fO#,lQWO'#IiO#,UQWO,5@fOOQ?Mp1G0t1G0tO!(`Q`O,5:rO!(kQ`O,5:rOOQQ,5:t,5:tO#-^QYO,5:tO#-fQ7[O1G2vO9^QWO1G2vOOQ?Mr1G0r1G0rO#-tQ?NdO1G0rO#.yQ?NbO,5;SOOQ?Mr'#GU'#GUO#/gQ?NdO'#JgO!$cQ^O1G0rO#1oQrO'#JrO%[Q^O'#JrO#1yQWO,5:bOOQ?Mr'#D['#D[OOQ?Mr1G0{1G0{O%[Q^O1G0{OOQ?Mr1G1e1G1eO#2OQWO1G0{O#4dQ?NdO1G0|O#4kQ?NdO1G0|O#7RQ?NdO1G0|O#7YQ?NdO1G0|O#9pQ?NdO1G0|O#<WQ?NdO1G0|O#<_Q?NdO1G0|O#<fQ?NdO1G0|O#>|Q?NdO1G0|O#?TQ?NdO1G0|O#AbQ07bO'#CiO#C]Q07bO1G1_O#CdQ07bO'#JnO#CwQ?NdO,5?WOOQ?Mp-E<j-E<jO#FUQ?NdO1G0|O#GRQ?NdO1G0|OOQ?Mr1G0|1G0|O#HRQ7[O'#JwO#H]QWO,5:uO#HbQ?NdO1G1bO#IUQ&jO,5<VO#I^Q&jO,5<WO#IfQ&jO'#FnO#I}QWO'#FmOOQO'#KT'#KTOOQO'#Ij'#IjO#JSQ&jO1G1mOOQ?Mr1G1m1G1mOOOS1G1x1G1xO#JeQ07bO'#JmO#JoQWO,5<aO!(vQ^O,5<aOOOS-E<i-E<iOOQ?Mr1G1k1G1kO#JtQ`O'#KSOOQ?Mr,5<c,5<cO#J|Q`O,5<cO#KRQ7[O'#DQOOOO'#I^'#I^O#KYO!0LbO,59jOOQ?Mr,59j,59jO%[Q^O1G2OO!7lQWO'#InO#KeQ7[O,5<xOOQ?Mr,5<u,5<uO!+oQ7[O'#IqO#LTQ7[O,5=UO!+oQ7[O'#IsO#LvQ7[O,5=WO!&fQ7[O,5=YOOQO1G2Q1G2QO#MQQpO'#CrO#MeQ$ISO'#EoO#NdQ`O'#G`O$ QQpO,5<qO$ XQWO'#KWO9WQWO'#KWO$ gQWO,5<sO!+oQ7[O,5<rO$ lQWO'#GXO$ }QWO,5<rO$!SQpO'#GUO$!aQpO'#KXO$!kQWO'#KXO!&fQ7[O'#KXO$!pQWO,5<vO$!uQ`O'#GaO!5pQ`O'#GaO$#WQWO'#GcO$#]QWO'#GeO!3ZQWO'#GhO$#bQ?MxO'#IpO$#mQ`O,5<zOOQ?Mv,5<z,5<zO$#tQ`O'#GaO$$SQ`O'#GbO$$[Q`O'#GbO$$aQ7[O,5=UO$$qQ7[O,5=WOOQ?Mr,5=Z,5=ZO!+oQ7[O,5@QO!+oQ7[O,5@QO$%RQWO'#IuO$%^QWO,5@PO$%fQWO,59aOOQ?Mr,59f,59fO$&YQ!LSO,59rOOQ?Mr'#Jk'#JkO$&{Q7[O,5<iO$'nQ7[O,5<kO@fQWO,5<mOOQ?Mr,5<n,5<nO$'xQWO,5<tO$'}Q7[O,5<yO$(_QWO'#JzO!$cQ^O1G2PO$(dQWO1G2PO9WQWO'#J}O9WQWO'#EqO%[Q^O'#EqO9WQWO'#IwO$(iQ?MxO,5@wOOQU1G2z1G2zOOQU1G4[1G4[OOQ?Mr1G/y1G/yOOQ?Mr1G/w1G/wO$*kQ?NdO1G0ROOQU1G2v1G2vO!&fQ7[O1G2vO%[Q^O1G2vO#-iQWO1G2vO$,oQ7[O'#EhOOQ?Mp,5@O,5@OO$,yQ?MxO,5@OOOQU1G.u1G.uO!AyQ?MxO1G.uO!BUQ`O1G.uO!B^Q7[O1G.uO$-[QWO1G0rO$-aQWO'#CiO$-lQWO'#KaO$-tQWO,5=xO$-yQWO'#KaO$.OQWO'#KaO$.^QWO'#I}O$.lQWO,5@zO$.tQrO1G1hOOQ?Mr1G1j1G1jO9^QWO1G3cO@fQWO1G3cO$.{QWO1G3cO$/QQWO1G3cOOQU1G3c1G3cO!D[QWO1G3RO!&fQ7[O1G3OO$/VQWO1G3OOOQU1G3P1G3PO!&fQ7[O1G3PO$/[QWO1G3PO$/dQ`O'#G}OOQU1G3R1G3RO!5pQ`O'#IyO!DaQpO1G3UOOQU1G3U1G3UOOQU,5=o,5=oO$/lQ7[O,5=qO9^QWO,5=qO$#]QWO,5=sO9RQWO,5=sO!BUQ`O,5=sO!B^Q7[O,5=sO:VQ7[O,5=sO$/zQWO'#K_O$0VQWO,5=tOOQU1G.k1G.kO$0[Q?MxO1G.kO@fQWO1G.kO$0gQWO1G.kO9hQ?MxO1G.kO$2oQrO,5@|O$2|QWO,5@|O9WQWO,5@|O$3XQ^O,5={O$3`QWO,5={OOQU1G3e1G3eO`Q^O1G3eOOQU1G3k1G3kOOQU1G3m1G3mO>oQWO1G3oO$3eQ^O1G3qO$7iQ^O'#HpOOQU1G3t1G3tO$7vQWO'#HvO>tQWO'#HxOOQU1G3z1G3zO$8OQ^O1G3zO9hQ?MxO1G4QOOQU1G4S1G4SOOQ?Mp'#G]'#G]O9hQ?MxO1G4UO9hQ?MxO1G4WO$<VQWO,5@]O!(vQ^O,5;]O9WQWO,5;]O>tQWO,5:UO!(vQ^O,5:UO!BUQ`O,5:UO$<[Q07bO,5:UOOQO,5;],5;]O$<fQ`O'#IaO$<|QWO,5@[OOQ?Mr1G/o1G/oO$=UQ`O'#IgO$=`QWO,5@kOOQ?Mp1G0v1G0vO##TQ`O,5:UOOQO'#Ic'#IcO$=hQ`O,5:nOOQ?Mv,5:n,5:nO#'OQWO1G0WOOQ?Mr1G0W1G0WO%[Q^O1G0WOOQ?Mr1G0q1G0qO>tQWO1G0qO!BUQ`O1G0qO!B^Q7[O1G0qOOQ?Mp1G5w1G5wO!AyQ?MxO1G0ZOOQO1G0j1G0jO%[Q^O1G0jO$=oQ?MxO1G0jO$=zQ?MxO1G0jO!BUQ`O1G0ZOCrQ`O1G0ZO$>YQ?MxO1G0jOOQO1G0Z1G0ZO$>nQ?NdO1G0jPOOO-E<W-E<WPOOO1G.h1G.hOOOO1G/f1G/fO$>xQpO,5<gO$?QQrO1G4fOOQO1G4l1G4lO%[Q^O,5>zO$?[QWO1G5uO$?dQWO1G6TO$?lQrO1G6UO9WQWO,5?QO$?vQ?NdO1G6RO%[Q^O1G6RO$@WQ?MxO1G6RO$@iQWO1G6QO$@iQWO1G6QO9WQWO1G6QO$@qQWO,5?TO9WQWO,5?TOOQO,5?T,5?TO$AVQWO,5?TO$(_QWO,5?TOOQO-E<g-E<gOOQQ1G0^1G0^OOQQ1G0`1G0`O#-aQWO1G0`OOQU7+(b7+(bO!&fQ7[O7+(bO%[Q^O7+(bO$AeQWO7+(bO$ApQ7[O7+(bO$BOQ?NdO,5=UO$DWQ?NdO,5=WO$F`Q?NdO,5=UO$HnQ?NdO,5=WO$J|Q?NdO,59rO$MRQ?NdO,5<iO% ZQ?NdO,5<kO%#cQ?NdO,5<yOOQ?Mr7+&^7+&^O%%qQ?NdO7+&^O%&eQ^O'#IbO%&rQWO,5@^O%&zQrO,5@^OOQ?Mr1G/|1G/|O%'UQWO7+&gOOQ?Mr7+&g7+&gO%'ZQ07bO,5:cO%[Q^O7+&yO%'eQ07bO,5:_O%'rQ07bO,5:gO%'|Q07bO,5:iO%(WQ7[O'#IeO%(bQWO,5@cOOQ?Mr1G0a1G0aOOQO1G1q1G1qOOQO1G1r1G1rO%(jQtO,5<YO!(vQ^O,5<XOOQO-E<h-E<hOOQ?Mr7+'X7+'XOOOS7+'d7+'dOOOS1G1{1G1{O%(uQWO1G1{OOQ?Mr1G1}1G1}OOOO,59l,59lO%(zQpO,59lOOOO-E<[-E<[OOQ?Mr1G/U1G/UO%)RQ?NdO7+'jOOQ?Mr,5?Y,5?YO%)uQpO,5?YOOQ?Mr1G2d1G2dP!&fQ7[O'#InPOQ?Mr-E<l-E<lO%*eQ7[O,5?]OOQ?Mr-E<o-E<oO%+WQ7[O,5?_OOQ?Mr-E<q-E<qO%+bQpO1G2tO%+iQpO'#CrO%,PQ7[O'#J}O%,WQ^O'#EqOOQ?Mr1G2]1G2]O%,bQWO'#ImO%,vQWO,5@rO%,vQWO,5@rO%-OQWO,5@rO%-ZQWO,5@rOOQO1G2_1G2_O%-iQ7[O1G2^O!+oQ7[O1G2^O%-yQ$ISO'#IoO%.WQWO,5@sO!&fQ7[O,5@sO%.`QpO,5@sOOQ?Mr1G2b1G2bOOQ?Mp,5<{,5<{OOQ?Mp,5<|,5<|O$(_QWO,5<|OCcQWO,5<|O!BUQ`O,5<{OOQO'#Gd'#GdO%.jQWO,5<}OOQ?Mp,5=P,5=PO$(_QWO,5=SOOQO,5?[,5?[OOQO-E<n-E<nOOQ?Mv1G2f1G2fO!5pQ`O,5<{O%.rQWO,5<|O$#WQWO,5<}O%.}Q`O,5<|O!+oQ7[O'#IqO%/nQ7[O1G2pO!+oQ7[O'#IsO%0aQ7[O1G2rO%0kQ7[O1G5lO%0uQ7[O1G5lOOQO,5?a,5?aOOQO-E<s-E<sOOQO1G.{1G.{O!9]Q`O,59tO%[Q^O,59tOOQ?Mr,5<h,5<hO%1SQWO1G2XO!+oQ7[O1G2`O%1XQ?NdO7+'kOOQ?Mr7+'k7+'kO!$cQ^O7+'kO%1{QWO,5;]OOQ?Mp,5?c,5?cOOQ?Mp-E<u-E<uO%2QQpO'#KYO#'OQWO7+(bO4UQrO7+(bO$AhQWO7+(bO%2[Q?NbO'#CiO%2oQ?NbO,5=QO%3aQWO,5=QOOQ?Mp1G5j1G5jOOQU7+$a7+$aO!AyQ?MxO7+$aO!BUQ`O7+$aO!$cQ^O7+&^O%3fQWO'#I|O%3}QWO,5@{OOQO1G3d1G3dO9^QWO,5@{O%3}QWO,5@{O%4VQWO,5@{OOQO,5?i,5?iOOQO-E<{-E<{OOQ?Mr7+'S7+'SO%4[QWO7+(}O9hQ?MxO7+(}O9^QWO7+(}O@fQWO7+(}OOQU7+(m7+(mO%4aQ?NbO7+(jO!&fQ7[O7+(jO%4kQpO7+(kOOQU7+(k7+(kO!&fQ7[O7+(kO%4rQWO'#K^O%4}QWO,5=iOOQO,5?e,5?eOOQO-E<w-E<wOOQU7+(p7+(pO%6aQ`O'#HWOOQU1G3]1G3]O!&fQ7[O1G3]O%[Q^O1G3]O%6hQWO1G3]O%6sQ7[O1G3]O9hQ?MxO1G3_O$#]QWO1G3_O9RQWO1G3_O!BUQ`O1G3_O!B^Q7[O1G3_O%7RQWO'#I{O%7gQWO,5@yO%7oQ`O,5@yOOQ?Mp1G3`1G3`OOQU7+$V7+$VO@fQWO7+$VO9hQ?MxO7+$VO%7zQWO7+$VO%[Q^O1G6hO%[Q^O1G6iO%8PQ?MxO1G6hO%8ZQ^O1G3gO%8bQWO1G3gO%8gQ^O1G3gOOQU7+)P7+)PO9hQ?MxO7+)ZO`Q^O7+)]OOQU'#Kd'#KdOOQU'#JO'#JOO%8nQ^O,5>[OOQU,5>[,5>[O%[Q^O'#HqO%8{QWO'#HsOOQU,5>b,5>bO9WQWO,5>bOOQU,5>d,5>dOOQU7+)f7+)fOOQU7+)l7+)lOOQU7+)p7+)pOOQU7+)r7+)rO%9QQ`O1G5wO%9fQ07bO1G0wO%9pQWO1G0wOOQO1G/p1G/pO%9{Q07bO1G/pO>tQWO1G/pO!(vQ^O'#DjOOQO,5>{,5>{OOQO-E<_-E<_OOQO,5?R,5?ROOQO-E<e-E<eO!BUQ`O1G/pOOQO-E<a-E<aOOQ?Mv1G0Y1G0YOOQ?Mr7+%r7+%rO#'OQWO7+%rOOQ?Mr7+&]7+&]O>tQWO7+&]O!BUQ`O7+&]OOQO7+%u7+%uO$>nQ?NdO7+&UOOQO7+&U7+&UO%[Q^O7+&UO%:VQ?MxO7+&UO!AyQ?MxO7+%uO!BUQ`O7+%uO%:bQ?MxO7+&UO%:pQ?NdO7++mO%[Q^O7++mO%;QQWO7++lO%;QQWO7++lOOQO1G4o1G4oO9WQWO1G4oO%;YQWO1G4oOOQQ7+%z7+%zO#'OQWO<<K|O4UQrO<<K|O%;hQWO<<K|OOQU<<K|<<K|O!&fQ7[O<<K|O%[Q^O<<K|O%;pQWO<<K|O%;{Q?NdO,5?]O%>TQ?NdO,5?_O%@]Q?NdO1G2^O%BkQ?NdO1G2pO%DsQ?NdO1G2rO%F{QrO,5>|O%[Q^O,5>|OOQO-E<`-E<`O%GVQWO1G5xOOQ?Mr<<JR<<JRO%G_Q07bO1G0rO%IfQ07bO1G0|O%ImQ07bO1G0|O%KnQ07bO1G0|O%KuQ07bO1G0|O%MvQ07bO1G0|O& wQ07bO1G0|O&!OQ07bO1G0|O&!VQ07bO1G0|O&$WQ07bO1G0|O&$_Q07bO1G0|O&$fQ?NdO<<JeO&&^Q07bO1G0|O&'ZQ07bO1G0|O&(ZQ07bO'#JgO&*^Q07bO1G1bO&*kQ07bO1G0RO&*uQ7[O,5?POOQO-E<c-E<cO!(vQ^O'#FpOOQO'#KU'#KUOOQO1G1t1G1tO&+PQWO1G1sO&+UQ07bO,5?WOOOS7+'g7+'gOOOO1G/W1G/WOOQ?Mr1G4t1G4tO!+oQ7[O7+(`O&-fQrO'#CiO&-pQWO,5?XO9WQWO,5?XOOQO-E<k-E<kO&.OQWO1G6^O&.OQWO1G6^O&.WQWO1G6^O&.cQ7[O7+'xO&.sQpO,5?ZO&.}QWO,5?ZO!&fQ7[O,5?ZOOQO-E<m-E<mO&/SQpO1G6_O&/^QWO1G6_OOQ?Mp1G2h1G2hO$(_QWO1G2hOOQ?Mp1G2g1G2gO&/fQWO1G2iO!&fQ7[O1G2iOOQ?Mp1G2n1G2nO!BUQ`O1G2gOCcQWO1G2hO&/kQWO1G2iO&/sQWO1G2hO$#WQWO1G2iO&0gQ7[O,5?]OOQ?Mr-E<p-E<pO&1YQ7[O,5?_OOQ?Mr-E<r-E<rO!+oQ7[O7++WOOQ?Mr1G/`1G/`O&1dQWO1G/`OOQ?Mr7+'s7+'sO&1iQ7[O7+'zO&1yQ?NdO<<KVOOQ?Mr<<KV<<KVO&2mQWO1G0wO!&fQ7[O'#IvO&2rQWO,5@tO&4tQrO<<K|O!&fQ7[O1G2lOOQU<<G{<<G{O!AyQ?MxO<<G{O&4{Q?NdO<<IxOOQ?Mr<<Ix<<IxOOQO,5?h,5?hO&5oQWO,5?hO&5tQWO,5?hOOQO-E<z-E<zO&6SQWO1G6gO&6SQWO1G6gO9^QWO1G6gO@fQWO<<LiOOQU<<Li<<LiO&6[QWO<<LiO9hQ?MxO<<LiOOQU<<LU<<LUO%4aQ?NbO<<LUOOQU<<LV<<LVO%4kQpO<<LVO&6aQ`O'#IxO&6lQWO,5@xO!(vQ^O,5@xOOQU1G3T1G3TO%,WQ^O'#JqOOQO'#Iz'#IzO9hQ?MxO'#IzO&6tQ`O,5=rOOQU,5=r,5=rO&6{Q`O'#EdO&7aQ`O'#GcO&7fQWO7+(wO&7kQWO7+(wOOQU7+(w7+(wO!&fQ7[O7+(wO%[Q^O7+(wO&7sQWO7+(wOOQU7+(y7+(yO9hQ?MxO7+(yO$#]QWO7+(yO9RQWO7+(yO!BUQ`O7+(yO&8OQWO,5?gOOQO-E<y-E<yOOQO'#HZ'#HZO&8ZQWO1G6eO9hQ?MxO<<GqOOQU<<Gq<<GqO@fQWO<<GqO&8cQWO7+,SO&8hQWO7+,TO%[Q^O7+,SO%[Q^O7+,TOOQU7+)R7+)RO&8mQWO7+)RO&8rQ^O7+)RO&8yQWO7+)ROOQU<<Lu<<LuOOQU<<Lw<<LwOOQU-E<|-E<|OOQU1G3v1G3vO&9OQWO,5>]OOQU,5>_,5>_O&9TQWO1G3|O9WQWO7+&cO!(vQ^O7+&cOOQO7+%[7+%[O&9YQ07bO1G6UO>tQWO7+%[OOQ?Mr<<I^<<I^OOQ?Mr<<Iw<<IwO>tQWO<<IwOOQO<<Ip<<IpO$>nQ?NdO<<IpO%[Q^O<<IpOOQO<<Ia<<IaO!AyQ?MxO<<IaO&9dQ?MxO<<IpO&9oQ?NdO<= XO&:PQWO<= WOOQO7+*Z7+*ZO9WQWO7+*ZOOQUANAhANAhO&:XQrOANAhO!&fQ7[OANAhO#'OQWOANAhO4UQrOANAhO&:`QWOANAhO%[Q^OANAhO&:hQ?NdO7+'xO&<vQ?NdO,5?]O&?OQ?NdO,5?_O&AWQ?NdO7+'zO&CfQrO1G4hO&CpQ07bO7+&^O&EqQ07bO,5=UO&GuQ07bO,5=WO&HVQ07bO,5=UO&HgQ07bO,5=WO&HwQ07bO,59rO&JzQ07bO,5<iO&LzQ07bO,5<kO' ]Q07bO,5<yO'#OQ07bO7+'jO'#]Q07bO7+'kO'#jQWO,5<[OOQO7+'_7+'_O'#oQ7[O<<KzOOQO1G4s1G4sO'#vQWO1G4sO'$RQWO1G4sO'$aQWO7++xO'$aQWO7++xO!&fQ7[O1G4uO'$iQpO1G4uO'$sQWO7++yOOQ?Mp7+(S7+(SO'${QWO7+(TO'%WQpO7+(TOOQ?Mp7+(R7+(RO$(_QWO7+(SO'%bQWO7+(TO!&fQ7[O7+(TOCcQWO7+(SO'%gQWO7+(TO'%oQ7[O<<NrOOQ?Mr7+$z7+$zO'%yQpO,5?bOOQO-E<t-E<tO'&TQ?NbO7+(WOOQUAN=gAN=gO9^QWO1G5SOOQO1G5S1G5SO'&eQWO1G5SO'&jQWO7+,RO'&jQWO7+,RO9hQ?MxOANBTO@fQWOANBTOOQUANBTANBTOOQUANApANApOOQUANAqANAqO'&rQWO,5?dOOQO-E<v-E<vO'&}Q07bO1G6dOOQO,5?f,5?fOOQO-E<x-E<xOOQU1G3^1G3^O%,WQ^O,5<}O''XQWO,5<}OOQU<<Lc<<LcO!&fQ7[O<<LcO&7fQWO<<LcO''^QWO<<LcO%[Q^O<<LcOOQU<<Le<<LeO9hQ?MxO<<LeO$#]QWO<<LeO9RQWO<<LeO''fQ`O1G5RO''qQWO7+,POOQUAN=]AN=]O9hQ?MxOAN=]OOQU<= n<= nOOQU<= o<= oO''yQWO<= nO'(OQWO<= oOOQU<<Lm<<LmO'(TQWO<<LmO'(YQ^O<<LmOOQU1G3w1G3wO>tQWO7+)hO'(aQWO<<I}O'(lQ07bO<<I}OOQO<<Hv<<HvOOQ?MrAN?cAN?cOOQOAN?[AN?[O$>nQ?NdOAN?[OOQOAN>{AN>{O%[Q^OAN?[OOQO<<Mu<<MuOOQUG27SG27SO!&fQ7[OG27SO#'OQWOG27SO'(vQrOG27SO4UQrOG27SO'(}QWOG27SO')VQ07bO<<JeO')dQ07bO1G2^O'+VQ07bO,5?]O'-VQ07bO,5?_O'/VQ07bO1G2pO'1VQ07bO1G2rO'3VQ07bO<<KVO'3dQ07bO<<IxOOQO1G1v1G1vO!+oQ7[OANAfOOQO7+*_7+*_O'3qQWO7+*_O'3|QWO<= dO'4UQpO7+*aOOQ?Mp<<Ko<<KoO$(_QWO<<KoOCcQWO<<KoO'4`QWO<<KoO!&fQ7[O<<KoOOQ?Mp<<Kn<<KnO'4kQpO<<KoO$(_QWO<<KnO'4uQWO<<KoO!&fQ7[O<<KoOOQO7+*n7+*nO9^QWO7+*nO'4zQWO<= mOOQUG27oG27oO9hQ?MxOG27oO!(vQ^O1G5OO'5SQWO7+,OO&7fQWOANA}OOQUANA}ANA}O!&fQ7[OANA}O'5[QWOANA}OOQUANBPANBPO9hQ?MxOANBPO$#]QWOANBPOOQO'#H['#H[OOQO7+*m7+*mOOQUG22wG22wOOQUANEYANEYOOQUANEZANEZOOQUANBXANBXO'5dQWOANBXOOQU<<MS<<MSO!(vQ^OAN?iOOQOG24vG24vO$>nQ?NdOG24vO#'OQWOLD,nOOQULD,nLD,nO!&fQ7[OLD,nO'5iQrOLD,nO'5pQ07bO7+'xO'7cQ07bO,5?]O'9cQ07bO,5?_O';cQ07bO7+'zO'=UQ7[OG27QOOQO<<My<<MyOOQ?MpANAZANAZO$(_QWOANAZOCcQWOANAZO'=fQpOANAZO'=mQWOANAZO!&fQ7[OANAZOOQ?MpANAYANAYO'=xQpOANAZOOQO<<NY<<NYOOQULD-ZLD-ZO'>SQ07bO7+*jOOQUG27iG27iO&7fQWOG27iO!&fQ7[OG27iOOQUG27kG27kO9hQ?MxOG27kOOQUG27sG27sO'>^Q07bOG25TOOQOLD*bLD*bOOQU!$(!Y!$(!YO#'OQWO!$(!YO!&fQ7[O!$(!YO'>hQ?NdOG27QOOQ?MpG26uG26uO$(_QWOG26uO'@vQWOG26uOCcQWOG26uO'ARQpOG26uO!&fQ7[OG26uOOQULD-TLD-TO&7fQWOLD-TOOQULD-VLD-VOOQU!)9Et!)9EtO#'OQWO!)9EtOOQ?MpLD,aLD,aO$(_QWOLD,aOCcQWOLD,aO'AYQWOLD,aO'AeQpOLD,aOOQU!$(!o!$(!oOOQU!.K;`!.K;`O'AlQ07bOG27QOOQ?Mp!$( {!$( {O$(_QWO!$( {OCcQWO!$( {O'C_QWO!$( {OOQ?Mp!)9Eg!)9EgO$(_QWO!)9EgOCcQWO!)9EgOOQ?Mp!.K;R!.K;RO$(_QWO!.K;ROOQ?Mp!4/0m!4/0mO!(vQ^O'#DwO1PQWO'#EUO'CjQrO'#JmO'CqQMnO'#DsO'CxQ^O'#D{O'DPQrO'#CiO'FgQrO'#CiO!(vQ^O'#D}O'FwQ^O,5;WO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O,5;bO!(vQ^O'#IlO'HzQWO,5<gO!(vQ^O,5;bO'ISQ7[O,5;bO'JmQ7[O,5;bO!(vQ^O,5;vO!&fQ7[O'#GjO'ISQ7[O'#GjO!&fQ7[O'#GlO'ISQ7[O'#GlO1SQWO'#DWO1SQWO'#DWO!&fQ7[O'#F}O'ISQ7[O'#F}O!&fQ7[O'#GPO'ISQ7[O'#GPO!&fQ7[O'#G_O'ISQ7[O'#G_O!(vQ^O,5:gO'JtQ`O'#D[O!(vQ^O,5@jO'FwQ^O1G0rO'KOQ07bO'#CiO!(vQ^O1G2OO!&fQ7[O'#IqO'ISQ7[O'#IqO!&fQ7[O'#IsO'ISQ7[O'#IsO'KYQpO'#CrO!&fQ7[O,5<rO'ISQ7[O,5<rO'FwQ^O1G2PO!(vQ^O7+&yO!&fQ7[O1G2^O'ISQ7[O1G2^O!&fQ7[O'#IqO'ISQ7[O'#IqO!&fQ7[O'#IsO'ISQ7[O'#IsO!&fQ7[O1G2`O'ISQ7[O1G2`O'FwQ^O7+'kO'FwQ^O7+&^O!&fQ7[OANAfO'ISQ7[OANAfO'KmQWO'#ElO'KrQWO'#ElO'KzQWO'#F[O'LPQWO'#EvO'LUQWO'#KOO'LaQWO'#J|O'LlQWO,5;WO'LqQ7[O,5<dO'LxQWO'#GWO'L}QWO'#GWO'MSQWO,5<eO'M[QWO,5;WO'MdQ07bO1G1_O'MkQWO,5<rO'MpQWO,5<rO'MuQWO,5<tO'MzQWO,5<tO'NPQWO1G2PO'NUQWO1G0rO'NZQ7[O<<KzO'NbQ7[O<<KzO7eQ7[O'#FzO9RQWO'#FyOAaQWO'#EkO!(vQ^O,5;sO!3ZQWO'#GWO!3ZQWO'#GWO!3ZQWO'#GYO!3ZQWO'#GYO!+oQ7[O7+(`O!+oQ7[O7+(`O%+bQpO1G2tO%+bQpO1G2tO!&fQ7[O,5=YO!&fQ7[O,5=Y\",\n  stateData: \"( f~O'wOS'xOSTOS'yRQ~OPYOQYOSfOY!VOaqOdzOeyOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![XO!fuO!iZO!lYO!mYO!nYO!pvO!rwO!uxO!y]O#t!PO$V|O%e}O%g!QO%i!OO%j!OO%k!OO%n!RO%p!SO%s!TO%t!TO%v!UO&S!WO&Y!XO&[!YO&^!ZO&`![O&c!]O&i!^O&o!_O&q!`O&s!aO&u!bO&w!cO(OSO(QTO(TUO([VO(j[O(yiO~OWtO~P`OPYOQYOSfOd!jOe!iOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![!eO!fuO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$V!kO(O!dO(QTO(TUO([VO(j[O(yiO~Oa!wOp!nO!P!oO!_!yO!`!vO!a!vO!y;bO#Q!pO#R!pO#S!xO#T!pO#U!pO#X!zO#Y!zO(P!lO(QTO(TUO(`!mO(j!sO~O'y!{O~OP]XR]X[]Xa]Xo]X}]X!P]X!Y]X!i]X!m]X#O]X#P]X#]]X#hfX#k]X#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#u]X#w]X#y]X#z]X$P]X'u]X([]X(m]X(t]X(u]X~O!d%PX~P(qO_!}O(Q#PO(R!}O(S#PO~O_#QO(S#PO(T#PO(U#QO~Ou#SO!R#TO(]#TO(^#VO~OPYOQYOSfOd!jOe!iOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![!eO!fuO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$V!kO(O;fO(QTO(TUO([VO(j[O(yiO~O!X#ZO!Y#WO!V(cP!V(qP~P+}O!Z#cO~P`OPYOQYOSfOd!jOe!iOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![!eO!fuO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$V!kO(QTO(TUO([VO(j[O(yiO~Om#mO!X#iO!y]O#f#lO#g#iO(O;gO!h(nP~P.iO!i#oO(O#nO~O!u#sO!y]O%e#tO~O#h#uO~O!d#vO#h#uO~OP$[OR#zO[$cOo$aO}#yO!P#{O!Y$_O!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO#u$SO#w$UO#y$WO#z$XO([VO(m$YO(t#|O(u#}O~Oa(aX'u(aX's(aX!h(aX!V(aX![(aX%f(aX!d(aX~P1qO#P$dO#]$eO$P$eOP(bXR(bX[(bXo(bX}(bX!P(bX!Y(bX!i(bX!m(bX#O(bX#k(bX#l(bX#m(bX#n(bX#o(bX#p(bX#q(bX#r(bX#s(bX#u(bX#w(bX#y(bX#z(bX([(bX(m(bX(t(bX(u(bX![(bX%f(bX~Oa(bX'u(bX's(bX!V(bX!h(bXs(bX!d(bX~P4UO#]$eO~O$[$hO$^$gO$e$mO~OSfO![$nO$h$oO$j$qO~Oh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{%[O!P${O![$|O!f%aO!i$xO#g%bO$V%_O$r%]O$t%^O$w%`O(O$sO(QTO(TUO([$uO(t$}O(u%POg(XP~O!i%cO~O!P%fO![%gO(O%eO~O!d%kO~Oa%lO'u%lO~O}%pO~P%[O(P!lO~P%[O%k%tO~P%[Oh%VO!i%cO(O%eO(P!lO~Oe%{O!i%cO(O%eO~O#s$RO~O}&QO![%}O!i&PO%g&TO(O%eO(P!lO(QTO(TUO`)SP~O!u#sO~O%p&VO!P)OX![)OX(O)OX~O(O&WO~O!r&]O#t!PO%g!QO%i!OO%j!OO%k!OO%n!RO%p!SO%s!TO%t!TO~Od&bOe&aO!u&_O%e&`O%x&^O~P;|Od&eOeyO![&dO!r&]O!uxO!y]O#t!PO%e}O%i!OO%j!OO%k!OO%n!RO%p!SO%s!TO%t!TO%v!UO~Ob&hO#]&kO%g&fO(P!lO~P=RO!i&lO!r&pO~O!i#oO~O![XO~Oa%lO't&xO'u%lO~Oa%lO't&{O'u%lO~Oa%lO't&}O'u%lO~O's]X!V]Xs]X!h]X&W]X![]X%f]X!d]X~P(qO!_'[O!`'TO!a'TO(P!lO(QTO(TUO~Op'RO!P'QO!X'UO(`'PO!Z(dP!Z(sP~P@YOk'_O![']O(O%eO~Oe'dO!i%cO(O%eO~O}&QO!i&PO~Op!nO!P!oO!y;bO#Q!pO#R!pO#T!pO#U!pO(P!lO(QTO(TUO(`!mO(j!sO~O!_'jO!`'iO!a'iO#S!pO#X'kO#Y'kO~PAtOa%lOh%VO!d#vO!i%cO'u%lO(m'mO~O!m'qO#]'oO~PCSOp!nO!P!oO(QTO(TUO(`!mO(j!sO~O![XOp(hX!P(hX!_(hX!`(hX!a(hX!y(hX#Q(hX#R(hX#S(hX#T(hX#U(hX#X(hX#Y(hX(P(hX(Q(hX(T(hX(`(hX(j(hX~O!`'iO!a'iO(P!lO~PCrO'z'uO'{'uO'|'wO~O_!}O(Q'yO(R!}O(S'yO~O_#QO(S'yO(T'yO(U#QO~Os'{O~P%[Ou#SO!R#TO(]#TO(^(OO~O!X(QO!V'SX!V'YX!Y'SX!Y'YX~P+}O!Y(SO!V(cX~OP$[OR#zO[$cOo$aO}#yO!P#{O!Y(SO!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO#u$SO#w$UO#y$WO#z$XO([VO(m$YO(t#|O(u#}O~O!V(cX~PGmO!V(XO~O!V(pX!Y(pX!d(pX!h(pX(m(pX~O#](pX#h#aX!Z(pX~PIpO#](YO!V(rX!Y(rX~O!Y(ZO!V(qX~O!V(^O~O#]$eO~PIpO!Z(_O~P`OR#zO}#yO!P#{O!i#xO([VOP!ka[!kao!ka!Y!ka!m!ka#O!ka#k!ka#l!ka#m!ka#n!ka#o!ka#p!ka#q!ka#r!ka#s!ka#u!ka#w!ka#y!ka#z!ka(m!ka(t!ka(u!ka~Oa!ka'u!ka's!ka!V!ka!h!kas!ka![!ka%f!ka!d!ka~PKWO!h(`O~O!d#vO#](aO(m'mO!Y(oXa(oX'u(oX~O!h(oX~PMsO!P%fO![%gO!y]O#f(fO#g(eO(O%eO~O!Y(gO!h(nX~O!h(iO~O!P%fO![%gO#g(eO(O%eO~OP(bXR(bX[(bXo(bX}(bX!P(bX!Y(bX!i(bX!m(bX#O(bX#k(bX#l(bX#m(bX#n(bX#o(bX#p(bX#q(bX#r(bX#s(bX#u(bX#w(bX#y(bX#z(bX([(bX(m(bX(t(bX(u(bX~O!d#vO!h(bX~P! aOR(kO}(jO!i#xO#P$dO!y!xa!P!xa~O!u!xa%e!xa![!xa#f!xa#g!xa(O!xa~P!#bO!u(oO~OPYOQYOSfOd!jOe!iOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![XO!fuO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$V!kO(O!dO(QTO(TUO([VO(j[O(yiO~Oh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{<OO!P${O![$|O!f=`O!i$xO#g<UO$V%_O$r<QO$t<SO$w%`O(O(sO(QTO(TUO([$uO(t$}O(u%PO~O#h(uO~O!X(wO!h(fP~P%[O(`(yO(j[O~O!P({O!i#xO(`(yO(j[O~OP;aOQ;aOSfOd=[Oe!iOmkOo;aOpkOqkOwkOy;aO{;aO!PWO!TkO!UkO![!eO!f;dO!iZO!l;aO!m;aO!n;aO!p;eO!r;hO!u!hO$V!kO(O)YO(QTO(TUO([VO(j[O(y=YO~O!Y$_Oa$oa'u$oa's$oa!h$oa!V$oa![$oa%f$oa!d$oa~O#t)aO~P!&fOh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{%[O!P${O![$|O!f%aO!i$xO#g%bO$V%_O$r%]O$t%^O$w%`O(O(sO(QTO(TUO([$uO(t$}O(u%PO~Og(kP~P!+oO})fO!d)eO![$]X$Y$]X$[$]X$^$]X$e$]X~O!d)eO![(vX$Y(vX$[(vX$^(vX$e(vX~O})fO~P!-xO})fO![(vX$Y(vX$[(vX$^(vX$e(vX~O![)hO$Y)lO$[)gO$^)gO$e)mO~O!X)pO~P!(vO$[$hO$^$gO$e)tO~Ok$xX}$xX!P$xX#P$xX(t$xX(u$xX~OgjXg$xXkjX!YjX#]jX~P!/nOu)vO(])wO(^)yO~Ok*SO}){O!P)|O(t$}O(u%PO~Og)zO~P!0rOg*TO~Oh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{<OO!P*VO![*WO!f=`O!i$xO#g<UO$V%_O$r<QO$t<SO$w%`O(QTO(TUO([$uO(t$}O(u%PO~O!X*ZO(O*UO!h(zP~P!1aO#h*]O~O!i*^O~Oh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{<OO!P${O![$|O!f=`O!i$xO#g<UO$V%_O$r<QO$t<SO$w%`O(O*`O(QTO(TUO([$uO(t$}O(u%PO~O!X*cO!V({P~P!3`Oo*oO!P*gO!_*mO!`*fO!a*fO!i*^O#X*nO%]*iO(P!lO(`!mO~O!Z*lO~P!5TO#P$dOk(ZX}(ZX!P(ZX(t(ZX(u(ZX!Y(ZX#](ZX~Og(ZX#}(ZX~P!5|Ok*tO#]*sOg(YX!Y(YX~O!Y*uOg(XX~O(O&WOg(XP~Op*xO~O!i*}O~O(O(sO~Om+RO!P%fO!X#iO![%gO!y]O#f#lO#g#iO(O%eO!h(nP~O!d#vO#h+SO~O!P%fO!X+UO!Y(ZO![%gO(O%eO!V(qP~Op'XO!P+WO!X+VO(QTO(TUO(`(yO~O!Z(sP~P!8|O!Y+XOa)PX'u)PX~OP$[OR#zO[$cOo$aO}#yO!P#{O!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO#u$SO#w$UO#y$WO#z$XO([VO(m$YO(t#|O(u#}O~Oa!ga!Y!ga'u!ga's!ga!V!ga!h!gas!ga![!ga%f!ga!d!ga~P!9tOR#zO}#yO!P#{O!i#xO([VOP!oa[!oao!oa!Y!oa!m!oa#O!oa#k!oa#l!oa#m!oa#n!oa#o!oa#p!oa#q!oa#r!oa#s!oa#u!oa#w!oa#y!oa#z!oa(m!oa(t!oa(u!oa~Oa!oa'u!oa's!oa!V!oa!h!oas!oa![!oa%f!oa!d!oa~P!<[OR#zO}#yO!P#{O!i#xO([VOP!qa[!qao!qa!Y!qa!m!qa#O!qa#k!qa#l!qa#m!qa#n!qa#o!qa#p!qa#q!qa#r!qa#s!qa#u!qa#w!qa#y!qa#z!qa(m!qa(t!qa(u!qa~Oa!qa'u!qa's!qa!V!qa!h!qas!qa![!qa%f!qa!d!qa~P!>rOh%VOk+bO![']O%f+aO~O!d+dOa(WX![(WX'u(WX!Y(WX~Oa%lO![XO'u%lO~Oh%VO!i%cO~Oh%VO!i%cO(O%eO~O!d#vO#h(uO~Ob+oO%g+pO(O+lO(QTO(TUO!Z)TP~O!Y+qO`)SX~O[+uO~O`+vO~O![%}O(O%eO(P!lO`)SP~Oh%VO#]+{O~Oh%VOk,OO![$|O~O![,QO~O},SO![XO~O%k%tO~O!u,XO~Oe,^O~Ob,_O(O#nO(QTO(TUO!Z)RP~Oe%{O~O%g!QO(O&WO~P=RO[,dO`,cO~OPYOQYOSfOdzOeyOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO!fuO!iZO!lYO!mYO!nYO!pvO!uxO!y]O%e}O(QTO(TUO([VO(j[O(yiO~O![!eO!r!gO$V!kO(O!dO~P!ErO`,cOa%lO'u%lO~OPYOQYOSfOd!jOe!iOmkOoYOpkOqkOwkOyYO{YO!PWO!TkO!UkO![!eO!fuO!iZO!lYO!mYO!nYO!pvO!u!hO$V!kO(O!dO(QTO(TUO([VO(j[O(yiO~Oa,iO!rwO#t!OO%i!OO%j!OO%k!OO~P!H[O!i&lO~O&Y,oO~O![,qO~O&k,sO&m,tOP&haQ&haS&haY&haa&had&hae&ham&hao&hap&haq&haw&hay&ha{&ha!P&ha!T&ha!U&ha![&ha!f&ha!i&ha!l&ha!m&ha!n&ha!p&ha!r&ha!u&ha!y&ha#t&ha$V&ha%e&ha%g&ha%i&ha%j&ha%k&ha%n&ha%p&ha%s&ha%t&ha%v&ha&S&ha&Y&ha&[&ha&^&ha&`&ha&c&ha&i&ha&o&ha&q&ha&s&ha&u&ha&w&ha's&ha(O&ha(Q&ha(T&ha([&ha(j&ha(y&ha!Z&ha&a&hab&ha&f&ha~O(O,yO~Oh!bX!Y!OX!Z!OX!d!OX!d!bX!i!bX#]!OX~O!Y!bX!Z!bX~P# bO!d-OO#],}Oh(eX!Y#eX!Y(eX!Z#eX!Z(eX!d(eX!i(eX~Oh%VO!d-QO!i%cO!Y!^X!Z!^X~Op!nO!P!oO(QTO(TUO(`!mO~OP;aOQ;aOSfOd=[Oe!iOmkOo;aOpkOqkOwkOy;aO{;aO!PWO!TkO!UkO![!eO!f;dO!iZO!l;aO!m;aO!n;aO!p;eO!r;hO!u!hO$V!kO(QTO(TUO([VO(j[O(y=YO~O(O<[O~P##fO!Y-UO!Z(dX~O!Z-WO~O!d-OO#],}O!Y#eX!Z#eX~O!Y-XO!Z(sX~O!Z-ZO~O!`-[O!a-[O(P!lO~P##TO!Z-_O~P'_Ok-bO![']O~O!V-gO~Op!xa!_!xa!`!xa!a!xa#Q!xa#R!xa#S!xa#T!xa#U!xa#X!xa#Y!xa(P!xa(Q!xa(T!xa(`!xa(j!xa~P!#bO!m-lO#]-jO~PCSO!`-nO!a-nO(P!lO~PCrOa%lO#]-jO'u%lO~Oa%lO!d#vO#]-jO'u%lO~Oa%lO!d#vO!m-lO#]-jO'u%lO(m'mO~O'z'uO'{'uO'|-sO~Os-tO~O!V'Sa!Y'Sa~P!9tO!X-xO!V'SX!Y'SX~P%[O!Y(SO!V(ca~O!V(ca~PGmO!Y(ZO!V(qa~O!P%fO!X-|O![%gO(O%eO!V'YX!Y'YX~O#].OO!Y(oa!h(oaa(oa'u(oa~O!d#vO~P#+lO!Y(gO!h(na~O!P%fO![%gO#g.SO(O%eO~Om.XO!P%fO!X.UO![%gO!y]O#f.WO#g.UO(O%eO!Y']X!h']X~OR.]O!i#xO~Oh%VOk.`O![']O%f._O~Oa#`i!Y#`i'u#`i's#`i!V#`i!h#`is#`i![#`i%f#`i!d#`i~P!9tOk=fO}){O!P)|O(t$}O(u%PO~O#h#[aa#[a#]#[a'u#[a!Y#[a!h#[a![#[a!V#[a~P#.hO#h(ZXP(ZXR(ZX[(ZXa(ZXo(ZX!i(ZX!m(ZX#O(ZX#k(ZX#l(ZX#m(ZX#n(ZX#o(ZX#p(ZX#q(ZX#r(ZX#s(ZX#u(ZX#w(ZX#y(ZX#z(ZX'u(ZX([(ZX(m(ZX!h(ZX!V(ZX's(ZXs(ZX![(ZX%f(ZX!d(ZX~P!5|O!Y.mO!h(fX~P!9tO!h.pO~O!V.rO~OP$[OR#zO}#yO!P#{O!i#xO!m$[O([VO[#jia#jio#ji!Y#ji#O#ji#l#ji#m#ji#n#ji#o#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji'u#ji(m#ji(t#ji(u#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~O#k#ji~P#2TO#k$OO~P#2TOP$[OR#zOo$aO}#yO!P#{O!i#xO!m$[O#k$OO#l$PO#m$PO#n$PO([VO[#jia#ji!Y#ji#O#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji'u#ji(m#ji(t#ji(u#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~O#o#ji~P#4rO#o$QO~P#4rOP$[OR#zO[$cOo$aO}#yO!P#{O!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO([VOa#ji!Y#ji#w#ji#y#ji#z#ji'u#ji(m#ji(t#ji(u#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~O#u#ji~P#7aOP$[OR#zO[$cOo$aO}#yO!P#{O!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO#u$SO([VO(u#}Oa#ji!Y#ji#y#ji#z#ji'u#ji(m#ji(t#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~O#w$UO~P#9wO#w#ji~P#9wO#u$SO~P#7aOP$[OR#zO[$cOo$aO}#yO!P#{O!i#xO!m$[O#O$RO#k$OO#l$PO#m$PO#n$PO#o$QO#p$RO#q$RO#r$bO#s$RO#u$SO#w$UO([VO(t#|O(u#}Oa#ji!Y#ji#z#ji'u#ji(m#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~O#y#ji~P#<mO#y$WO~P#<mOP]XR]X[]Xo]X}]X!P]X!i]X!m]X#O]X#P]X#]]X#hfX#k]X#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#u]X#w]X#y]X#z]X$P]X([]X(m]X(t]X(u]X!Y]X!Z]X~O#}]X~P#?[OP$[OR#zO[;xOo;vO}#yO!P#{O!i#xO!m$[O#O;mO#k;jO#l;kO#m;kO#n;kO#o;lO#p;mO#q;mO#r;wO#s;mO#u;nO#w;pO#y;rO#z;sO([VO(m$YO(t#|O(u#}O~O#}.tO~P#AiO#P$dO#];yO$P;yO#}(bX!Z(bX~P! aOa'`a!Y'`a'u'`a's'`a!h'`a!V'`as'`a!['`a%f'`a!d'`a~P!9tO[#jia#jio#ji!Y#ji#O#ji#o#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji'u#ji(m#ji's#ji!V#ji!h#jis#ji![#ji%f#ji!d#ji~OP$[OR#zO}#yO!P#{O!i#xO!m$[O#k$OO#l$PO#m$PO#n$PO([VO(t#ji(u#ji~P#DkOk=fO}){O!P)|O(t$}O(u%POP#jiR#ji!i#ji!m#ji#k#ji#l#ji#m#ji#n#ji([#ji~P#DkO!Y.xOg(kX~P!0rOg.zO~Oa$Oi!Y$Oi'u$Oi's$Oi!V$Oi!h$Ois$Oi![$Oi%f$Oi!d$Oi~P!9tO$[.{O$^.{O~O$[.|O$^.|O~O!d)eO#].}O![$bX$Y$bX$[$bX$^$bX$e$bX~O!X/OO~O![)hO$Y/QO$[)gO$^)gO$e/RO~O!Y;tO!Z(aX~P#AiO!Z/SO~O!d)eO$e(vX~O$e/UO~Os/VO~P!&fOu)vO(])wO(^/YO~O!V/^O~P!&fO(t$}Ok%^a}%^a!P%^a(u%^a!Y%^a#]%^a~Og%^a#}%^a~P#KlO(u%POk%`a}%`a!P%`a(t%`a!Y%`a#]%`a~Og%`a#}%`a~P#L_O!YfX!dfX!hfX!h$xX(mfX~P!/nO!X/gO!Y(ZO(O/fO!V(qP!V({P~P!1aOo*oO!_*mO!`*fO!a*fO!i*^O#X*nO%]*iO(P!lO~Op'XO!P/hO!X+VO!Z*lO(QTO(TUO(`<XO!Z(sP~P#MxO!h/iO~P#.hO!Y/jO!d#vO(m'mO!h(zX~O!h/oO~O!P%fO!X*ZO![%gO(O%eO!h(zP~O#h/qO~O!V$xX!Y$xX!d%PX~P!/nO!Y/rO!V({X~P#.hO!d/tO~O!V/vO~Oh%VOo/zO!d#vO!i%cO(m'mO~O(O/|O~O!d+dO~Oa%lO!Y0QO'u%lO~O!Z0SO~P!5TO!`0TO!a0TO(P!lO(`!mO~O!P0VO(`!mO~O#X0WO~Og%^a!Y%^a#]%^a#}%^a~P!0rOg%`a!Y%`a#]%`a#}%`a~P!0rO(O&WOg'iX!Y'iX~O!Y*uOg(Xa~Og0aO~OR0bO}0bO!P0cO#P$dOkza(tza(uza!Yza#]za~Ogza#}za~P$%kO}){O!P)|Ok$qa(t$qa(u$qa!Y$qa#]$qa~Og$qa#}$qa~P$&dO}){O!P)|Ok$sa(t$sa(u$sa!Y$sa#]$sa~Og$sa#}$sa~P$'VO#h0fO~Og%Ra!Y%Ra#]%Ra#}%Ra~P!0rO!d#vO~O#h0iO~O!Y+XOa)Pa'u)Pa~OR#zO}#yO!P#{O!i#xO([VOP!oi[!oio!oi!Y!oi!m!oi#O!oi#k!oi#l!oi#m!oi#n!oi#o!oi#p!oi#q!oi#r!oi#s!oi#u!oi#w!oi#y!oi#z!oi(m!oi(t!oi(u!oi~Oa!oi'u!oi's!oi!V!oi!h!ois!oi![!oi%f!oi!d!oi~P$(tOh%VOo%XOp$tOq$tOw%YOy%ZO{<OO!P${O![$|O!f=`O!i$xO#g<UO$V%_O$r<QO$t<SO$w%`O(QTO(TUO([$uO(t$}O(u%PO~Om0rO(O0qO~P$+[O!d+dOa(Wa![(Wa'u(Wa!Y(Wa~O#h0xO~O[]X!YfX!ZfX~O!Y0yO!Z)TX~O!Z0{O~O[0|O~Ob1OO(O+lO(QTO(TUO~O![%}O(O%eO`'qX!Y'qX~O!Y+qO`)Sa~O!h1RO~P!9tO[1UO~O`1VO~O#]1YO~Ok1]O![$|O~O(`(yO!Z)QP~Oh%VOk1fO![1cO%f1eO~O[1pO!Y1nO!Z)RX~O!Z1qO~O`1sOa%lO'u%lO~O(O#nO(QTO(TUO~O#P$dO#]$eO$P$eOP(bXR(bX[(bXo(bX}(bX!P(bX!Y(bX!i(bX!m(bX#O(bX#k(bX#l(bX#m(bX#n(bX#o(bX#p(bX#q(bX#r(bX#u(bX#w(bX#y(bX#z(bX([(bX(m(bX(t(bX(u(bX~O#s1vO&W1wOa(bX~P$0rO#]$eO#s1vO&W1wO~Oa1yO~P%[Oa1{O~O&a2OOP&_iQ&_iS&_iY&_ia&_id&_ie&_im&_io&_ip&_iq&_iw&_iy&_i{&_i!P&_i!T&_i!U&_i![&_i!f&_i!i&_i!l&_i!m&_i!n&_i!p&_i!r&_i!u&_i!y&_i#t&_i$V&_i%e&_i%g&_i%i&_i%j&_i%k&_i%n&_i%p&_i%s&_i%t&_i%v&_i&S&_i&Y&_i&[&_i&^&_i&`&_i&c&_i&i&_i&o&_i&q&_i&s&_i&u&_i&w&_i's&_i(O&_i(Q&_i(T&_i([&_i(j&_i(y&_i!Z&_ib&_i&f&_i~Ob2UO!Z2SO&f2TO~P`O![XO!i2WO~O&m,tOP&hiQ&hiS&hiY&hia&hid&hie&him&hio&hip&hiq&hiw&hiy&hi{&hi!P&hi!T&hi!U&hi![&hi!f&hi!i&hi!l&hi!m&hi!n&hi!p&hi!r&hi!u&hi!y&hi#t&hi$V&hi%e&hi%g&hi%i&hi%j&hi%k&hi%n&hi%p&hi%s&hi%t&hi%v&hi&S&hi&Y&hi&[&hi&^&hi&`&hi&c&hi&i&hi&o&hi&q&hi&s&hi&u&hi&w&hi's&hi(O&hi(Q&hi(T&hi([&hi(j&hi(y&hi!Z&hi&a&hib&hi&f&hi~O!V2^O~O!Y!^a!Z!^a~P#AiOp!nO!P!oO!X2dO(`!mO!Y'TX!Z'TX~P@YO!Y-UO!Z(da~O!Y'ZX!Z'ZX~P!8|O!Y-XO!Z(sa~O!Z2kO~P'_Oa%lO#]2tO'u%lO~Oa%lO!d#vO#]2tO'u%lO~Oa%lO!d#vO!m2xO#]2tO'u%lO(m'mO~Oa%lO'u%lO~P!9tO!Y$_Os$oa~O!V'Si!Y'Si~P!9tO!Y(SO!V(ci~O!Y(ZO!V(qi~O!V(ri!Y(ri~P!9tO!Y(oi!h(oia(oi'u(oi~P!9tO#]2zO!Y(oi!h(oia(oi'u(oi~O!Y(gO!h(ni~O!P%fO![%gO!y]O#f3PO#g3OO(O%eO~O!P%fO![%gO#g3OO(O%eO~Ok3WO![']O%f3VO~Oh%VOk3WO![']O%f3VO~O#h%^aP%^aR%^a[%^aa%^ao%^a!i%^a!m%^a#O%^a#k%^a#l%^a#m%^a#n%^a#o%^a#p%^a#q%^a#r%^a#s%^a#u%^a#w%^a#y%^a#z%^a'u%^a([%^a(m%^a!h%^a!V%^a's%^as%^a![%^a%f%^a!d%^a~P#KlO#h%`aP%`aR%`a[%`aa%`ao%`a!i%`a!m%`a#O%`a#k%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#u%`a#w%`a#y%`a#z%`a'u%`a([%`a(m%`a!h%`a!V%`a's%`as%`a![%`a%f%`a!d%`a~P#L_O#h%^aP%^aR%^a[%^aa%^ao%^a!Y%^a!i%^a!m%^a#O%^a#k%^a#l%^a#m%^a#n%^a#o%^a#p%^a#q%^a#r%^a#s%^a#u%^a#w%^a#y%^a#z%^a'u%^a([%^a(m%^a!h%^a!V%^a's%^a#]%^as%^a![%^a%f%^a!d%^a~P#.hO#h%`aP%`aR%`a[%`aa%`ao%`a!Y%`a!i%`a!m%`a#O%`a#k%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#u%`a#w%`a#y%`a#z%`a'u%`a([%`a(m%`a!h%`a!V%`a's%`a#]%`as%`a![%`a%f%`a!d%`a~P#.hO#hzaPza[zaazaoza!iza!mza#Oza#kza#lza#mza#nza#oza#pza#qza#rza#sza#uza#wza#yza#zza'uza([za(mza!hza!Vza'szasza![za%fza!dza~P$%kO#h$qaP$qaR$qa[$qaa$qao$qa!i$qa!m$qa#O$qa#k$qa#l$qa#m$qa#n$qa#o$qa#p$qa#q$qa#r$qa#s$qa#u$qa#w$qa#y$qa#z$qa'u$qa([$qa(m$qa!h$qa!V$qa's$qas$qa![$qa%f$qa!d$qa~P$&dO#h$saP$saR$sa[$saa$sao$sa!i$sa!m$sa#O$sa#k$sa#l$sa#m$sa#n$sa#o$sa#p$sa#q$sa#r$sa#s$sa#u$sa#w$sa#y$sa#z$sa'u$sa([$sa(m$sa!h$sa!V$sa's$sas$sa![$sa%f$sa!d$sa~P$'VO#h%RaP%RaR%Ra[%Raa%Rao%Ra!Y%Ra!i%Ra!m%Ra#O%Ra#k%Ra#l%Ra#m%Ra#n%Ra#o%Ra#p%Ra#q%Ra#r%Ra#s%Ra#u%Ra#w%Ra#y%Ra#z%Ra'u%Ra([%Ra(m%Ra!h%Ra!V%Ra's%Ra#]%Ras%Ra![%Ra%f%Ra!d%Ra~P#.hOa#`q!Y#`q'u#`q's#`q!V#`q!h#`qs#`q![#`q%f#`q!d#`q~P!9tO!X3`O!Y'UX!h'UX~P%[O!Y.mO!h(fa~O!Y.mO!h(fa~P!9tO!V3cO~O#}!ka!Z!ka~PKWO#}!ga!Y!ga!Z!ga~P#AiO#}!oa!Z!oa~P!<[O#}!qa!Z!qa~P!>rOg'XX!Y'XX~P!+oO!Y.xOg(ka~OSfO![3wO$c3xO~O!Z3|O~Os3}O~P#.hOa$lq!Y$lq'u$lq's$lq!V$lq!h$lqs$lq![$lq%f$lq!d$lq~P!9tO!V4OO~P#.hO}){O!P)|O(u%POk'ea(t'ea!Y'ea#]'ea~Og'ea#}'ea~P%)|O}){O!P)|Ok'ga(t'ga(u'ga!Y'ga#]'ga~Og'ga#}'ga~P%*oO(m$YO~P#.hO!VfX!V$xX!YfX!Y$xX!d%PX#]fX~P!/nO(O<bO~P!1aOmkO(O4QO~P.iO!P%fO!X4SO![%gO(O%eO!Y'aX!h'aX~O!Y/jO!h(za~O!Y/jO!d#vO!h(za~O!Y/jO!d#vO(m'mO!h(za~Og$zi!Y$zi#]$zi#}$zi~P!0rO!X4[O!V'cX!Y'cX~P!3`O!Y/rO!V({a~O!Y/rO!V({a~P#.hO!d#vO#s4dO~Oo4gO!d#vO(m'mO~O!P4jO(`!mO~O(t$}Ok%^i}%^i!P%^i(u%^i!Y%^i#]%^i~Og%^i#}%^i~P%/VO(u%POk%`i}%`i!P%`i(t%`i!Y%`i#]%`i~Og%`i#}%`i~P%/xOg(Yi!Y(Yi~P!0rO#]4oOg(Yi!Y(Yi~P!0rO!h4rO~Oa$mq!Y$mq'u$mq's$mq!V$mq!h$mqs$mq![$mq%f$mq!d$mq~P!9tO!V4vO~O!Y4wO![(|X~P#.hOa$xX![$xX%Z]X'u$xX!Y$xX~P!/nO%Z4zOalXklX}lX!PlX![lX'ulX(tlX(ulX!YlX~O%Z4zO~Ob5QO%g5RO(O+lO(QTO(TUO!Y'pX!Z'pX~O!Y0yO!Z)Ta~O[5VO~O`5WO~Oa%lO'u%lO~P#.hO![$|O~P#.hO!Y5`O#]5bO!Z)QX~O!Z5cO~Oo5jOp!nO!P5dO!_!yO!`!vO!a!vO!y;bO#Q!pO#R!pO#S!pO#T!pO#U!pO#X5iO#Y!zO(P!lO(QTO(TUO(`!mO(j!sO~O!Z5hO~P%5SOk5oO![1cO%f5nO~Oh%VOk5oO![1cO%f5nO~Ob5vO(O#nO(QTO(TUO!Y'oX!Z'oX~O!Y1nO!Z)Ra~O(QTO(TUO(`5xO~O`5|O~O#s6PO&W6QO~PMsO!h6RO~P%[Oa6TO~Oa6TO~P%[Ob2UO!Z6YO&f2TO~P`O!d6[O~O!d6^Oh(ei!Y(ei!Z(ei!d(ei!i(ei~O!Y#ei!Z#ei~P#AiO#]6_O!Y#ei!Z#ei~O!Y!^i!Z!^i~P#AiOa%lO#]6hO'u%lO~Oa%lO!d#vO#]6hO'u%lO~O!Y(oq!h(oqa(oq'u(oq~P!9tO!Y(gO!h(nq~O!P%fO![%gO#g6oO(O%eO~O![']O%f6rO~Ok6vO![']O%f6rO~O#h'eaP'eaR'ea['eaa'eao'ea!i'ea!m'ea#O'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#s'ea#u'ea#w'ea#y'ea#z'ea'u'ea(['ea(m'ea!h'ea!V'ea's'eas'ea!['ea%f'ea!d'ea~P%)|O#h'gaP'gaR'ga['gaa'gao'ga!i'ga!m'ga#O'ga#k'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#u'ga#w'ga#y'ga#z'ga'u'ga(['ga(m'ga!h'ga!V'ga's'gas'ga!['ga%f'ga!d'ga~P%*oO#h$ziP$ziR$zi[$zia$zio$zi!Y$zi!i$zi!m$zi#O$zi#k$zi#l$zi#m$zi#n$zi#o$zi#p$zi#q$zi#r$zi#s$zi#u$zi#w$zi#y$zi#z$zi'u$zi([$zi(m$zi!h$zi!V$zi's$zi#]$zis$zi![$zi%f$zi!d$zi~P#.hO#h%^iP%^iR%^i[%^ia%^io%^i!i%^i!m%^i#O%^i#k%^i#l%^i#m%^i#n%^i#o%^i#p%^i#q%^i#r%^i#s%^i#u%^i#w%^i#y%^i#z%^i'u%^i([%^i(m%^i!h%^i!V%^i's%^is%^i![%^i%f%^i!d%^i~P%/VO#h%`iP%`iR%`i[%`ia%`io%`i!i%`i!m%`i#O%`i#k%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#u%`i#w%`i#y%`i#z%`i'u%`i([%`i(m%`i!h%`i!V%`i's%`is%`i![%`i%f%`i!d%`i~P%/xO!Y'Ua!h'Ua~P!9tO!Y.mO!h(fi~O#}#`i!Y#`i!Z#`i~P#AiOP$[OR#zO}#yO!P#{O!i#xO!m$[O([VO[#jio#ji#O#ji#l#ji#m#ji#n#ji#o#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji#}#ji(m#ji(t#ji(u#ji!Y#ji!Z#ji~O#k#ji~P%GlO#k;jO~P%GlOP$[OR#zOo;vO}#yO!P#{O!i#xO!m$[O#k;jO#l;kO#m;kO#n;kO([VO[#ji#O#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji#}#ji(m#ji(t#ji(u#ji!Y#ji!Z#ji~O#o#ji~P%ItO#o;lO~P%ItOP$[OR#zO[;xOo;vO}#yO!P#{O!i#xO!m$[O#O;mO#k;jO#l;kO#m;kO#n;kO#o;lO#p;mO#q;mO#r;wO#s;mO([VO#w#ji#y#ji#z#ji#}#ji(m#ji(t#ji(u#ji!Y#ji!Z#ji~O#u#ji~P%K|OP$[OR#zO[;xOo;vO}#yO!P#{O!i#xO!m$[O#O;mO#k;jO#l;kO#m;kO#n;kO#o;lO#p;mO#q;mO#r;wO#s;mO#u;nO([VO(u#}O#y#ji#z#ji#}#ji(m#ji(t#ji!Y#ji!Z#ji~O#w;pO~P%M}O#w#ji~P%M}O#u;nO~P%K|OP$[OR#zO[;xOo;vO}#yO!P#{O!i#xO!m$[O#O;mO#k;jO#l;kO#m;kO#n;kO#o;lO#p;mO#q;mO#r;wO#s;mO#u;nO#w;pO([VO(t#|O(u#}O#z#ji#}#ji(m#ji!Y#ji!Z#ji~O#y#ji~P&!^O#y;rO~P&!^Oa#{y!Y#{y'u#{y's#{y!V#{y!h#{ys#{y![#{y%f#{y!d#{y~P!9tO[#jio#ji#O#ji#o#ji#p#ji#q#ji#r#ji#s#ji#u#ji#w#ji#y#ji#z#ji#}#ji(m#ji!Y#ji!Z#ji~OP$[OR#zO}#yO!P#{O!i#xO!m$[O#k;jO#l;kO#m;kO#n;kO([VO(t#ji(u#ji~P&%YOk=gO}){O!P)|O(t$}O(u%POP#jiR#ji!i#ji!m#ji#k#ji#l#ji#m#ji#n#ji([#ji~P&%YO#P$dOP(ZXR(ZX[(ZXk(ZXo(ZX}(ZX!P(ZX!i(ZX!m(ZX#O(ZX#k(ZX#l(ZX#m(ZX#n(ZX#o(ZX#p(ZX#q(ZX#r(ZX#s(ZX#u(ZX#w(ZX#y(ZX#z(ZX#}(ZX([(ZX(m(ZX(t(ZX(u(ZX!Y(ZX!Z(ZX~O#}$Oi!Y$Oi!Z$Oi~P#AiO#}!oi!Z!oi~P$(tOg'Xa!Y'Xa~P!0rO!Z7YO~O!Y'`a!Z'`a~P#AiOP]XR]X[]Xo]X}]X!P]X!V]X!Y]X!i]X!m]X#O]X#P]X#]]X#hfX#k]X#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#u]X#w]X#y]X#z]X$P]X([]X(m]X(t]X(u]X~O!d%WX#s%WX~P&+`O!d#vO(m'mO!Y'aa!h'aa~O!Y/jO!h(zi~O!Y/jO!d#vO!h(zi~Og$zq!Y$zq#]$zq#}$zq~P!0rO!V'ca!Y'ca~P#.hO!d7aO~O!Y/rO!V({i~P#.hO!Y/rO!V({i~O!V7eO~O!d#vO#s7jO~Oo7kO!d#vO(m'mO~O}){O!P)|O(u%POk'fa(t'fa!Y'fa#]'fa~Og'fa#}'fa~P&0OO}){O!P)|Ok'ha(t'ha(u'ha!Y'ha#]'ha~Og'ha#}'ha~P&0qO!V7nO~Og$|q!Y$|q#]$|q#}$|q~P!0rOa$my!Y$my'u$my's$my!V$my!h$mys$my![$my%f$my!d$my~P!9tO!d6^O~O!Y4wO![(|a~O![']OP$SaR$Sa[$Sao$Sa}$Sa!P$Sa!Y$Sa!i$Sa!m$Sa#O$Sa#k$Sa#l$Sa#m$Sa#n$Sa#o$Sa#p$Sa#q$Sa#r$Sa#s$Sa#u$Sa#w$Sa#y$Sa#z$Sa([$Sa(m$Sa(t$Sa(u$Sa~O%f6rO~P&2zOa#`y!Y#`y'u#`y's#`y!V#`y!h#`ys#`y![#`y%f#`y!d#`y~P!9tO[7sO~Ob7uO(O+lO(QTO(TUO~O!Y0yO!Z)Ti~O`7yO~O(`(yO!Y'lX!Z'lX~O!Y5`O!Z)Qa~O!Z8SO~P%5SOp!nO!P8TO(QTO(TUO(`!mO(j!sO~O#X8UO~O![1cO~O![1cO%f8WO~Ok8ZO![1cO%f8WO~O[8`O!Y'oa!Z'oa~O!Y1nO!Z)Ri~O!h8dO~O!h8eO~O!h8hO~O!h8hO~P%[Oa8jO~O!d8kO~O!h8lO~O!Y(ri!Z(ri~P#AiOa%lO#]8tO'u%lO~O!Y(oy!h(oya(oy'u(oy~P!9tO!Y(gO!h(ny~O%f8wO~P&2zO![']O%f8wO~O#h$zqP$zqR$zq[$zqa$zqo$zq!Y$zq!i$zq!m$zq#O$zq#k$zq#l$zq#m$zq#n$zq#o$zq#p$zq#q$zq#r$zq#s$zq#u$zq#w$zq#y$zq#z$zq'u$zq([$zq(m$zq!h$zq!V$zq's$zq#]$zqs$zq![$zq%f$zq!d$zq~P#.hO#h'faP'faR'fa['faa'fao'fa!i'fa!m'fa#O'fa#k'fa#l'fa#m'fa#n'fa#o'fa#p'fa#q'fa#r'fa#s'fa#u'fa#w'fa#y'fa#z'fa'u'fa(['fa(m'fa!h'fa!V'fa's'fas'fa!['fa%f'fa!d'fa~P&0OO#h'haP'haR'ha['haa'hao'ha!i'ha!m'ha#O'ha#k'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#u'ha#w'ha#y'ha#z'ha'u'ha(['ha(m'ha!h'ha!V'ha's'has'ha!['ha%f'ha!d'ha~P&0qO#h$|qP$|qR$|q[$|qa$|qo$|q!Y$|q!i$|q!m$|q#O$|q#k$|q#l$|q#m$|q#n$|q#o$|q#p$|q#q$|q#r$|q#s$|q#u$|q#w$|q#y$|q#z$|q'u$|q([$|q(m$|q!h$|q!V$|q's$|q#]$|qs$|q![$|q%f$|q!d$|q~P#.hO!Y'Ui!h'Ui~P!9tO#}#`q!Y#`q!Z#`q~P#AiO(t$}OP%^aR%^a[%^ao%^a!i%^a!m%^a#O%^a#k%^a#l%^a#m%^a#n%^a#o%^a#p%^a#q%^a#r%^a#s%^a#u%^a#w%^a#y%^a#z%^a#}%^a([%^a(m%^a!Y%^a!Z%^a~Ok%^a}%^a!P%^a(u%^a~P&C}O(u%POP%`aR%`a[%`ao%`a!i%`a!m%`a#O%`a#k%`a#l%`a#m%`a#n%`a#o%`a#p%`a#q%`a#r%`a#s%`a#u%`a#w%`a#y%`a#z%`a#}%`a([%`a(m%`a!Y%`a!Z%`a~Ok%`a}%`a!P%`a(t%`a~P&FROk=gO}){O!P)|O(u%PO~P&C}Ok=gO}){O!P)|O(t$}O~P&FROR0bO}0bO!P0cO#P$dOPza[zakzaoza!iza!mza#Oza#kza#lza#mza#nza#oza#pza#qza#rza#sza#uza#wza#yza#zza#}za([za(mza(tza(uza!Yza!Zza~O}){O!P)|OP$qaR$qa[$qak$qao$qa!i$qa!m$qa#O$qa#k$qa#l$qa#m$qa#n$qa#o$qa#p$qa#q$qa#r$qa#s$qa#u$qa#w$qa#y$qa#z$qa#}$qa([$qa(m$qa(t$qa(u$qa!Y$qa!Z$qa~O}){O!P)|OP$saR$sa[$sak$sao$sa!i$sa!m$sa#O$sa#k$sa#l$sa#m$sa#n$sa#o$sa#p$sa#q$sa#r$sa#s$sa#u$sa#w$sa#y$sa#z$sa#}$sa([$sa(m$sa(t$sa(u$sa!Y$sa!Z$sa~Ok=gO}){O!P)|O(t$}O(u%PO~OP%RaR%Ra[%Rao%Ra!i%Ra!m%Ra#O%Ra#k%Ra#l%Ra#m%Ra#n%Ra#o%Ra#p%Ra#q%Ra#r%Ra#s%Ra#u%Ra#w%Ra#y%Ra#z%Ra#}%Ra([%Ra(m%Ra!Y%Ra!Z%Ra~P&NzO#}$lq!Y$lq!Z$lq~P#AiO#}$mq!Y$mq!Z$mq~P#AiO!Z9UO~O#}9VO~P!0rO!d#vO!Y'ai!h'ai~O!d#vO(m'mO!Y'ai!h'ai~O!Y/jO!h(zq~O!V'ci!Y'ci~P#.hO!Y/rO!V({q~Oo9^O!d#vO(m'mO~O[9`O!V9_O~P#.hO!V9_O~O!d#vO#s9eO~Og(Yy!Y(Yy~P!0rO!Y'ja!['ja~P#.hOa%Yq![%Yq'u%Yq!Y%Yq~P#.hO[9gO~O!Y0yO!Z)Tq~O#]9kO!Y'la!Z'la~O!Y5`O!Z)Qi~P#AiO!P4jO~O![1cO%f9oO~O(QTO(TUO(`9tO~O!Y1nO!Z)Rq~O!h9wO~O!h9xO~O!h9yO~O!h9yO~P%[O#]9|O!Y#ey!Z#ey~O!Y#ey!Z#ey~P#AiO%f:RO~P&2zO![']O%f:RO~O#}#{y!Y#{y!Z#{y~P#AiOP$ziR$zi[$zio$zi!i$zi!m$zi#O$zi#k$zi#l$zi#m$zi#n$zi#o$zi#p$zi#q$zi#r$zi#s$zi#u$zi#w$zi#y$zi#z$zi#}$zi([$zi(m$zi!Y$zi!Z$zi~P&NzO}){O!P)|O(u%POP'eaR'ea['eak'eao'ea!i'ea!m'ea#O'ea#k'ea#l'ea#m'ea#n'ea#o'ea#p'ea#q'ea#r'ea#s'ea#u'ea#w'ea#y'ea#z'ea#}'ea(['ea(m'ea(t'ea!Y'ea!Z'ea~O}){O!P)|OP'gaR'ga['gak'gao'ga!i'ga!m'ga#O'ga#k'ga#l'ga#m'ga#n'ga#o'ga#p'ga#q'ga#r'ga#s'ga#u'ga#w'ga#y'ga#z'ga#}'ga(['ga(m'ga(t'ga(u'ga!Y'ga!Z'ga~O(t$}OP%^iR%^i[%^ik%^io%^i}%^i!P%^i!i%^i!m%^i#O%^i#k%^i#l%^i#m%^i#n%^i#o%^i#p%^i#q%^i#r%^i#s%^i#u%^i#w%^i#y%^i#z%^i#}%^i([%^i(m%^i(u%^i!Y%^i!Z%^i~O(u%POP%`iR%`i[%`ik%`io%`i}%`i!P%`i!i%`i!m%`i#O%`i#k%`i#l%`i#m%`i#n%`i#o%`i#p%`i#q%`i#r%`i#s%`i#u%`i#w%`i#y%`i#z%`i#}%`i([%`i(m%`i(t%`i!Y%`i!Z%`i~O#}$my!Y$my!Z$my~P#AiO#}#`y!Y#`y!Z#`y~P#AiO!d#vO!Y'aq!h'aq~O!Y/jO!h(zy~O!V'cq!Y'cq~P#.hOo:]O!d#vO(m'mO~O[:`O!V:_O~P#.hO!V:_O~O!Y0yO!Z)Ty~O!Y5`O!Z)Qq~O![1cO%f:hO~O!h:kO~O%f:pO~P&2zOP$zqR$zq[$zqo$zq!i$zq!m$zq#O$zq#k$zq#l$zq#m$zq#n$zq#o$zq#p$zq#q$zq#r$zq#s$zq#u$zq#w$zq#y$zq#z$zq#}$zq([$zq(m$zq!Y$zq!Z$zq~P&NzO}){O!P)|O(u%POP'faR'fa['fak'fao'fa!i'fa!m'fa#O'fa#k'fa#l'fa#m'fa#n'fa#o'fa#p'fa#q'fa#r'fa#s'fa#u'fa#w'fa#y'fa#z'fa#}'fa(['fa(m'fa(t'fa!Y'fa!Z'fa~O}){O!P)|OP'haR'ha['hak'hao'ha!i'ha!m'ha#O'ha#k'ha#l'ha#m'ha#n'ha#o'ha#p'ha#q'ha#r'ha#s'ha#u'ha#w'ha#y'ha#z'ha#}'ha(['ha(m'ha(t'ha(u'ha!Y'ha!Z'ha~OP$|qR$|q[$|qo$|q!i$|q!m$|q#O$|q#k$|q#l$|q#m$|q#n$|q#o$|q#p$|q#q$|q#r$|q#s$|q#u$|q#w$|q#y$|q#z$|q#}$|q([$|q(m$|q!Y$|q!Z$|q~P&NzOg%b!Z!Y%b!Z#]%b!Z#}%b!Z~P!0rO!V:tO~P#.hOo:uO!d#vO(m'mO~O[:wO!V:tO~P#.hO!Y'lq!Z'lq~P#AiO!Y#e!Z!Z#e!Z~P#AiO#h%b!ZP%b!ZR%b!Z[%b!Za%b!Zo%b!Z!Y%b!Z!i%b!Z!m%b!Z#O%b!Z#k%b!Z#l%b!Z#m%b!Z#n%b!Z#o%b!Z#p%b!Z#q%b!Z#r%b!Z#s%b!Z#u%b!Z#w%b!Z#y%b!Z#z%b!Z'u%b!Z([%b!Z(m%b!Z!h%b!Z!V%b!Z's%b!Z#]%b!Zs%b!Z![%b!Z%f%b!Z!d%b!Z~P#.hOo;PO!d#vO(m'mO~O!V;QO~P#.hOo;XO!d#vO(m'mO~O!V;YO~P#.hOP%b!ZR%b!Z[%b!Zo%b!Z!i%b!Z!m%b!Z#O%b!Z#k%b!Z#l%b!Z#m%b!Z#n%b!Z#o%b!Z#p%b!Z#q%b!Z#r%b!Z#s%b!Z#u%b!Z#w%b!Z#y%b!Z#z%b!Z#}%b!Z([%b!Z(m%b!Z!Y%b!Z!Z%b!Z~P&NzOo;]O!d#vO(m'mO~Os(aX~P1qO}%pO~P!(vO(P!lO~P!(vO!VfX!YfX#]fX~P&+`OP]XR]X[]Xo]X}]X!P]X!Y]X!YfX!i]X!m]X#O]X#P]X#]]X#]fX#hfX#k]X#l]X#m]X#n]X#o]X#p]X#q]X#r]X#s]X#u]X#w]X#y]X#z]X$P]X([]X(m]X(t]X(u]X~O!dfX!h]X!hfX(mfX~P'D^OP;aOQ;aOSfOd=[Oe!iOmkOo;aOpkOqkOwkOy;aO{;aO!PWO!TkO!UkO![XO!f;dO!iZO!l;aO!m;aO!n;aO!p;eO!r;hO!u!hO$V!kO(O)YO(QTO(TUO([VO(j[O(y=YO~O!Y;tO!Z$oa~Oh%VOm%WOo%XOp$tOq$tOw%YOy%ZO{<PO!P${O![$|O!f=aO!i$xO#g<VO$V%_O$r<RO$t<TO$w%`O(O(sO(QTO(TUO([$uO(t$}O(u%PO~O#t)aO~P'ISOo!bX(m!bX~P# bO!Z]X!ZfX~P'D^O!VfX!V$xX!YfX!Y$xX#]fX~P!/nO#h;iO~O!d#vO#h;iO~O#];yO~O#s;mO~O#]<YO!Y(rX!Z(rX~O#];yO!Y(pX!Z(pX~O#h<ZO~Og<]O~P!0rO#h<cO~O#h<dO~O!d#vO#h<eO~O!d#vO#h<ZO~O#}<fO~P#AiO#h<gO~O#h<hO~O#h<mO~O#h<nO~O#h<oO~O#h<pO~O#}<qO~P!0rO#}<rO~P!0rO#P#Q#R#T#U#X#f#g#r(y$r$t$w%Z%e%f%g%n%p%s%t%v%x~'yT#l!U'w(P#mp#k#no}'x$['x(O$^(`~\",\n  goto: \"$5g)XPPPPPP)YPP)]P)nP+O/PPPPP5{PP6cPP<Y?sP@WP@WPPP@WPB[P@WP@WP@WPB`PBePCSPG{PPPHPPPPPHPKRPPPKXLTPHPPHPPPNcHPPPPHPPHPP!!jHPP!&P!'U!'_P!(R!(V!(R!+cPPPPPPP!,S!'UPP!,d!-xP!1THPHP!1Y!4e!8{!8{!<yPPP!=RHPPPPPPPPPPPP!@aP!AnPPHP!CPPHPPHPHPHPHPHPPHP!DcP!GlP!JqP!Ju!KP!KT!KTP!GiP!KX!KXP!N^P!NbHPHP!Nh##lB`@WP@WP@W@WP#$x@W@W#'W@W#)z@W#,S@W@W#,r#/S#/S#/X#/b#/S#/nP#/SP@W#0W@W#4P@W@W5{PPP#8OPPP#8i#8iP#8iP#9P#8iPP#9VP#8|P#8|#9j#8|#:U#:[5x)]#:_)]P#:f#:f#:fP)]P)]P)]P)]PP)]P#:l#:oP#:o)]P#:sP#:vP)]P)]P)]P)]P)]P)])]PP#:|#;S#;_#;e#;k#;q#;w#<V#<]#<g#<m#<w#<}#=_#=e#>V#>i#>o#>u#?T#?j#A]#Ak#Ar#C[#Cj#EY#Eh#En#Et#Ez#FU#F[#Fb#Fl#GO#GUPPPPPPPPPP#G[PPPPPPP#HP#KW#Lg#Ln#LvPPP$$YP$$c$'Z$-s$-v$-y$.f$.i$.p$.xP$/O$/RP$/o$/s$0k$1y$2O$2fPP$2k$2q$2uP$2x$2|$3Q$3v$4_$4v$4z$4}$5Q$5W$5Z$5_$5cR!|RoqOXst!Z#d%k&o&q&r&t,l,q2O2RY!vQ']-^1c5gQ%rvQ%zyQ&R|Q&g!VS'T!e-UQ'c!iS'i!r!yU*f$|*W*kQ+j%{Q+w&TQ,]&aQ-['[Q-f'dQ-n'jQ0T*mQ1m,^R<W;e%QdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W,i,l,q-b-j-x.O.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3`5d5o6P6Q6T6h8T8Z8j8tS#q];b!r)[$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]U*z%[<O<PQ+o%}Q,_&dQ,f&lQ0o+bQ0s+dQ1O+pQ1u,dQ3S.`Q5Q0yQ5v1nQ6t3WQ7u5RR8z6v'OkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]t!nQ!r!v!y!z'T'[']'i'j'k-U-[-^-n1c5g5i%S$ti#v$b$c$d$x${%O%Q%]%^%b)v)|*O*Q*S*V*]*c*s*t+a+d+{,O._.x/_/g/q/r/t0X0Z0f1Y1]1e3V4P4[4d4o4w4z5n6r7a7j8W8w9V9`9e9o:R:`:h:p:w;w;x;z;{;|;}<Q<R<S<T<U<V<^<_<`<a<c<d<g<h<i<j<k<l<m<n<q<r=Y=b=c=f=gQ&U|Q'R!eU'X%g*W-XQ+o%}Q,_&dQ0e*}Q1O+pQ1T+vQ1t,cQ1u,dQ5Q0yQ5Z1VQ5v1nQ5y1pQ5z1sQ7u5RQ7x5WQ8c5|Q9j7yR9u8`rnOXst!V!Z#d%k&f&o&q&r&t,l,q2O2RR,a&h&x^OPXYstuvwz!Z!`!g!j!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'_'o(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=[=][#]WZ#W#Z'U(Q!b%hm#h#i#l$x%c%f(Z(e(f(g*V*Z*^+U+V+X,h-O-|.S.T.U.W/g/j2W3O3P4S6^6oQ%uxQ%yyS&O|&TQ&[!TQ'`!hQ'b!iQ(n#sS+i%z%{Q+m%}Q,W&_Q,[&aS-e'c'dQ.b(oQ0w+jQ0}+pQ1P+qQ1S+uQ1h,XS1l,],^Q2p-fQ5P0yQ5T0|Q5Y1UQ5u1mQ7t5RQ7w5VQ9f7sR:c9g!O$zi$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=c!S%wy!i!u%y%z%{'S'b'c'd'h'r*e+i+j-R-e-f-m/{0w2i2p2w4fQ+c%uQ+|&XQ,P&YQ,Z&aQ.a(nQ1g,WU1k,[,],^Q3X.bQ5p1hS5t1l1mQ8_5u#d=^#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=go=_;w;x;{;}<R<T<V<_<a<d<h<j<l<n<rW%Ti%V*u=YS&X!Q&fQ&Y!RQ&Z!SR+z&V%T%Si#v$b$c$d$x${%O%Q%]%^%b)v)|*O*Q*S*V*]*c*s*t+a+d+{,O._.x/_/g/q/r/t0X0Z0f1Y1]1e3V4P4[4d4o4w4z5n6r7a7j8W8w9V9`9e9o:R:`:h:p:w;w;x;z;{;|;}<Q<R<S<T<U<V<^<_<`<a<c<d<g<h<i<j<k<l<m<n<q<r=Y=b=c=f=gT)w$u)xV*z%[<O<PW'X!e%g*W-XS(z#y#zQ+^%pQ+t&QS.Z(j(kQ1^,QQ4p0bR7}5`'OkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]$i$^c#Y#e%o%q%s(P(V(q(v)O)P)Q)R)S)T)U)V)W)X)Z)])_)d)n+_+s-S-q-v-{-}.l.o.s.u.v.w/Z0g2_2b2r2y3_3d3e3f3g3h3i3j3k3l3m3n3o3p3s3t3{4t4}6a6g6l6{6|7V7W8P8n8r8|9S9T:O:e:l;c=PT#TV#U'PkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]Q'V!eR2e-Uv!nQ!e!r!v!y!z'T'[']'i'j'k-U-[-^-n1c5g5iU*e$|*W*kS/{*f*mQ0U*nQ1`,SQ4f0TR4i0WnqOXst!Z#d%k&o&q&r&t,l,q2O2RQ&v!^Q's!xS(p#u;iQ+g%xQ,U&[Q,V&^Q-c'aQ-p'lS.k(u<ZS0h+S<eQ0u+hQ1b,TQ2V,sQ2X,tQ2a-PQ2n-dQ2q-hS4u0i<oQ4{0vS5O0x<pQ6`2cQ6d2oQ6i2vQ7r4|Q8o6bQ8p6eQ8s6jR9{8l$d$]c#Y#e%q%s(P(V(q(v)O)P)Q)R)S)T)U)V)W)X)Z)])_)d)n+_+s-S-q-v-{-}.l.o.s.v.w/Z0g2_2b2r2y3_3d3e3f3g3h3i3j3k3l3m3n3o3p3s3t3{4t4}6a6g6l6{6|7V7W8P8n8r8|9S9T:O:e:l;c=PS(l#p'fQ(|#zS+]%o.uS.[(k(mR3Q.]'OkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]S#q];bQ&q!XQ&r!YQ&t![Q&u!]R1},oQ'^!hQ+`%uQ-a'`S.^(n+cQ2l-`W3U.a.b0n0pQ6c2mW6p3R3T3X4yU8v6q6s6uU:Q8x8y8{S:n:P:SQ:{:oR;T:|U!wQ']-^T5e1c5g!Q_OXZ`st!V!Z#d#h%c%k&f&h&o&q&r&t(g,l,q.T2O2R]!pQ!r']-^1c5gT#q];b%[{OPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&l&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W+b,i,l,q-b-j-x.O.`.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3W3`5d5o6P6Q6T6h6v8T8Z8j8tS(z#y#zS.Z(j(k!s<v$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]U$fd)[,fS(m#p'fU*r%R(t3rU0d*y.g7RQ4y0oQ6q3SQ8y6tR:S8zm!tQ!r!v!y!z']'i'j'k-^-n1c5g5iQ'q!uS(c#g1xS-l'h'tQ/m*YQ/y*eQ2x-oQ4W/nS4a/z0UQ7]4RS7h4g4iQ9X7^Q9]7eQ9c7kS:[9^9_S:s:]:_S;O:t:uS;W;P;QS;[;X;YR;_;]Q#wbQ'p!uS(b#g1xS(d#m+RQ+T%dQ+e%vQ+k%|U-k'h'q'tQ.P(cQ/l*YQ/x*eQ0O*hQ0t+fQ1i,YS2u-l-oQ2}.XS4V/m/nS4`/y0UQ4c/}Q4e0PQ5r1jQ6k2xQ7[4RQ7`4WS7d4a4iQ7i4hQ8]5sS9W7]7^Q9[7eQ9a7hQ9d7lQ9r8^Q:Y9XS:Z9]9_Q:a9cQ:j9sS:r:[:_S:}:s:tS;V;O;QS;Z;W;YQ;^;[Q;`;_Q<y<tQ=U<}R=V=OV!wQ']-^%[aOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&l&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W+b,i,l,q-b-j-x.O.`.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3W3`5d5o6P6Q6T6h6v8T8Z8j8tS#wz!j!r<s$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]R<y=[%[bOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&l&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W+b,i,l,q-b-j-x.O.`.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3W3`5d5o6P6Q6T6h6v8T8Z8j8tQ%dj!S%vy!i!u%y%z%{'S'b'c'd'h'r*e+i+j-R-e-f-m/{0w2i2p2w4fS%|z!jQ+f%wQ,Y&aW1j,Z,[,],^U5s1k1l1mS8^5t5uQ9s8_!r<t$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]Q<}=ZR=O=[%OeOPXYstuvw!Z!`!g!o#S#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&o&q&r&t&x'Q'_'o(S(Y(a(u(w({)z+S+W+b,i,l,q-b-j-x.O.`.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3W3`5d5o6P6Q6T6h6v8T8Z8j8tY#bWZ#W#Z(Q!b%hm#h#i#l$x%c%f(Z(e(f(g*V*Z*^+U+V+X,h-O-|.S.T.U.W/g/j2W3O3P4S6^6oQ,g&l!p<u$Z$n)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]R<x'UU'Y!e%g*WR2g-X%QdOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W,i,l,q-b-j-x.O.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3`5d5o6P6Q6T6h8T8Z8j8t!r)[$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]Q,f&lQ0o+bQ3S.`Q6t3WR8z6v!b$Tc#Y%o(P(V(q(v)W)X)])d+s-q-v-{-}.l.o/Z0g2r2y3_3o4t4}6g6l6{8r:O;c!P;o)Z)n-S.u2_2b3d3m3n3s3{6a6|7V7W8P8n8|9S9T:e:l=P!f$Vc#Y%o(P(V(q(v)T)U)W)X)])d+s-q-v-{-}.l.o/Z0g2r2y3_3o4t4}6g6l6{8r:O;c!T;q)Z)n-S.u2_2b3d3j3k3m3n3s3{6a6|7V7W8P8n8|9S9T:e:l=P!^$Zc#Y%o(P(V(q(v)])d+s-q-v-{-}.l.o/Z0g2r2y3_3o4t4}6g6l6{8r:O;cQ4P/ez=])Z)n-S.u2_2b3d3s3{6a6|7V7W8P8n8|9S9T:e:l=PQ=b=dR=c=e'OkOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]S$oh$pR3x.}'VgOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t.}/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]T$kf$qQ$ifS)g$l)kR)s$qT$jf$qT)i$l)k'VhOPWXYZhstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$Z$_$a$e$n$p%k%r&P&h&k&l&o&q&r&t&x'Q'U'_'o(Q(S(Y(a(u(w({)p)z+S+W+b,i,l,q,}-Q-b-j-x.O.`.m.t.}/O/h0c0i0x1f1v1w1y1{2O2R2T2d2t2z3W3`3w5b5d5o6P6Q6T6_6h6v8T8Z8j8t9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]T$oh$pQ$rhR)r$p%[jOPWXYZstuvw!Z!`!g!o#S#W#Z#d#o#u#x#{$O$P$Q$R$S$T$U$V$W$X$_$a$e%k%r&P&h&k&l&o&q&r&t&x'Q'_'o(Q(S(Y(a(u(w({)z+S+W+b,i,l,q-b-j-x.O.`.m.t/h0c0i0x1f1v1w1y1{2O2R2T2t2z3W3`5d5o6P6Q6T6h6v8T8Z8j8t!s=Z$Z$n'U)p,}-Q/O2d3w5b6_9k9|;a;d;e;h;i;j;k;l;m;n;o;p;q;r;s;t;v;y<W<Y<Z<]<e<f<o<p=]#elOPXZst!Z!`!o#S#d#o#{$n%k&h&k&l&o&q&r&t&x'Q'_({)p+W+b,i,l,q-b.`/O/h0c1f1v1w1y1{2O2R2T3W3w5d5o6P6Q6T6v8T8Z8j!O%Ri$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=c#d(t#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=gQ+O%`Q/[){o3r;w;x;{;}<R<T<V<_<a<d<h<j<l<n<r!O$yi$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=cQ*_$zU*h$|*W*kQ+P%aQ0P*i#d<{#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=gn<|;w;x;{;}<R<T<V<_<a<d<h<j<l<n<rQ=Q=^Q=R=_Q=S=`R=T=a!O%Ri$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=c#d(t#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=go3r;w;x;{;}<R<T<V<_<a<d<h<j<l<n<rnoOXst!Z#d%k&o&q&r&t,l,q2O2RS*b${*VQ,z&{Q,{&}R4Z/r%S%Si#v$b$c$d$x${%O%Q%]%^%b)v)|*O*Q*S*V*]*c*s*t+a+d+{,O._.x/_/g/q/r/t0X0Z0f1Y1]1e3V4P4[4d4o4w4z5n6r7a7j8W8w9V9`9e9o:R:`:h:p:w;w;x;z;{;|;}<Q<R<S<T<U<V<^<_<`<a<c<d<g<h<i<j<k<l<m<n<q<r=Y=b=c=f=gQ+}&YQ1[,PQ5^1ZR7|5_V*j$|*W*kU*j$|*W*kT5f1c5gU/}*g/h5dS4h0V8TR7l4jQ+e%vQ0O*hQ0t+fQ1i,YQ5r1jQ8]5sQ9r8^R:j9s!O%Oi$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=cr*O$v)b*P*q+Q/p0]0^3u4X4s7Z7m:X<z=W=XS0X*p0Y#d;z#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=gn;{;w;x;{;}<R<T<V<_<a<d<h<j<l<n<r!f<^(r)`*X*a.c.f.j/W/]/e/u0m1X1Z3[4Y4^5]5_6w6z7b7f7o7q9Z9b:^:b:q:v;R=d=e`<_3q6}7Q7U8}:T:W;US<i.e3]T<j7P9Q!O%Qi$d%O%Q%]%^%b*O*Q*]*s*t.x/q0X0Z0f4P4o9V=Y=b=cv*Q$v)b*R*p+Q/a/p0]0^3u4X4k4s7Z7m:X<z=W=XS0Z*q0[#d;|#v$b$c$x${)v)|*S*V*c+a+d+{,O._/_/g/r/t1Y1]1e3V4[4d4w4z5n6r7a7j8W8w9`9e9o:R:`:h:p:w;z;|<Q<S<U<^<`<c<g<i<k<m<q=f=gn;};w;x;{;}<R<T<V<_<a<d<h<j<l<n<r!j<`(r)`*X*a.d.e.j/W/]/e/u0m1X1Z3Y3[4Y4^5]5_6w6x6z7b7f7o7q9Z9b:^:b:q:v;R=d=ed<a3q7O7P7U8}9O:T:U:W;US<k.f3^T<l7Q9RrnOXst!V!Z#d%k&f&o&q&r&t,l,q2O2RQ&c!UR,i&lrnOXst!V!Z#d%k&f&o&q&r&t,l,q2O2RR&c!UQ,R&ZR1W+zsnOXst!V!Z#d%k&f&o&q&r&t,l,q2O2RQ1d,WS5m1g1hU8V5k5l5pS9n8X8YS:f9m9pQ:x:gR;S:yQ&j!VR,b&fR5y1pS&O|&TR1P+qQ&o!WR,l&pR,r&uT2P,q2RR,v&vQ,u&vR2Y,vQ'v!{R-r'vSsOtQ#dXT%ns#dQ#OTR'x#OQ#RUR'z#RQ)x$uR/X)xQ#UVR'}#UQ#XWU(T#X(U-yQ(U#YR-y(VQ-V'VR2f-VQ.n(vS3a.n3bR3b.oQ-^']R2j-^Y!rQ']-^1c5gR'g!rQ.y)bR3v.yU#_W%f*VU([#_(]-zQ(]#`R-z(WQ-Y'YR2h-Yt`OXst!V!Z#d%k&f&h&o&q&r&t,l,q2O2RS#hZ%cU#r`#h.TR.T(gQ(h#jQ.Q(dW.Y(h.Q2{6mQ2{.RR6m2|Q)k$lR/P)kQ$phR)q$pQ$`cU)^$`-u;uQ-u;cR;u)nQ/k*YW4T/k4U7_9YU4U/l/m/nS7_4V4WR9Y7`$a)}$v(r)`)b*X*a*p*q*{*|+Q.e.f.h.i.j/W/]/a/c/e/p/u0]0^0m1X1Z3Y3Z3[3q3u4X4Y4^4k4m4s5]5_6w6x6y6z7P7Q7S7T7U7Z7b7f7m7o7q8}9O9P9Z9b:T:U:V:W:X:^:b:q:v;R;U<z=W=X=d=eQ/s*aU4]/s4_7cQ4_/uR7c4^S*k$|*WR0R*kr*P$v)b*p*q+Q/p0]0^3u4X4s7Z7m:X<z=W=X!f.c(r)`*X*a.e.f.j/W/]/e/u0m1X1Z3[4Y4^5]5_6w6z7b7f7o7q9Z9b:^:b:q:v;R=d=eU/b*P.c6}a6}3q7P7Q7U8}:T:W;UQ0Y*pQ3].eU4l0Y3]9QR9Q7Pv*R$v)b*p*q+Q/a/p0]0^3u4X4k4s7Z7m:X<z=W=X!j.d(r)`*X*a.e.f.j/W/]/e/u0m1X1Z3Y3[4Y4^5]5_6w6x6z7b7f7o7q9Z9b:^:b:q:v;R=d=eU/d*R.d7Oe7O3q7P7Q7U8}9O:T:U:W;UQ0[*qQ3^.fU4n0[3^9RR9R7QQ*v%UR0`*vQ4x0mR7p4xQ+Y%iR0l+YQ5a1^S8O5a9lR9l8PQ,T&[R1a,TQ5g1cR8R5gQ1o,_S5w1o8aR8a5yQ0z+mW5S0z5U7v9hQ5U0}Q7v5TR9h7wQ+r&OR1Q+rQ2R,qR6X2RYrOXst#dQ&s!ZQ+[%kQ,k&oQ,m&qQ,n&rQ,p&tQ1|,lS2P,q2RR6W2OQ%mpQ&w!_Q&z!aQ&|!bQ'O!cQ'n!uQ+Z%jQ+g%xQ+y&UQ,a&jQ,x&yW-i'h'p'q'tQ-p'lQ0Q*jQ0u+hS1r,b,eQ2Z,wQ2[,zQ2],{Q2q-hW2s-k-l-o-qQ4{0vQ5X1TQ5[1XQ5q1iQ5{1tQ6V1}U6f2r2u2xQ6i2vQ7r4|Q7z5ZQ7{5]Q8Q5fQ8[5rQ8b5zS8q6g6kQ8s6jQ9i7xQ9q8]Q9v8cQ9}8rQ:d9jQ:i9rQ:m:OR:z:jQ%xyQ'a!iQ'l!uU+h%y%z%{Q-P'SU-d'b'c'dS-h'h'rQ/w*eS0v+i+jQ2c-RS2o-e-fQ2v-mQ4b/{Q4|0wQ6b2iQ6e2pQ6j2wR7g4fS$wi=YR*w%VU%Ui%V=YR0_*uQ$viS(r#v+dS)`$b$cQ)b$dQ*X$xS*a${*VQ*p%OQ*q%QQ*{%]Q*|%^Q+Q%bQ.e;zQ.f;|Q.h<QQ.i<SQ.j<UQ/W)vS/])|/_Q/a*OQ/c*QQ/e*SQ/p*]S/u*c/gQ0]*sQ0^*th0m+a._1e3V5n6r8W8w9o:R:h:pQ1X+{Q1Z,OQ3Y<^Q3Z<`Q3[<cS3q;w;xQ3u.xQ4X/qQ4Y/rQ4^/tQ4k0XQ4m0ZQ4s0fQ5]1YQ5_1]Q6w<gQ6x<iQ6y<kQ6z<mQ7P;{Q7Q;}Q7S<RQ7T<TQ7U<VQ7Z4PQ7b4[Q7f4dQ7m4oQ7o4wQ7q4zQ8}<dQ9O<_Q9P<aQ9Z7aQ9b7jQ:T<hQ:U<jQ:V<lQ:W<nQ:X9VQ:^9`Q:b9eQ:q<qQ:v:`Q;R:wQ;U<rQ<z=YQ=W=bQ=X=cQ=d=fR=e=gQ*y%[Q.g<OR7R<PnpOXst!Z#d%k&o&q&r&t,l,q2O2RQ!fPS#fZ#oQ&y!`U'e!o5d8TQ'|#SQ(}#{Q)o$nS,e&h&kQ,j&lQ,w&xQ,|'QQ-`'_Q.q({Q/T)pS0j+W/hQ0p+bQ1z,iQ2m-bQ3T.`Q3z/OQ4q0cQ5l1fQ5}1vQ6O1wQ6S1yQ6U1{Q6Z2TQ6u3WQ7X3wQ8Y5oQ8f6PQ8g6QQ8i6TQ8{6vQ9p8ZR9z8j#YcOPXZst!Z!`!o#d#o#{%k&h&k&l&o&q&r&t&x'Q'_({+W+b,i,l,q-b.`/h0c1f1v1w1y1{2O2R2T3W5d5o6P6Q6T6v8T8Z8jQ#YWQ#eYQ%ouQ%qvS%sw!gS(P#W(SQ(V#ZQ(q#uQ(v#xQ)O$OQ)P$PQ)Q$QQ)R$RQ)S$SQ)T$TQ)U$UQ)V$VQ)W$WQ)X$XQ)Z$ZQ)]$_Q)_$aQ)d$eW)n$n)p/O3wQ+_%rQ+s&PS-S'U2dQ-q'oS-v(Q-xQ-{(YQ-}(aQ.l(uQ.o(wQ.s;aQ.u;dQ.v;eQ.w;hQ/Z)zQ0g+SQ2_,}Q2b-QQ2r-jQ2y.OQ3_.mQ3d;iQ3e;jQ3f;kQ3g;lQ3h;mQ3i;nQ3j;oQ3k;pQ3l;qQ3m;rQ3n;sQ3o.tQ3p;vQ3s;yQ3t<WQ3{;tQ4t0iQ4}0xQ6a<YQ6g2tQ6l2zQ6{3`Q6|<ZQ7V<]Q7W<eQ8P5bQ8n6_Q8r6hQ8|<fQ9S<oQ9T<pQ:O8tQ:e9kQ:l9|Q;c#SR=P=]R#[WR'W!el!tQ!r!v!y!z']'i'j'k-^-n1c5g5iS'S!e-US-R'T'[R2i-[R(x#xQ!fQT-]']-^]!qQ!r']-^1c5gQ#p]R'f;bR)c$dY!uQ']-^1c5gQ'h!rS'r!v!yS't!z5iS-m'i'jQ-o'kR2w-nT#kZ%cS#jZ%cS%im,hU(d#h#i#lS.R(e(fQ.V(gQ0k+XQ2|.SU2}.T.U.WS6n3O3PR8u6od#^W#W#Z%f(Q(Z*V+U-|/gr#gZm#h#i#l%c(e(f(g+X.S.T.U.W3O3P6oS*Y$x*^Q/n*ZQ1x,hQ2`-OQ4R/jQ6]2WQ7^4SQ8m6^T<w'U+VV#aW%f*VU#`W%f*VS(R#W(ZU(W#Z+U/gS-T'U+VT-w(Q-|V'Z!e%g*WQ$lfR)u$qT)j$l)kR3y.}T*[$x*^T*d${*VQ0n+aQ3R._Q5k1eQ6s3VQ8X5nQ8x6rQ9m8WQ:P8wQ:g9oQ:o:RQ:y:hR:|:pnqOXst!Z#d%k&o&q&r&t,l,q2O2RQ&i!VR,a&ftmOXst!U!V!Z#d%k&f&o&q&r&t,l,q2O2RR,h&lT%jm,hR1_,QR,`&dQ&S|R+x&TR+n%}T&m!W&pT&n!W&pT2Q,q2R\",\n  nodeNames: \"⚠ ArithOp ArithOp ?. JSXStartTag LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > < TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewTarget new NewExpression ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression TypeArgList CompareOp < declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression InstantiationExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression InstantiationExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem\",\n  maxTerm: 376,\n  context: trackNewline,\n  nodeProps: [\n    [\"isolate\", -8,5,6,14,34,36,48,50,52,\"\"],\n    [\"group\", -26,9,17,19,65,204,208,212,213,215,218,221,231,233,239,241,243,245,248,254,260,262,264,266,268,270,271,\"Statement\",-34,13,14,29,32,33,39,48,51,52,54,59,67,69,73,77,79,81,82,107,108,117,118,135,138,140,141,142,143,144,146,147,166,167,169,\"Expression\",-23,28,30,34,38,40,42,171,173,175,176,178,179,180,182,183,184,186,187,188,198,200,202,203,\"Type\",-3,85,100,106,\"ClassItem\"],\n    [\"openedBy\", 23,\"<\",35,\"InterpolationStart\",53,\"[\",57,\"{\",70,\"(\",159,\"JSXStartCloseTag\"],\n    [\"closedBy\", 24,\">\",37,\"InterpolationEnd\",47,\"]\",58,\"}\",71,\")\",164,\"JSXEndTag\"]\n  ],\n  propSources: [jsHighlight],\n  skippedNodes: [0,5,6,274],\n  repeatNodeCount: 37,\n  tokenData: \"$Fq07[R!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#:O!R![#<_![!]#I_!]!^#Jk!^!_#Ku!_!`$![!`!a$$v!a!b$*T!b!c$,r!c!}Er!}#O$-|#O#P$/W#P#Q$4o#Q#R$5y#R#SEr#S#T$7W#T#o$8b#o#p$<r#p#q$=h#q#r$>x#r#s$@U#s$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$I|Er$I|$I}$Dk$I}$JO$Dk$JO$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr(n%d_$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$h&j(U!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU(U!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$h&j(RpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU(RpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX(Rp(U!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z07[+rq$h&j(Rp(U!b'w0/lOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z07[.ST(S#S$h&j'x0/lO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c07[.n_$h&j(Rp(U!b'x0/lOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)3p/x`$h&j!m),Q(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW1V`#u(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW2d_#u(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At3l_(Q':f$h&j(U!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k(^4r_$h&j(U!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k&z5vX$h&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q&z6jT$c`$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c`6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y`7bO$c``7eP;=`<%l6y&z7kP;=`<%l5q(^7w]$c`$h&j(U!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!r8uZ(U!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p!r9oU$c`(U!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!r:UP;=`<%l8p(^:[P;=`<%l4k%9[:hh$h&j(Rp(U!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__WS$h&j(Rp(U!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]WS$h&j(U!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXWS$h&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSWSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWWS(U!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]WS$h&j(RpOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWWS(RpOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYWS(Rp(U!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S%9[C}i$h&j(j%1l(Rp(U!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr%9[EoP;=`<%lCr07[FRk$h&j(Rp(U!b$[#t(O,2j(`$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$h&j(Rp(U!b$[#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv07[JPP;=`<%lEr(KWJ_`$h&j(Rp(U!b#m(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWKl_$h&j$P(Ch(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,#xLva(u+JY$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KWNW`$h&j#y(Ch(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'At! c_(T';W$h&j(RpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b'l!!i_$h&j(RpOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b&z!#mX$h&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h`!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y`!$oP;=`<%l!$Y&z!$uP;=`<%l!#h'l!%R]$c`$h&j(RpOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r!Q!&PZ(RpOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z!Q!&yU$c`(RpOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r!Q!'`P;=`<%l!%z'l!'fP;=`<%l!!b/5|!'t_!i/.^$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&U!)O_!h!Lf$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z-!n!*[b$h&j(Rp(U!b(P%&f#n(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW!+o`$h&j(Rp(U!b#k(ChOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;x!,|`$h&j(Rp(U!bo+4YOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z,$U!.Z_!Y+Jf$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!/ec$h&j(Rp(U!b}.2^OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!0ya$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#%|!2Z_!X!L^$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!3eg$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!5Vg$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!6wc$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad!8_c$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[!9uf$h&j(Rp(U!b#l(ChOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcxz!;Zz{#-}{!P!;Z!P!Q#/d!Q!^!;Z!^!_#(i!_!`#7S!`!a#8i!a!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z?O!;fb$h&j(Rp(U!b!U7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z>^!<w`$h&j(U!b!U7`OY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eq!Q!^!<n!^!_!Gr!_!}!<n!}#O!KS#O#P!Dy#P#o!<n#o#p!Gr#p;'S!<n;'S;=`!L]<%lO!<n<z!>Q^$h&j!U7`OY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@c!_!}!=y!}#O!CW#O#P!Dy#P#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!?Td$h&j!U7`O!^&c!_#W&c#W#X!>|#X#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#k!>|#k#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&c7`!@hX!U7`OY!@cZ!P!@c!P!Q!AT!Q!}!@c!}#O!Ar#O#P!Bq#P;'S!@c;'S;=`!CQ<%lO!@c7`!AYW!U7`#W#X!AT#Z#[!AT#]#^!AT#a#b!AT#g#h!AT#i#j!AT#j#k!AT#m#n!AT7`!AuVOY!ArZ#O!Ar#O#P!B[#P#Q!@c#Q;'S!Ar;'S;=`!Bk<%lO!Ar7`!B_SOY!ArZ;'S!Ar;'S;=`!Bk<%lO!Ar7`!BnP;=`<%l!Ar7`!BtSOY!@cZ;'S!@c;'S;=`!CQ<%lO!@c7`!CTP;=`<%l!@c<z!C][$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#O!CW#O#P!DR#P#Q!=y#Q#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DWX$h&jOY!CWYZ&cZ!^!CW!^!_!Ar!_#o!CW#o#p!Ar#p;'S!CW;'S;=`!Ds<%lO!CW<z!DvP;=`<%l!CW<z!EOX$h&jOY!=yYZ&cZ!^!=y!^!_!@c!_#o!=y#o#p!@c#p;'S!=y;'S;=`!Ek<%lO!=y<z!EnP;=`<%l!=y>^!Ezl$h&j(U!b!U7`OY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#W&}#W#X!Eq#X#Z&}#Z#[!Eq#[#]&}#]#^!Eq#^#a&}#a#b!Eq#b#g&}#g#h!Eq#h#i&}#i#j!Eq#j#k!Eq#k#m&}#m#n!Eq#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}8r!GyZ(U!b!U7`OY!GrZw!Grwx!@cx!P!Gr!P!Q!Hl!Q!}!Gr!}#O!JU#O#P!Bq#P;'S!Gr;'S;=`!J|<%lO!Gr8r!Hse(U!b!U7`OY'}Zw'}x#O'}#P#W'}#W#X!Hl#X#Z'}#Z#[!Hl#[#]'}#]#^!Hl#^#a'}#a#b!Hl#b#g'}#g#h!Hl#h#i'}#i#j!Hl#j#k!Hl#k#m'}#m#n!Hl#n;'S'};'S;=`(f<%lO'}8r!JZX(U!bOY!JUZw!JUwx!Arx#O!JU#O#P!B[#P#Q!Gr#Q;'S!JU;'S;=`!Jv<%lO!JU8r!JyP;=`<%l!JU8r!KPP;=`<%l!Gr>^!KZ^$h&j(U!bOY!KSYZ&cZw!KSwx!CWx!^!KS!^!_!JU!_#O!KS#O#P!DR#P#Q!<n#Q#o!KS#o#p!JU#p;'S!KS;'S;=`!LV<%lO!KS>^!LYP;=`<%l!KS>^!L`P;=`<%l!<n=l!Ll`$h&j(Rp!U7`OY!LcYZ&cZr!Lcrs!=ys!P!Lc!P!Q!Mn!Q!^!Lc!^!_# o!_!}!Lc!}#O#%P#O#P!Dy#P#o!Lc#o#p# o#p;'S!Lc;'S;=`#&Y<%lO!Lc=l!Mwl$h&j(Rp!U7`OY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#W(r#W#X!Mn#X#Z(r#Z#[!Mn#[#](r#]#^!Mn#^#a(r#a#b!Mn#b#g(r#g#h!Mn#h#i(r#i#j!Mn#j#k!Mn#k#m(r#m#n!Mn#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r8Q# vZ(Rp!U7`OY# oZr# ors!@cs!P# o!P!Q#!i!Q!}# o!}#O#$R#O#P!Bq#P;'S# o;'S;=`#$y<%lO# o8Q#!pe(Rp!U7`OY)rZr)rs#O)r#P#W)r#W#X#!i#X#Z)r#Z#[#!i#[#])r#]#^#!i#^#a)r#a#b#!i#b#g)r#g#h#!i#h#i)r#i#j#!i#j#k#!i#k#m)r#m#n#!i#n;'S)r;'S;=`*Z<%lO)r8Q#$WX(RpOY#$RZr#$Rrs!Ars#O#$R#O#P!B[#P#Q# o#Q;'S#$R;'S;=`#$s<%lO#$R8Q#$vP;=`<%l#$R8Q#$|P;=`<%l# o=l#%W^$h&j(RpOY#%PYZ&cZr#%Prs!CWs!^#%P!^!_#$R!_#O#%P#O#P!DR#P#Q!Lc#Q#o#%P#o#p#$R#p;'S#%P;'S;=`#&S<%lO#%P=l#&VP;=`<%l#%P=l#&]P;=`<%l!Lc?O#&kn$h&j(Rp(U!b!U7`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#W%Z#W#X#&`#X#Z%Z#Z#[#&`#[#]%Z#]#^#&`#^#a%Z#a#b#&`#b#g%Z#g#h#&`#h#i%Z#i#j#&`#j#k#&`#k#m%Z#m#n#&`#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z9d#(r](Rp(U!b!U7`OY#(iZr#(irs!Grsw#(iwx# ox!P#(i!P!Q#)k!Q!}#(i!}#O#+`#O#P!Bq#P;'S#(i;'S;=`#,`<%lO#(i9d#)th(Rp(U!b!U7`OY*gZr*grs'}sw*gwx)rx#O*g#P#W*g#W#X#)k#X#Z*g#Z#[#)k#[#]*g#]#^#)k#^#a*g#a#b#)k#b#g*g#g#h#)k#h#i*g#i#j#)k#j#k#)k#k#m*g#m#n#)k#n;'S*g;'S;=`+Z<%lO*g9d#+gZ(Rp(U!bOY#+`Zr#+`rs!JUsw#+`wx#$Rx#O#+`#O#P!B[#P#Q#(i#Q;'S#+`;'S;=`#,Y<%lO#+`9d#,]P;=`<%l#+`9d#,cP;=`<%l#(i?O#,o`$h&j(Rp(U!bOY#,fYZ&cZr#,frs!KSsw#,fwx#%Px!^#,f!^!_#+`!_#O#,f#O#P!DR#P#Q!;Z#Q#o#,f#o#p#+`#p;'S#,f;'S;=`#-q<%lO#,f?O#-tP;=`<%l#,f?O#-zP;=`<%l!;Z07[#.[b$h&j(Rp(U!b'y0/l!U7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z07[#/o_$h&j(Rp(U!bT0/lOY#/dYZ&cZr#/drs#0nsw#/dwx#4Ox!^#/d!^!_#5}!_#O#/d#O#P#1p#P#o#/d#o#p#5}#p;'S#/d;'S;=`#6|<%lO#/d06j#0w]$h&j(U!bT0/lOY#0nYZ&cZw#0nwx#1px!^#0n!^!_#3R!_#O#0n#O#P#1p#P#o#0n#o#p#3R#p;'S#0n;'S;=`#3x<%lO#0n05W#1wX$h&jT0/lOY#1pYZ&cZ!^#1p!^!_#2d!_#o#1p#o#p#2d#p;'S#1p;'S;=`#2{<%lO#1p0/l#2iST0/lOY#2dZ;'S#2d;'S;=`#2u<%lO#2d0/l#2xP;=`<%l#2d05W#3OP;=`<%l#1p01O#3YW(U!bT0/lOY#3RZw#3Rwx#2dx#O#3R#O#P#2d#P;'S#3R;'S;=`#3r<%lO#3R01O#3uP;=`<%l#3R06j#3{P;=`<%l#0n05x#4X]$h&j(RpT0/lOY#4OYZ&cZr#4Ors#1ps!^#4O!^!_#5Q!_#O#4O#O#P#1p#P#o#4O#o#p#5Q#p;'S#4O;'S;=`#5w<%lO#4O00^#5XW(RpT0/lOY#5QZr#5Qrs#2ds#O#5Q#O#P#2d#P;'S#5Q;'S;=`#5q<%lO#5Q00^#5tP;=`<%l#5Q05x#5zP;=`<%l#4O01p#6WY(Rp(U!bT0/lOY#5}Zr#5}rs#3Rsw#5}wx#5Qx#O#5}#O#P#2d#P;'S#5};'S;=`#6v<%lO#5}01p#6yP;=`<%l#5}07[#7PP;=`<%l#/d)3h#7ab$h&j$P(Ch(Rp(U!b!U7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;ZAt#8vb$Y#t$h&j(Rp(U!b!U7`OY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Lcx!P!;Z!P!Q#&`!Q!^!;Z!^!_#(i!_!}!;Z!}#O#,f#O#P!Dy#P#o!;Z#o#p#(i#p;'S!;Z;'S;=`#-w<%lO!;Z'Ad#:Zp$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#U%Z#U#V#?i#V#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#d#Bq#d#l%Z#l#m#Es#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#<jk$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#<_![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#<_#S#X%Z#X#Y!4|#Y#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#>j_$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#?rd$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#A]f$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#AQ!R!S#AQ!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#AQ#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Bzc$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Dbe$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#DV!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#DV#S#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#E|g$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'Ad#Gpi$h&j(Rp(U!bp'9tOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#Ge![!^%Z!^!_*g!_!c%Z!c!i#Ge!i#O%Z#O#P&c#P#R%Z#R#S#Ge#S#T%Z#T#Z#Ge#Z#b%Z#b#c#>_#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x#Il_!d$b$h&j#})Lv(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#Jv_al$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f#LS^h#)`#O-<U(Rp(U!b(y7`OY*gZr*grs'}sw*gwx)rx!P*g!P!Q#MO!Q!^*g!^!_#Mt!_!`$ f!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#MXX$j&j(Rp(U!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El#M}Z#o(Ch(Rp(U!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#Np!`#O*g#P;'S*g;'S;=`+Z<%lO*g(El#NyX$P(Ch(Rp(U!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g(El$ oX#p(Ch(Rp(U!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g*)x$!ga#]*!Y$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$#l!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(K[$#w_#h(Cl$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z*)x$%Vag!*r#p(Ch$e#|$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$&[!`!a$'f!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$&g_#p(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$'qa#o(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$(v!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$)R`#o(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(Kd$*`a(m(Ct$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!a%Z!a!b$+e!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$+p`$h&j#z(Ch(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`$,}_!y$Ip$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z04f$.X_!P0,v$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/]Z$h&jO!^$0O!^!_$0f!_#i$0O#i#j$0k#j#l$0O#l#m$2^#m#o$0O#o#p$0f#p;'S$0O;'S;=`$4i<%lO$0O(n$0VT_#S$h&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0kO_#S(n$0p[$h&jO!Q&c!Q![$1f![!^&c!_!c&c!c!i$1f!i#T&c#T#Z$1f#Z#o&c#o#p$3|#p;'S&c;'S;=`&w<%lO&c(n$1kZ$h&jO!Q&c!Q![$2^![!^&c!_!c&c!c!i$2^!i#T&c#T#Z$2^#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2cZ$h&jO!Q&c!Q![$3U![!^&c!_!c&c!c!i$3U!i#T&c#T#Z$3U#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3ZZ$h&jO!Q&c!Q![$0O![!^&c!_!c&c!c!i$0O!i#T&c#T#Z$0O#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$4PR!Q![$4Y!c!i$4Y#T#Z$4Y#S$4]S!Q![$4Y!c!i$4Y#T#Z$4Y#q#r$0f(n$4lP;=`<%l$0O#1[$4z_!V#)l$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(KW$6U`#w(Ch$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z+;p$7c_$h&j(Rp(U!b([+4QOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$8qk$h&j(Rp(U!b(O,2j$^#t(`$I[OY%ZYZ&cZr%Zrs&}st%Ztu$8buw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$8b![!^%Z!^!_*g!_!c%Z!c!}$8b!}#O%Z#O#P&c#P#R%Z#R#S$8b#S#T%Z#T#o$8b#o#p*g#p$g%Z$g;'S$8b;'S;=`$<l<%lO$8b+d$:qk$h&j(Rp(U!b$^#tOY%ZYZ&cZr%Zrs&}st%Ztu$:fuw%Zwx(rx}%Z}!O$:f!O!Q%Z!Q![$:f![!^%Z!^!_*g!_!c%Z!c!}$:f!}#O%Z#O#P&c#P#R%Z#R#S$:f#S#T%Z#T#o$:f#o#p*g#p$g%Z$g;'S$:f;'S;=`$<f<%lO$:f+d$<iP;=`<%l$:f07[$<oP;=`<%l$8b#Jf$<{X![#Hb(Rp(U!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g,#x$=sa(t+JY$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+e#q;'S%Z;'S;=`+a<%lO%Z)>v$?V_!Z(CdsBr$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z?O$@a_!n7`$h&j(Rp(U!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z07[$Aq|$h&j(Rp(U!b'w0/l$[#t(O,2j(`$I[OX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$A`#BZ$ISEr$IS$I_$A`$I_$JTEr$JT$JU$A`$JU$KVEr$KV$KW$A`$KW&FUEr&FU&FV$A`&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$A`?HUOEr07[$D|k$h&j(Rp(U!b'x0/l$[#t(O,2j(`$I[OY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr\",\n  tokenizers: [noSemicolon, operatorToken, jsx, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, insertSemicolon, new LocalTokenGroup(\"$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOu~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!R~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(^~~\", 141, 335), new LocalTokenGroup(\"j~RQYZXz{^~^O'{~~aP!P!Qd~iO'|~~\", 25, 318)],\n  topRules: {\"Script\":[0,7],\"SingleExpression\":[1,272],\"SingleClassItem\":[2,273]},\n  dialects: {jsx: 0, ts: 14791},\n  dynamicPrecedences: {\"77\":1,\"79\":1,\"91\":1,\"167\":1,\"196\":1},\n  specialized: [{term: 322, get: (value) => spec_identifier[value] || -1},{term: 338, get: (value) => spec_word[value] || -1},{term: 92, get: (value) => spec_LessThan[value] || -1}],\n  tokenPrec: 14815\n});\n\nexport { parser };\n","import { parser } from '@lezer/javascript';\nimport { syntaxTree, LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, defineLanguageFacet, sublanguageProp, LanguageSupport } from '@codemirror/language';\nimport { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\nimport { NodeWeakMap, IterMode } from '@lezer/common';\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"do {\\n\\t${}\\n} while (${})\", {\n        label: \"do\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"while (${}) {\\n\\t${}\\n}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"/ catch block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n} else {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n/**\nA collection of snippet completions for TypeScript. Includes the\nJavaScript [snippets](https://codemirror.net/6/docs/ref/#lang-javascript.snippets).\n*/\nconst typescriptSnippets = /*@__PURE__*/snippets.concat([\n    /*@__PURE__*/snippetCompletion(\"interface ${name} {\\n\\t${}\\n}\", {\n        label: \"interface\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"type ${name} = ${type}\", {\n        label: \"type\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"enum ${name} {\\n\\t${}\\n}\", {\n        label: \"enum\",\n        detail: \"definition\",\n        type: \"keyword\"\n    })\n]);\n\nconst cache = /*@__PURE__*/new NodeWeakMap();\nconst ScopeNodes = /*@__PURE__*/new Set([\n    \"Script\", \"Block\",\n    \"FunctionExpression\", \"FunctionDeclaration\", \"ArrowFunction\", \"MethodDeclaration\",\n    \"ForStatement\"\n]);\nfunction defID(type) {\n    return (node, def) => {\n        let id = node.node.getChild(\"VariableDefinition\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst functionContext = [\"FunctionDeclaration\"];\nconst gatherCompletions = {\n    FunctionDeclaration: /*@__PURE__*/defID(\"function\"),\n    ClassDeclaration: /*@__PURE__*/defID(\"class\"),\n    ClassExpression: () => true,\n    EnumDeclaration: /*@__PURE__*/defID(\"constant\"),\n    TypeAliasDeclaration: /*@__PURE__*/defID(\"type\"),\n    NamespaceDeclaration: /*@__PURE__*/defID(\"namespace\"),\n    VariableDefinition(node, def) { if (!node.matchContext(functionContext))\n        def(node, \"variable\"); },\n    TypeDefinition(node, def) { def(node, \"type\"); },\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(IterMode.IncludeAnonymous).iterate(node => {\n        if (top) {\n            top = false;\n        }\n        else if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def) || ScopeNodes.has(node.name))\n                return false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier = /^[\\w$\\xa1-\\uffff][\\w$\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\n    \"TemplateString\", \"String\", \"RegExp\",\n    \"LineComment\", \"BlockComment\",\n    \"VariableDefinition\", \"TypeDefinition\", \"Label\",\n    \"PropertyDefinition\", \"PropertyName\",\n    \"PrivatePropertyDefinition\", \"PrivatePropertyName\",\n    \".\", \"?.\"\n];\n/**\nCompletion source that looks up locally defined names in\nJavaScript code.\n*/\nfunction localCompletionSource(context) {\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.name == \"VariableName\" ||\n        inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier\n    };\n}\nfunction pathFor(read, member, name) {\n    var _a;\n    let path = [];\n    for (;;) {\n        let obj = member.firstChild, prop;\n        if ((obj === null || obj === void 0 ? void 0 : obj.name) == \"VariableName\") {\n            path.push(read(obj));\n            return { path: path.reverse(), name };\n        }\n        else if ((obj === null || obj === void 0 ? void 0 : obj.name) == \"MemberExpression\" && ((_a = (prop = obj.lastChild)) === null || _a === void 0 ? void 0 : _a.name) == \"PropertyName\") {\n            path.push(read(prop));\n            member = obj;\n        }\n        else {\n            return null;\n        }\n    }\n}\n/**\nHelper function for defining JavaScript completion sources. It\nreturns the completable name and object path for a completion\ncontext, or null if no name/property completion should happen at\nthat position. For example, when completing after `a.b.c` it will\nreturn `{path: [\"a\", \"b\"], name: \"c\"}`. When completing after `x`\nit will return `{path: [], name: \"x\"}`. When not in a property or\nname, it will return null if `context.explicit` is false, and\n`{path: [], name: \"\"}` otherwise.\n*/\nfunction completionPath(context) {\n    let read = (node) => context.state.doc.sliceString(node.from, node.to);\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (inner.name == \"PropertyName\") {\n        return pathFor(read, inner.parent, read(inner));\n    }\n    else if ((inner.name == \".\" || inner.name == \"?.\") && inner.parent.name == \"MemberExpression\") {\n        return pathFor(read, inner.parent, \"\");\n    }\n    else if (dontComplete.indexOf(inner.name) > -1) {\n        return null;\n    }\n    else if (inner.name == \"VariableName\" || inner.to - inner.from < 20 && Identifier.test(read(inner))) {\n        return { path: [], name: read(inner) };\n    }\n    else if (inner.name == \"MemberExpression\") {\n        return pathFor(read, inner, \"\");\n    }\n    else {\n        return context.explicit ? { path: [], name: \"\" } : null;\n    }\n}\nfunction enumeratePropertyCompletions(obj, top) {\n    let options = [], seen = new Set;\n    for (let depth = 0;; depth++) {\n        for (let name of (Object.getOwnPropertyNames || Object.keys)(obj)) {\n            if (!/^[a-zA-Z_$\\xaa-\\uffdc][\\w$\\xaa-\\uffdc]*$/.test(name) || seen.has(name))\n                continue;\n            seen.add(name);\n            let value;\n            try {\n                value = obj[name];\n            }\n            catch (_) {\n                continue;\n            }\n            options.push({\n                label: name,\n                type: typeof value == \"function\" ? (/^[A-Z]/.test(name) ? \"class\" : top ? \"function\" : \"method\")\n                    : top ? \"variable\" : \"property\",\n                boost: -depth\n            });\n        }\n        let next = Object.getPrototypeOf(obj);\n        if (!next)\n            return options;\n        obj = next;\n    }\n}\n/**\nDefines a [completion source](https://codemirror.net/6/docs/ref/#autocomplete.CompletionSource) that\ncompletes from the given scope object (for example `globalThis`).\nWill enter properties of the object when completing properties on\na directly-named path.\n*/\nfunction scopeCompletionSource(scope) {\n    let cache = new Map;\n    return (context) => {\n        let path = completionPath(context);\n        if (!path)\n            return null;\n        let target = scope;\n        for (let step of path.path) {\n            target = target[step];\n            if (!target)\n                return null;\n        }\n        let options = cache.get(target);\n        if (!options)\n            cache.set(target, options = enumeratePropertyCompletions(target, !path.path.length));\n        return {\n            from: context.pos - path.name.length,\n            options,\n            validFor: Identifier\n        };\n    };\n}\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"javascript\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => null,\n                \"Statement Property\": /*@__PURE__*/continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\nconst jsxSublanguage = {\n    test: node => /^JSX/.test(node.name),\n    facet: /*@__PURE__*/defineLanguageFacet({ commentTokens: { block: { open: \"{/*\", close: \"*/}\" } } })\n};\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"ts\" }, \"typescript\");\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n});\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx ts\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n}, \"typescript\");\nlet kwCompletion = (name) => ({ label: name, type: \"keyword\" });\nconst keywords = /*@__PURE__*/\"break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield\".split(\" \").map(kwCompletion);\nconst typescriptKeywords = /*@__PURE__*/keywords.concat(/*@__PURE__*/[\"declare\", \"implements\", \"private\", \"protected\", \"public\"].map(kwCompletion));\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\nand local variable completion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    let completions = config.typescript ? typescriptSnippets.concat(typescriptKeywords) : snippets.concat(keywords);\n    return new LanguageSupport(lang, [\n        javascriptLanguage.data.of({\n            autocomplete: ifNotIn(dontComplete, completeFromList(completions))\n        }),\n        javascriptLanguage.data.of({\n            autocomplete: localCompletionSource\n        }),\n        config.jsx ? autoCloseTags : [],\n    ]);\n}\nfunction findOpenTag(node) {\n    for (;;) {\n        if (node.name == \"JSXOpenTag\" || node.name == \"JSXSelfClosingTag\" || node.name == \"JSXFragmentTag\")\n            return node;\n        if (node.name == \"JSXEscape\" || !node.parent)\n            return null;\n        node = node.parent;\n    }\n}\nfunction elementName(doc, tree, max = doc.length) {\n    for (let ch = tree === null || tree === void 0 ? void 0 : tree.firstChild; ch; ch = ch.nextSibling) {\n        if (ch.name == \"JSXIdentifier\" || ch.name == \"JSXBuiltin\" || ch.name == \"JSXNamespacedName\" ||\n            ch.name == \"JSXMemberExpression\")\n            return doc.sliceString(ch.from, Math.min(ch.to, max));\n    }\n    return \"\";\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\n/**\nExtension that will automatically insert JSX close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text, defaultInsert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||\n        from != to || (text != \">\" && text != \"/\") ||\n        !javascriptLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let base = defaultInsert(), { state } = base;\n    let closeTags = state.changeByRange(range => {\n        var _a;\n        let { head } = range, around = syntaxTree(state).resolveInner(head - 1, -1), name;\n        if (around.name == \"JSXStartTag\")\n            around = around.parent;\n        if (state.doc.sliceString(head - 1, head) != text || around.name == \"JSXAttributeValue\" && around.to > head) ;\n        else if (text == \">\" && around.name == \"JSXFragmentTag\") {\n            return { range, changes: { from: head, insert: `</>` } };\n        }\n        else if (text == \"/\" && around.name == \"JSXStartCloseTag\") {\n            let empty = around.parent, base = empty.parent;\n            if (base && empty.from == head - 2 &&\n                ((name = elementName(state.doc, base.firstChild, head)) || ((_a = base.firstChild) === null || _a === void 0 ? void 0 : _a.name) == \"JSXFragmentTag\")) {\n                let insert = `${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length, -1), changes: { from: head, insert } };\n            }\n        }\n        else if (text == \">\") {\n            let openTag = findOpenTag(around);\n            if (openTag && openTag.name == \"JSXOpenTag\" &&\n                !/^\\/?>|^<\\//.test(state.doc.sliceString(head, head + 2)) &&\n                (name = elementName(state.doc, openTag, head)))\n                return { range, changes: { from: head, insert: `</${name}>` } };\n        }\n        return { range };\n    });\n    if (closeTags.changes.empty)\n        return false;\n    view.dispatch([\n        base,\n        state.update(closeTags, { userEvent: \"input.complete\", scrollIntoView: true })\n    ]);\n    return true;\n});\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The\n[eslint-linter-browserify](https://github.com/UziTech/eslint-linter-browserify)\npackage may help with that (see\n[example](https://github.com/UziTech/eslint-linter-browserify/blob/master/example/script.js)).\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"eslint:\" + input.ruleId : \"eslint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexport { autoCloseTags, completionPath, esLint, javascript, javascriptLanguage, jsxLanguage, localCompletionSource, scopeCompletionSource, snippets, tsxLanguage, typescriptLanguage, typescriptSnippets };\n","import { NodeProp, IterMode, Tree, TreeFragment, Parser, NodeType, NodeSet } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState, countColumn, combineConfig, RangeSet, RangeSetBuilder, Prec } from '@codemirror/state';\nimport { ViewPlugin, logException, EditorView, Decoration, WidgetType, gutter, GutterMarker, Direction } from '@codemirror/view';\nimport { tags, tagHighlighter, highlightTree, styleTags } from '@lezer/highlight';\nimport { StyleModule } from 'style-mod';\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublanguages. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    if (!parse)\n        return null;\n    let oldVieport = parse.viewport;\n    parse.updateViewport({ from: 0, to: upto });\n    let result = parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n    parse.updateViewport(oldVieport);\n    return result;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserRunning) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nMove parsing forward, and update the editor state afterwards to\nreflect the new tree. Will work for at most `timeout`\nmilliseconds. Returns true if the parser managed get to the given\nposition in that time.\n*/\nfunction forceParsing(view, upto = view.viewport.to, timeout = 100) {\n    let success = ensureSyntaxTree(view.state, upto, timeout);\n    if (success != syntaxTree(view.state))\n        view.dispatch({});\n    return !!success;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n/**\nLezer-style\n[`Input`](https://lezer.codemirror.net/docs/ref#common.Input)\nobject for a [`Text`](https://codemirror.net/6/docs/ref/#state.Text) object.\n*/\nclass DocInput {\n    /**\n    Create an input object for the given document.\n    */\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged || update.selectionSet) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting either entirely of the same whitespace\ncharacter. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree.length >= pos ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nCreate a change set that auto-indents all lines touched by the\ngiven document range.\n*/\nfunction indentRange(state, from, to) {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => { var _a; return (_a = updated[start]) !== null && _a !== void 0 ? _a : -1; } });\n    let changes = [];\n    for (let pos = from; pos <= to;) {\n        let line = state.doc.lineAt(pos);\n        pos = line.to + 1;\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            continue;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    }\n    return state.changes(changes);\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let stack = ast.resolveStack(pos);\n    let inner = stack.node.enterUnfinishedNodesBefore(pos);\n    if (inner != stack.node) {\n        let add = [];\n        for (let cur = inner; cur != stack.node; cur = cur.parent)\n            add.push(cur);\n        for (let i = add.length - 1; i >= 0; i--)\n            stack = { node: add[i], next: stack };\n    }\n    return indentFor(stack, cx, pos);\n}\nfunction indentFor(stack, cx, pos) {\n    for (let cur = stack; cur; cur = cur.next) {\n        let strategy = indentStrategy(cur.node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(cx, pos, cur));\n    }\n    return 0;\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    @internal\n    */\n    context) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.context = context;\n    }\n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    get node() { return this.context.node; }\n    /**\n    @internal\n    */\n    static create(base, pos, context) {\n        return new TreeIndentContext(base, pos, context);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        return this.baseIndentFor(this.node);\n    }\n    /**\n    Get the indentation for the reference line of the given node\n    (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).\n    */\n    baseIndentFor(node) {\n        let line = this.state.doc.lineAt(node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        return indentFor(this.context.next, this.base, this.pos);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped) {\n            if (next.from >= lineEnd)\n                return null;\n            let space = /^ */.exec(openLine.text.slice(openToken.to - openLine.from))[0].length;\n            return { from: openToken.from, to: openToken.to + space };\n        }\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let stack = tree.resolveStack(end, 1);\n    let found = null;\n    for (let iter = stack; iter; iter = iter.next) {\n        let cur = iter.node;\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to)) {\n                let { preparePlaceholder } = tr.state.facet(foldConfig);\n                let widget = !preparePlaceholder ? foldWidget :\n                    Decoration.replace({ widget: new PreparedFoldWidget(preparePlaceholder(tr.state, e.value)) });\n                folded = folded.update({ add: [widget.range(e.value.from, e.value.to)] });\n            }\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges. Note that, in most cases,\nfolding information will depend on the [syntax\ntree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work\nreliably when the document hasn't been fully parsed (either\nbecause the editor state was only just initialized, or because the\ndocument is so big that the parser decided not to parse it\nentirely).\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n// Find the foldable region containing the given line, if one exists\nfunction foldableContainer(view, lineBlock) {\n    // Look backwards through line blocks until we find a foldable region that\n    // intersects with the line\n    for (let line = lineBlock;;) {\n        let foldableRegion = foldable(view.state, line.from, line.to);\n        if (foldableRegion && foldableRegion.to > lineBlock.from)\n            return foldableRegion;\n        if (!line.from)\n            return null;\n        line = view.lineBlockAt(line.from - 1);\n    }\n}\n/**\nToggle folding at cursors. Unfolds if there is an existing fold\nstarting in that line, tries to find a foldable range around it\notherwise.\n*/\nconst toggleFold = (view) => {\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded) {\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n        }\n        else {\n            let foldRange = foldableContainer(view, line);\n            if (foldRange)\n                effects.push(foldEffect.of(foldRange), announceFold(view, foldRange));\n        }\n    }\n    if (effects.length > 0)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    preparePlaceholder: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nfunction widgetToDOM(view, prepared) {\n    let { state } = view, conf = state.facet(foldConfig);\n    let onclick = (event) => {\n        let line = view.lineBlockAt(view.posAtDOM(event.target));\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            view.dispatch({ effects: unfoldEffect.of(folded) });\n        event.preventDefault();\n    };\n    if (conf.placeholderDOM)\n        return conf.placeholderDOM(view, onclick, prepared);\n    let element = document.createElement(\"span\");\n    element.textContent = conf.placeholderText;\n    element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n    element.title = state.phrase(\"unfold\");\n    element.className = \"cm-foldPlaceholder\";\n    element.onclick = onclick;\n    return element;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) { return widgetToDOM(view, null); }\n    } });\nclass PreparedFoldWidget extends WidgetType {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    eq(other) { return this.value == other.value; }\n    toDOM(view) { return widgetToDOM(view, this.value); }\n}\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\n/**\nReturns the CSS classes (if any) that the highlighters active in\nthe state would assign to the given style\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag) and\n(optional) language\n[scope](https://codemirror.net/6/docs/ref/#language.HighlightStyle^define^options.scope).\n*/\nfunction highlightingFor(state, tags, scope) {\n    let highlighters = getHighlighters(state);\n    let result = null;\n    if (highlighters)\n        for (let highlighter of highlighters) {\n            if (!highlighter.scope || scope && highlighter.scope(scope)) {\n                let cls = highlighter.style(tags);\n                if (cls)\n                    result = result ? result + \" \" + cls : cls;\n            }\n        }\n    return result;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n        this.decoratedTo = view.viewport.to;\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        let { viewport } = update.view, decoratedToMapped = update.changes.mapPos(this.decoratedTo, 1);\n        if (tree.length < viewport.to && !styleChange && tree.type == this.tree.type && decoratedToMapped >= viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n            this.decoratedTo = decoratedToMapped;\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n            this.decoratedTo = viewport.to;\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.meta,\n        color: \"#404740\" },\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a ‘handle’—the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [indentService.of((cx, pos) => this.getIndent(cx, pos))], parser.name);\n        this.topNode = docID(data);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    getIndent(cx, pos) {\n        let tree = syntaxTree(cx.state), at = tree.resolve(pos);\n        while (at && at.type != this.topNode)\n            at = at.parent;\n        if (!at)\n            return null;\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, tree, 0, at.from, from !== null && from !== void 0 ? from : pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = 0;\n        }\n        if (pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nclass Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 2048 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, size, offset) {\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, 4, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 2048 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n}\nfunction readToken(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\n// Cache of node types by name and tags\nconst byTag = /*@__PURE__*/Object.create(null);\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tags$1 = [];\n    for (let name of tagStr.split(\" \")) {\n        let found = [];\n        for (let part of name.split(\".\")) {\n            let value = (extra[part] || tags[part]);\n            if (!value) {\n                warnForPart(part, `Unknown highlighting tag ${part}`);\n            }\n            else if (typeof value == \"function\") {\n                if (!found.length)\n                    warnForPart(part, `Modifier ${part} used at start of tag`);\n                else\n                    found = found.map(value);\n            }\n            else {\n                if (found.length)\n                    warnForPart(part, `Tag ${part} used as modifier`);\n                else\n                    found = Array.isArray(value) ? value : [value];\n            }\n        }\n        for (let tag of found)\n            tags$1.push(tag);\n    }\n    if (!tags$1.length)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), key = name + \" \" + tags$1.map(t => t.id);\n    let known = byTag[key];\n    if (known)\n        return known.id;\n    let type = byTag[key] = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tags$1 })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [languageDataProp.add(() => data)], top: true });\n    typeArray.push(type);\n    return type;\n}\n\nfunction buildForLine(line) {\n    return line.length <= 4096 && /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/.test(line);\n}\nfunction textHasRTL(text) {\n    for (let i = text.iter(); !i.next().done;)\n        if (buildForLine(i.value))\n            return true;\n    return false;\n}\nfunction changeAddsRTL(change) {\n    let added = false;\n    change.iterChanges((fA, tA, fB, tB, ins) => {\n        if (!added && textHasRTL(ins))\n            added = true;\n    });\n    return added;\n}\nconst alwaysIsolate = /*@__PURE__*/Facet.define({ combine: values => values.some(x => x) });\n/**\nMake sure nodes\n[marked](https://lezer.codemirror.net/docs/ref/#common.NodeProp^isolate)\nas isolating for bidirectional text are rendered in a way that\nisolates them from the surrounding text.\n*/\nfunction bidiIsolates(options = {}) {\n    let extensions = [isolateMarks];\n    if (options.alwaysIsolate)\n        extensions.push(alwaysIsolate.of(true));\n    return extensions;\n}\nconst isolateMarks = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.always = view.state.facet(alwaysIsolate) ||\n            view.textDirection != Direction.LTR ||\n            view.state.facet(EditorView.perLineTextDirection);\n        this.hasRTL = !this.always && textHasRTL(view.state.doc);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.always || this.hasRTL ? buildDeco(view, this.tree, this.always) : Decoration.none;\n    }\n    update(update) {\n        let always = update.state.facet(alwaysIsolate) ||\n            update.view.textDirection != Direction.LTR ||\n            update.state.facet(EditorView.perLineTextDirection);\n        if (!always && !this.hasRTL && changeAddsRTL(update.changes))\n            this.hasRTL = true;\n        if (!always && !this.hasRTL)\n            return;\n        let tree = syntaxTree(update.state);\n        if (always != this.always || tree != this.tree || update.docChanged || update.viewportChanged) {\n            this.tree = tree;\n            this.always = always;\n            this.decorations = buildDeco(update.view, tree, always);\n        }\n    }\n}, {\n    provide: plugin => {\n        function access(view) {\n            var _a, _b;\n            return (_b = (_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.decorations) !== null && _b !== void 0 ? _b : Decoration.none;\n        }\n        return [EditorView.outerDecorations.of(access),\n            Prec.lowest(EditorView.bidiIsolatedRanges.of(access))];\n    }\n});\nfunction buildDeco(view, tree, always) {\n    let deco = new RangeSetBuilder();\n    let ranges = view.visibleRanges;\n    if (!always)\n        ranges = clipRTLLines(ranges, view.state.doc);\n    for (let { from, to } of ranges) {\n        tree.iterate({\n            enter: node => {\n                let iso = node.type.prop(NodeProp.isolate);\n                if (iso)\n                    deco.add(node.from, node.to, marks[iso]);\n            },\n            from, to\n        });\n    }\n    return deco.finish();\n}\nfunction clipRTLLines(ranges, doc) {\n    let cur = doc.iter(), pos = 0, result = [], last = null;\n    for (let { from, to } of ranges) {\n        if (last && last.to > from) {\n            from = last.to;\n            if (from >= to)\n                continue;\n        }\n        if (pos + cur.value.length < from) {\n            cur.next(from - (pos + cur.value.length));\n            pos = from;\n        }\n        for (;;) {\n            let start = pos, end = pos + cur.value.length;\n            if (!cur.lineBreak && buildForLine(cur.value)) {\n                if (last && last.to > start - 10)\n                    last.to = Math.min(to, end);\n                else\n                    result.push(last = { from: start, to: Math.min(to, end) });\n            }\n            if (end >= to)\n                break;\n            pos = end;\n            cur.next();\n        }\n    }\n    return result;\n}\nconst marks = {\n    rtl: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"rtl\" }, bidiIsolate: Direction.RTL }),\n    ltr: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"ltr\" }, bidiIsolate: Direction.LTR }),\n    auto: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"auto\" }, bidiIsolate: null })\n};\n\nexport { DocInput, HighlightStyle, IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, StreamLanguage, StringStream, TreeIndentContext, bidiIsolates, bracketMatching, bracketMatchingHandle, codeFolding, continuedIndent, defaultHighlightStyle, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldAll, foldCode, foldEffect, foldGutter, foldInside, foldKeymap, foldNodeProp, foldService, foldState, foldable, foldedRanges, forceParsing, getIndentUnit, getIndentation, highlightingFor, indentNodeProp, indentOnInput, indentRange, indentService, indentString, indentUnit, language, languageDataProp, matchBrackets, sublanguageProp, syntaxHighlighting, syntaxParserRunning, syntaxTree, syntaxTreeAvailable, toggleFold, unfoldAll, unfoldCode, unfoldEffect };\n","/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        [from, to] = clip(this, from, to);\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    Return the document as a string, using newline characters to\n    separate lines.\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        [from, to] = clip(this, from, to);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        [from, to] = clip(this, from, to);\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        [from, to] = clip(this, from, to);\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done && this.afterBreak) {\n            this.value = \"\";\n            this.afterBreak = false;\n        }\n        else if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\nfunction clip(text, from, to) {\n    from = Math.max(0, Math.min(text.length, from));\n    return [from, Math.max(from, Math.min(text.length, to))];\n}\n\n// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);\n}\nfunction nextClusterBreak(str, pos, includeExtending) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos, includeExtending) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2, includeExtending);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 32 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 8 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 16 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 7 /* RangeFlag.BidiLevelMask */;\n        return level == 7 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 6 /* RangeFlag.GoalColumnOffset */;\n        return value == 16777215 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other, includeAssoc = false) {\n        return this.anchor == other.anchor && this.head == other.head &&\n            (!includeAssoc || !this.empty || this.assoc == other.assoc);\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection. By default, ranges\n    are compared only by position. When `includeAssoc` is true,\n    cursor ranges must also have the same\n    [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.\n    */\n    eq(other, includeAssoc = false) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i], includeAssoc))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 8 /* RangeFlag.AssocBefore */ : 16 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 16777215 /* RangeFlag.NoGoalColumn */) << 6 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 7 : Math.min(6, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 32 /* RangeFlag.Inverted */ | 16 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 8 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n\nNote that `Facet` instances can be used anywhere where\n[`FacetReader`](https://codemirror.net/6/docs/ref/#state.FacetReader) is expected.\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Returns a facet reader for this facet, which can be used to\n    [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.\n    */\n    get reader() { return this; }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds. It should be a type that\n    doesn't include `undefined`, since that is used in\n    [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is\n    removed.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        let selection = tr.startState.facet(allowMultipleSelections) ? tr.newSelection : tr.newSelection.asSingle();\n        new EditorState(conf, tr.newDoc, selection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1\n                    : cursor.point.startSide < 0 ? active.length\n                        : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n    /**\n    Join an array of range sets into a single set.\n    */\n    static join(sets) {\n        if (!sets.length)\n            return RangeSet.empty;\n        let result = sets[sets.length - 1];\n        for (let i = sets.length - 2; i >= 0; i--) {\n            for (let layer = sets[i]; layer != RangeSet.empty; layer = layer.nextLayer)\n                result = new RangeSet(layer.chunkPos, layer.chunk, result, Math.max(layer.maxPoint, result.maxPoint));\n        }\n        return result;\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        // Organize active marks by rank first, then by size\n        while (i < this.activeRank.length && (rank - this.activeRank[i] || to - this.activeTo[i]) > 0)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nAttached to nodes to indicate these should be\n[displayed](https://codemirror.net/docs/ref/#language.syntaxTree)\nin a bidirectional text isolate, so that direction-neutral\ncharacters on their sides don't incorrectly get associated with\nsurrounding text. You'll generally want to set this for nodes\nthat contain arbitrary text, like strings and comments, and for\nnodes that appear _inside_ arbitrary text, like HTML tags. When\nnot given a value, in a grammar declaration, defaults to\n`\"auto\"`.\n*/\nNodeProp.isolate = new NodeProp({ deserialize: value => {\n        if (value && value != \"rtl\" && value != \"ltr\" && value != \"auto\")\n            throw new RangeError(\"Invalid value for isolate: \" + value);\n        return value || \"auto\";\n    } });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this.parent, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        for (let found = false; !found;) {\n            found = cur.type.is(before);\n            if (!cur.nextSibling())\n                return result;\n        }\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traveral. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node.parent, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this._tree, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead, contextAtStart = contextHash;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart, contextAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type, contextAtStart);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end, contextAtStart);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type, contextHash) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead, contextHash);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead, contextHash) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to, contextHash));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead, contextHash, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to) {\n                    let last = overlay.ranges.length - 1;\n                    if (last >= 0 && overlay.ranges[last].to == range.from)\n                        overlay.ranges[last] = { from: overlay.ranges[last].from, to: range.to };\n                    else\n                        overlay.ranges.push(range);\n                }\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    let buffer = node.context.buffer;\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let base = cursor.tree, i = base.children.indexOf(buffer);\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The optional name of the base tag @internal\n    */\n    name, \n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.name = name;\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    toString() {\n        let { name } = this;\n        for (let mod of this.modified)\n            if (mod.name)\n                name = `${mod.name}(${name})`;\n        return name;\n    }\n    static define(nameOrParent, parent) {\n        let name = typeof nameOrParent == \"string\" ? nameOrParent : \"?\";\n        if (nameOrParent instanceof Tag)\n            parent = nameOrParent;\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag(name, [], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier(name) {\n        let mod = new Modifier(name);\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor(name) {\n        this.name = name;\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(base.name, set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter). Often, the higher-level\n[`highlightCode`](#highlight.highlightCode) function is easier to\nuse.\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\n/**\nHighlight the given tree with the given highlighter, calling\n`putText` for every piece of text, either with a set of classes or\nwith the empty string when unstyled, and `putBreak` for every line\nbreak.\n*/\nfunction highlightCode(code, tree, highlighter, putText, putBreak, from = 0, to = code.length) {\n    let pos = from;\n    function writeTo(p, classes) {\n        if (p <= pos)\n            return;\n        for (let text = code.slice(pos, p), i = 0;;) {\n            let nextBreak = text.indexOf(\"\\n\", i);\n            let upto = nextBreak < 0 ? text.length : nextBreak;\n            if (upto > i)\n                putText(text.slice(i, upto), classes);\n            if (nextBreak < 0)\n                break;\n            putBreak();\n            i = nextBreak + 1;\n        }\n        pos = p;\n    }\n    highlightTree(tree, highlighter, (from, to, classes) => {\n        writeTo(from, \"\");\n        writeTo(to, classes);\n    }, from, to);\n    writeTo(to, \"\");\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose [content](#highlight.tags.content) separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(\"definition\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(\"constant\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(\"function\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(\"standard\"),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(\"local\"),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier(\"special\")\n};\nfor (let name in tags) {\n    let val = tags[name];\n    if (val instanceof Tag)\n        val.name = name;\n}\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightCode, highlightTree, styleTags, tagHighlighter, tags };\n","import { Parser, NodeProp, NodeSet, NodeType, DefaultBufferLength, Tree, IterMode } from '@lezer/common';\n\n/**\nA parse stack. These are used internally by the parser to track\nparsing progress. They also provide some properties and methods\nthat external code such as a tokenizer can use to get information\nabout the parse state.\n*/\nclass Stack {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The parse that this stack is part of @internal\n    */\n    p, \n    /**\n    Holds state, input pos, buffer index triplets for all but the\n    top state @internal\n    */\n    stack, \n    /**\n    The current parse state @internal\n    */\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /**\n    @internal\n    */\n    reducePos, \n    /**\n    The input position up to which this stack has parsed.\n    */\n    pos, \n    /**\n    The dynamic score of the stack, including dynamic precedence\n    and error-recovery penalties\n    @internal\n    */\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /**\n    @internal\n    */\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /**\n    @internal\n    */\n    bufferBase, \n    /**\n    @internal\n    */\n    curContext, \n    /**\n    @internal\n    */\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /**\n    @internal\n    */\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /**\n    @internal\n    */\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /**\n    The stack's current [context](#lr.ContextTracker) value, if\n    any. Its type will depend on the context tracker's type\n    parameter, or it will be `null` if there is no context\n    tracker.\n    */\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /**\n    @internal\n    */\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /**\n    @internal\n    */\n    reduce(action) {\n        var _a;\n        let depth = action >> 19 /* Action.ReduceDepthShift */, type = action & 65535 /* Action.ValueMask */;\n        let { parser } = this.p;\n        let lookaheadRecord = this.reducePos < this.pos - 25 /* Lookahead.Margin */;\n        if (lookaheadRecord)\n            this.setLookAhead(this.pos);\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, lookaheadRecord ? 8 : 4, true);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* Action.StayFlag */ ? 6 : 0);\n        let start = base ? this.stack[base - 2] : this.p.ranges[0].from, size = this.reducePos - start;\n        // This is a kludge to try and detect overly deep left-associative\n        // trees, which will not increase the parse stack depth and thus\n        // won't be caught by the regular stack-depth limit check.\n        if (size >= 2000 /* Recover.MinBigReduction */ && !((_a = this.p.parser.nodeSet.types[type]) === null || _a === void 0 ? void 0 : _a.isAnonymous)) {\n            if (start == this.p.lastBigReductionStart) {\n                this.p.bigReductionCount++;\n                this.p.lastBigReductionSize = size;\n            }\n            else if (this.p.lastBigReductionSize < size) {\n                this.p.bigReductionCount = 1;\n                this.p.lastBigReductionStart = start;\n                this.p.lastBigReductionSize = size;\n            }\n        }\n        let bufferBase = base ? this.stack[base - 1] : 0, count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* Action.RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* StateFlag.Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* Action.StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /**\n    @internal\n    */\n    storeNode(term, start, end, size = 4, mustSink = false) {\n        if (term == 0 /* Term.Err */ &&\n            (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n            // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Term.Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!mustSink || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Term.Err */) {\n                let mustMove = false;\n                for (let scan = index; scan > 0 && this.buffer[scan - 2] > end; scan -= 4) {\n                    if (this.buffer[scan - 1] >= 0) {\n                        mustMove = true;\n                        break;\n                    }\n                }\n                if (mustMove)\n                    while (index > 0 && this.buffer[index - 2] > end) {\n                        // Move this record forward\n                        this.buffer[index] = this.buffer[index - 4];\n                        this.buffer[index + 1] = this.buffer[index - 3];\n                        this.buffer[index + 2] = this.buffer[index - 2];\n                        this.buffer[index + 3] = this.buffer[index - 1];\n                        index -= 4;\n                        if (size > 4)\n                            size -= 4;\n                    }\n            }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /**\n    @internal\n    */\n    shift(action, type, start, end) {\n        if (action & 131072 /* Action.GotoFlag */) {\n            this.pushState(action & 65535 /* Action.ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* Action.StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (end > this.pos || type <= parser.maxNode) {\n                this.pos = end;\n                if (!parser.stateFlag(nextState, 1 /* StateFlag.Skipped */))\n                    this.reducePos = end;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(type, start);\n            if (type <= parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = end;\n            this.shiftContext(type, start);\n            if (type <= this.p.parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n    }\n    // Apply an action\n    /**\n    @internal\n    */\n    apply(action, next, nextStart, nextEnd) {\n        if (action & 65536 /* Action.ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextStart, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /**\n    @internal\n    */\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /**\n    @internal\n    */\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /**\n    @internal\n    */\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Term.Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Recover.Delete */;\n    }\n    /**\n    Check if the given term would be able to be shifted (optionally\n    after some reductions) on this stack. This can be useful for\n    external tokenizers that want to make sure they only provide a\n    given token when it applies.\n    */\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* ParseState.DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if (action == 0)\n                return false;\n            if ((action & 65536 /* Action.ReduceFlag */) == 0)\n                return true;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /**\n    @internal\n    */\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* Recover.MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* Recover.MaxNext */ << 1 || this.stack.length >= 120 /* Recover.DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* Recover.DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* Recover.MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* Recover.MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.pushState(s, this.pos);\n            stack.storeNode(0 /* Term.Err */, stack.pos, stack.pos, 4, true);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.reducePos = this.pos;\n            stack.score -= 200 /* Recover.Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /**\n    @internal\n    */\n    forceReduce() {\n        let { parser } = this.p;\n        let reduce = parser.stateSlot(this.state, 5 /* ParseState.ForcedReduce */);\n        if ((reduce & 65536 /* Action.ReduceFlag */) == 0)\n            return false;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* Action.ReduceDepthShift */, term = reduce & 65535 /* Action.ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0) {\n                let backup = this.findForcedReduction();\n                if (backup == null)\n                    return false;\n                reduce = backup;\n            }\n            this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n            this.score -= 100 /* Recover.Reduce */;\n        }\n        this.reducePos = this.pos;\n        this.reduce(reduce);\n        return true;\n    }\n    /**\n    Try to scan through the automaton to find some kind of reduction\n    that can be applied. Used when the regular ForcedReduce field\n    isn't a valid action. @internal\n    */\n    findForcedReduction() {\n        let { parser } = this.p, seen = [];\n        let explore = (state, depth) => {\n            if (seen.includes(state))\n                return;\n            seen.push(state);\n            return parser.allActions(state, (action) => {\n                if (action & (262144 /* Action.StayFlag */ | 131072 /* Action.GotoFlag */)) ;\n                else if (action & 65536 /* Action.ReduceFlag */) {\n                    let rDepth = (action >> 19 /* Action.ReduceDepthShift */) - depth;\n                    if (rDepth > 1) {\n                        let term = action & 65535 /* Action.ValueMask */, target = this.stack.length - rDepth * 3;\n                        if (target >= 0 && parser.getGoto(this.stack[target], term, false) >= 0)\n                            return (rDepth << 19 /* Action.ReduceDepthShift */) | 65536 /* Action.ReduceFlag */ | term;\n                    }\n                }\n                else {\n                    let found = explore(action, depth + 1);\n                    if (found != null)\n                        return found;\n                }\n            });\n        };\n        return explore(this.state, 0);\n    }\n    /**\n    @internal\n    */\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* StateFlag.Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /**\n    Check whether this state has no further actions (assumed to be a direct descendant of the\n    top state, since any other states must be able to continue\n    somehow). @internal\n    */\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* ParseState.Actions */)] == 65535 /* Seq.End */ &&\n            !parser.stateSlot(this.state, 4 /* ParseState.DefaultReduce */);\n    }\n    /**\n    Restart the stack (put it back in its start state). Only safe\n    when this.stack.length == 3 (state is directly below the top\n    state). @internal\n    */\n    restart() {\n        this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /**\n    @internal\n    */\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /**\n    Get the parser used by this stack.\n    */\n    get parser() { return this.p.parser; }\n    /**\n    Test whether a given dialect (by numeric ID, as exported from\n    the terms file) is enabled.\n    */\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /**\n    @internal\n    */\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);\n    }\n    /**\n    @internal\n    */\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.pos, this.pos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /**\n    @internal\n    */\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /**\n    @internal\n    */\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* Action.ValueMask */, depth = action >> 19 /* Action.ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* Encode.BigValCode */) {\n                value = 65535 /* Encode.BigVal */;\n                break;\n            }\n            if (next >= 92 /* Encode.Gap2 */)\n                next--;\n            if (next >= 34 /* Encode.Gap1 */)\n                next--;\n            let digit = next - 32 /* Encode.Start */;\n            if (digit >= 46 /* Encode.Base */) {\n                digit -= 46 /* Encode.Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Encode.Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/**\n[Tokenizers](#lr.ExternalTokenizer) interact with the input\nthrough this interface. It presents the input as a stream of\ncharacters, tracking lookahead and hiding the complexity of\n[ranges](#common.Parser.parse^ranges) from tokenizer code.\n*/\nclass InputStream {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    input, \n    /**\n    @internal\n    */\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /**\n        @internal\n        */\n        this.chunk = \"\";\n        /**\n        @internal\n        */\n        this.chunkOff = 0;\n        /**\n        Backup chunk\n        */\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /**\n        The character code of the next code unit in the input, or -1\n        when the stream is at the end of the input.\n        */\n        this.next = -1;\n        /**\n        @internal\n        */\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    /**\n    @internal\n    */\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /**\n    @internal\n    */\n    clipPos(pos) {\n        if (pos >= this.range.from && pos < this.range.to)\n            return pos;\n        for (let range of this.ranges)\n            if (range.to > pos)\n                return Math.max(pos, range.from);\n        return this.end;\n    }\n    /**\n    Look at a code unit near the stream position. `.peek(0)` equals\n    `.next`, `.peek(-1)` gives you the previous character, and so\n    on.\n    \n    Note that looking around during tokenizing creates dependencies\n    on potentially far-away content, which may reduce the\n    effectiveness incremental parsing—when looking forward—or even\n    cause invalid reparses when looking backward more than 25 code\n    units, since the library does not track lookbehind.\n    */\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /**\n    Accept a token. By default, the end of the token is set to the\n    current stream position, but you can pass an offset (relative to\n    the stream position) to change that.\n    */\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    /**\n    Accept a token ending at a specific given position.\n    */\n    acceptTokenTo(token, endPos) {\n        this.token.value = token;\n        this.token.end = endPos;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /**\n    Move the stream forward N (defaults to 1) code units. Returns\n    the new value of [`next`](#lr.InputStream.next).\n    */\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /**\n    @internal\n    */\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /**\n    @internal\n    */\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)\n            return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/**\n@internal\n*/\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) {\n        let { parser } = stack.p;\n        readToken(this.data, input, stack, this.id, parser.data, parser.tokenPrecTable);\n    }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n@hide\n*/\nclass LocalTokenGroup {\n    constructor(data, precTable, elseToken) {\n        this.precTable = precTable;\n        this.elseToken = elseToken;\n        this.data = typeof data == \"string\" ? decodeArray(data) : data;\n    }\n    token(input, stack) {\n        let start = input.pos, skipped = 0;\n        for (;;) {\n            let atEof = input.next < 0, nextPos = input.resolveOffset(1, 1);\n            readToken(this.data, input, stack, 0, this.data, this.precTable);\n            if (input.token.value > -1)\n                break;\n            if (this.elseToken == null)\n                return;\n            if (!atEof)\n                skipped++;\n            if (nextPos == null)\n                break;\n            input.reset(nextPos, input.token);\n        }\n        if (skipped) {\n            input.reset(start, input.token);\n            input.acceptToken(this.elseToken, skipped);\n        }\n    }\n}\nLocalTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n`@external tokens` declarations in the grammar should resolve to\nan instance of this class.\n*/\nclass ExternalTokenizer {\n    /**\n    Create a tokenizer. The first argument is the function that,\n    given an input stream, scans for the types of tokens it\n    recognizes at the stream's position, and calls\n    [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    one.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `input.token` when it matches a token.\nfunction readToken(data, input, stack, group, precTable, precOffset) {\n    let state = 0, groupMask = 1 << group, { dialect } = stack.p.parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term ||\n                        overrides(term, input.token.value, precTable, precOffset))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        let next = input.next, low = 0, high = data[state + 2];\n        // Special case for EOF\n        if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */) {\n            state = data[accEnd + high * 3 - 1];\n            continue scan;\n        }\n        // Do a binary search on the state's edges\n        for (; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1] || 0x10000;\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* Seq.End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction overrides(token, prev, tableData, tableOffset) {\n    let iPrev = findOffset(tableData, tableOffset, prev);\n    return iPrev < 0 || findOffset(tableData, tableOffset, token) < iPrev;\n}\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(IterMode.IncludeAnonymous);\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Lookahead.Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Lookahead.Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* ParseState.TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Lookahead.Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Term.Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Term.Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        let start = this.stream.clipPos(stack.pos);\n        tokenizer.token(this.stream.reset(start, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize.Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Term.Err */;\n            token.end = this.stream.clipPos(start + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */);; i += 3) {\n                if (data[i] == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Seq.Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.lastBigReductionStart = -1;\n        this.lastBigReductionSize = 0;\n        this.bigReductionCount = 0;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // If a large amount of reductions happened with the same start\n        // position, force the stack out of that production in order to\n        // avoid creating a tree too deep to recurse through.\n        // (This is an ugly kludge, because unfortunately there is no\n        // straightforward, cheap way to check for this happening, due to\n        // the history of reductions only being available in an\n        // expensive-to-access format in the stack buffers.)\n        if (this.bigReductionCount > 300 /* Rec.MaxLeftAssociativeReductionCount */ && stacks.length == 1) {\n            let [s] = stacks;\n            while (s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart) { }\n            this.bigReductionCount = this.lastBigReductionSize = 0;\n        }\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Finish with \" + this.stackID(finished));\n                return this.stackToTree(finished);\n            }\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Rec.Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Force-finish \" + this.stackID(finished));\n                return this.stackToTree(finished.forceAll());\n            }\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* Rec.MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* Rec.MinBufferLengthPrune */ && other.buffer.length > 500 /* Rec.MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n            if (newStacks.length > 12 /* Rec.MaxStackCount */)\n                newStacks.splice(12 /* Rec.MaxStackCount */, newStacks.length - 12 /* Rec.MaxStackCount */);\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* ParseState.DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* Action.ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 8400 /* Rec.CutDepth */) {\n            while (stack.stack.length > 6000 /* Rec.CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            let main = this.tokens.mainToken;\n            localStack.apply(action, term, main ? main.start : localStack.pos, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* Action.ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* Action.ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* Rec.ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Term.Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/**\nContext trackers are used to track stateful context (such as\nindentation in the Python grammar, or parent elements in the XML\ngrammar) needed by external tokenizers. You declare them in a\ngrammar file as `@context exportName from \"module\"`.\n\nContext values should be immutable, and can be updated (replaced)\non shift or reduce actions.\n\nThe export used in a `@context` declaration should be of this\ntype.\n*/\nclass ContextTracker {\n    /**\n    Define a context tracker.\n    */\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/**\nHolds the parse tables for a given grammar, as generated by\n`lezer-generator`, and provides [methods](#common.Parser) to parse\ncontent with.\n*/\nclass LRParser extends Parser {\n    /**\n    @internal\n    */\n    constructor(spec) {\n        super();\n        /**\n        @internal\n        */\n        this.wrappers = [];\n        if (spec.version != 14 /* File.Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* File.Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                if (typeof prop == \"string\")\n                    prop = NodeProp[prop];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        if (spec.propSources)\n            this.nodeSet = this.nodeSet.extend(...spec.propSources);\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specializerSpecs = spec.specialized || [];\n        this.specialized = new Uint16Array(this.specializerSpecs.length);\n        for (let i = 0; i < this.specializerSpecs.length; i++)\n            this.specialized[i] = this.specializerSpecs[i].term;\n        this.specializers = this.specializerSpecs.map(getSpecializer);\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /**\n    Get a goto table entry @internal\n    */\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /**\n    Check if this state has an action for a given terminal @internal\n    */\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Seq.Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Term.Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /**\n    @internal\n    */\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* ParseState.Size */) + slot];\n    }\n    /**\n    @internal\n    */\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* ParseState.Flags */) & flag) > 0;\n    }\n    /**\n    @internal\n    */\n    validAction(state, action) {\n        return !!this.allActions(state, a => a == action ? true : null);\n    }\n    /**\n    @internal\n    */\n    allActions(state, action) {\n        let deflt = this.stateSlot(state, 4 /* ParseState.DefaultReduce */);\n        let result = deflt ? action(deflt) : undefined;\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */); result == null; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            result = action(pair(this.data, i + 1));\n        }\n        return result;\n    }\n    /**\n    Get the states that can follow this one through shift actions or\n    goto jumps. @internal\n    */\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* Action.ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /**\n    Configure the parser. Returns a new parser instance that has the\n    given settings modified. Settings not provided in `config` are\n    kept from the original parser.\n    */\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.specializers) {\n            copy.specializers = this.specializers.slice();\n            copy.specializerSpecs = this.specializerSpecs.map((s, i) => {\n                let found = config.specializers.find(r => r.from == s.external);\n                if (!found)\n                    return s;\n                let spec = Object.assign(Object.assign({}, s), { external: found.to });\n                copy.specializers[i] = getSpecializer(spec);\n                return spec;\n            });\n        }\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /**\n    Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n    are registered for this parser.\n    */\n    hasWrappers() {\n        return this.wrappers.length > 0;\n    }\n    /**\n    Returns the name associated with a given term. This will only\n    work for all terms when the parser was generated with the\n    `--names` option. By default, only the names of tagged terms are\n    stored.\n    */\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /**\n    The eof term id is always allocated directly after the node\n    types. @internal\n    */\n    get eofTerm() { return this.maxNode + 1; }\n    /**\n    The type of top node produced by the parser.\n    */\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /**\n    @internal\n    */\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /**\n    @internal\n    */\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* Seq.End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /**\n    Used by the output of the parser generator. Not available to\n    user code. @hide\n    */\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* StateFlag.Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\nfunction getSpecializer(spec) {\n    if (spec.external) {\n        let mask = spec.extend ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */;\n        return (value, stack) => (spec.external(value, stack) << 1) | mask;\n    }\n    return spec.get;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, LocalTokenGroup, Stack };\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push[...newElements]` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events.get(lineIndex)[1].start);\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = Object.assign({}, events[definition][1].end);\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n};\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code);\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  while (++index < events.length) {\n    const token = events[index][1];\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      events.splice(index + 1, token.type === \"labelImage\" ? 4 : 2);\n      token.type = \"data\";\n      index++;\n    }\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  const label = {\n    type: \"label\",\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  };\n  const text = {\n    type: \"labelText\",\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = Object.assign({}, events[open][1].end);\n          const end = Object.assign({}, events[index][1].start);\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: Object.assign({}, events[open][1].end)\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: Object.assign({}, events[index][1].start),\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          };\n          events[open][1].end = Object.assign({}, openingSequence.start);\n          events[index][1].start = Object.assign({}, closingSequence.end);\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlpha, asciiAlphanumeric, markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push([...events]);\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      events.push(...slice);\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(root, modules, options) {\n    let set = root[SET], nonce = options && options.nonce\n    if (!set) set = new StyleSet(root, nonce)\n    else if (nonce) set.setNonce(nonce)\n    set.mount(Array.isArray(modules) ? modules : [modules], root)\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root, nonce) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) return root[SET] = adopted\n      this.sheet = new win.CSSStyleSheet\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      if (nonce) this.styleTag.setAttribute(\"nonce\", nonce)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules, root) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (sheet) {\n      if (root.adoptedStyleSheets.indexOf(this.sheet) < 0)\n        root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n    } else {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n      let target = root.head || root\n      if (this.styleTag.parentNode != target)\n        target.insertBefore(this.styleTag, target.firstChild)\n    }\n  }\n\n  setNonce(nonce) {\n    if (this.styleTag && this.styleTag.getAttribute(\"nonce\") != nonce)\n      this.styleTag.setAttribute(\"nonce\", nonce)\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n"],"names":["command","f","option","state","dispatch","readOnly","tr","update","toggleLineComment","changeLineComment","toggleBlockComment","changeBlockComment","toggleBlockCommentByLine","o","s","ranges","r","selection","fromLine","doc","lineAt","from","toLine","to","last","length","push","exec","text","selectedLineRanges","getConfig","pos","data","languageDataAt","SearchMargin","tokens","map","block","every","c","comments","i","open","close","startText","endText","textBefore","sliceDoc","textAfter","spaceBefore","spaceAfter","beforeOff","slice","margin","startSpace","endSpace","endOff","test","charAt","findBlockComment","changes","range","insert","some","comment","token","lines","prevLine","startI","minIndent","line","indent","empty","single","l","changeSet","fromHistory","define","isolateHistory","invertedEffects","historyConfig","combine","configs","minDepth","newGroupDelay","joinToEvent","_t","isAdjacent","Math","max","min","a","b","adj","historyField_","create","HistoryState","config","facet","fromHist","annotation","item","HistEvent","fromTransaction","side","other","undone","done","updateBranch","addSelection","startState","rest","isolate","addToHistory","addMapping","desc","event","time","userEvent","addChanges","toJSON","value","e","fromJSON","json","cmd","historyState","field","pop","undo","redo","undoSelection","redoSelection","constructor","effects","mapped","startSelection","selectionsAfter","this","setSelAfter","after","_a","_b","_c","none","invert","result","concat","undefined","selections","branch","maxLen","newEvent","start","newBranch","conc","MaxSelectionsPerEvent","lastEvent","sels","eq","popSelection","addMappingToBranch","mapping","mapEvent","extraSelections","mappedChanges","before","mapDesc","fullMapping","composeDesc","mapEffects","joinableUserEvent","prevTime","prevUserEvent","iterChangedRanges","t","_f","compose","filter","onlySelection","annotations","of","scrollIntoView","key","run","preventDefault","mac","linux","updateSel","sel","by","mainIndex","setSel","moveSel","how","rangeEnd","forward","cursor","cursorByChar","view","moveByChar","ltrAtCursor","textDirectionAt","main","head","LTR","cursorCharLeft","cursorCharRight","cursorByGroup","moveByGroup","Intl","Segmenter","interestingNode","node","bracketProp","type","prop","len","firstChild","moveBySyntax","match","newPos","resolveInner","closedBy","openedBy","at","next","childAfter","childBefore","matched","end","cursorByLine","moved","moveVertically","moveToLineBoundary","cursorLineUp","cursorLineDown","pageInfo","height","selfScroll","scrollDOM","clientHeight","scrollHeight","marginTop","marginBottom","source","scrollMargins","margins","top","bottom","dom","ownerDocument","defaultView","window","innerHeight","defaultLineHeight","cursorByPage","effect","page","startPos","coordsAtPos","scrollRect","getBoundingClientRect","scrollTop","scrollBottom","y","yMargin","cursorPageUp","cursorPageDown","moveByLineBoundary","lineBlockAt","space","toMatchingBracket","extend","found","matching","anchor","extendSel","target","goalColumn","bidiLevel","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","deleteBy","changeByRange","towards","skipAtomic","announce","phrase","atomicRanges","between","deleteByChar","byIndentUnit","targetPos","drop","tabSize","number","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","charCategorizer","cat","nextChar","nextCat","deleteGroupBackward","selectedLineBlocks","blocks","upto","startLine","endLine","prev","moveLine","nextLine","size","lineBreak","copyLine","insertNewlineAndIndent","newlineAndIndent","atEof","explode","context","indexOf","name","isBetweenBrackets","cx","simulateBreak","simulateDoubleBreak","lineIndent","changeBySelectedLine","atLine","mapPos","indentMore","indentLess","col","keep","charCodeAt","shift","cur","tree","stack","resolveStack","stackBefore","updated","Object","overrideIndentation","norm","dist","lineWrapping","assoc","documentTop","setTabFocusMode","lineStart","lineEnd","append","indentWithTab","crelt","elt","arguments","document","createElement","nodeType","Array","isArray","prototype","hasOwnProperty","call","setAttribute","add","child","appendChild","createTextNode","RangeError","basicNormalize","String","normalize","x","SearchCursor","query","matches","buffer","bufferPos","iter","iterRange","bufferStart","peek","nextOverlapping","str","code","index","splice","Symbol","iterator","baseFlags","unicode","RegExpCursor","options","curLine","MultilineRegExpCursor","re","RegExp","ignoreCase","curLineStart","matchPos","toCharEnd","getLine","skip","off","lastIndex","flattened","WeakMap","FlattenedDoc","get","cached","flat","sliceString","set","cachedFrom","chunkEnd","createLineDialog","input","class","go","sign","ln","cl","percent","pc","round","docLine","dialogEffect","focus","onkeydown","keyCode","onsubmit","dialogField","is","provide","val","baseTheme$1","baseTheme","padding","fontSize","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","wholeWords","highlightConfig","matchDeco","mark","mainMatchDeco","insideWordBoundaries","check","Word","matchHighlighter","fromClass","decorations","getDeco","selectionSet","docChanged","viewportChanged","conf","word","wordAt","insideWord","deco","part","visibleRanges","v","defaultTheme","backgroundColor","searchConfigFacet","caseSensitive","literal","regexp","wholeWord","createPanel","SearchPanel","scrollToMatch","SearchQuery","search","replace","valid","validRegExp","unquoted","unquote","_","ch","RegExpQuery","StringQuery","getCursor","st","regexpCursor","stringCursor","QueryType","spec","toLowerCase","categorizer","buf","bufPos","charBefore","charAfter","super","nextMatch","curFrom","curTo","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","limit","highlight","_from","_to","m","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","panel","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","builder","selected","finish","searchCommand","openSearchPanel","findNext","announceMatch","selectSearchInput","findPrevious","selectMatches","replaceNext","replacement","toText","replaceAll","announceText","fallback","_d","_e","selText","getSearchInput","querySelector","root","activeElement","select","searchInput","appendConfig","searchExtensions","closeSearchPanel","contains","searchKeymap","scope","newSel","selectWord","searchedText","fullWord","cycled","findNextOccurrence","addRange","button","onclick","content","commit","bind","searchField","placeholder","form","onchange","onkeyup","replaceField","caseField","checked","reField","wordField","keydown","shiftKey","transactions","setQuery","mount","AnnounceMargin","Break","position","right","border","font","marginRight","whiteSpace","low","SelectedDiagnostic","diagnostic","LintState","diagnostics","init","markedDiagnostics","diagnosticFilter","lintConfig","markerFilter","d","widget","DiagnosticWidget","attributes","severity","markClass","findDiagnostic","hideTooltip","tooltip","hideOn","setDiagnosticsEffect","touchesRange","maybeEnableLint","lintState","lintExtensions","movePanelSelection","selPos","autoPanel","LintPanel","activeMark","lintTooltip","stackStart","stackEnd","tooltipFilter","above","diagnosticsTooltip","renderDiagnostic","closeLintPanel","lintKeymap","assign","sources","delay","needsRefresh","u","assignKeys","actions","assigned","inPanel","keys","renderMessage","message","action","fired","click","apply","keyIndex","nameElt","onmousedown","toDOM","PanelItem","id","floor","random","toString","items","list","tabIndex","role","moveSelection","selectedIndex","toUpperCase","needsSync","newSelectedItem","_start","_end","j","hasAttribute","removeAttribute","requestMeasure","read","write","scaleY","offsetHeight","sync","domPos","rm","nextSibling","remove","parentNode","insertBefore","svg","attrs","encodeURIComponent","underline","color","marginLeft","display","borderLeft","borderRadius","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","background","compute","basicSetup","crosshairCursor","initCrosshairCursor","keymaps","closeBracketsKeymap","defaultKeymap","historyKeymap","foldKeymap","completionKeymap","extensions","lineNumbers","highlightActiveLineGutter","highlightSpecialChars","history","domEventHandlers","beforeinput","inputType","foldGutter","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","syntaxHighlighting","bracketMatching","closeBrackets","autocompletion","rectangularSelection","highlightActiveLine","highlightSelectionMatches","ext","repeat","Boolean","chalky","coral","cyan","invalid","ivory","stone","malibu","sage","whiskey","violet","darkBackground","highlightBackground","tooltipBackground","oneDarkTheme","theme","caretColor","borderLeftColor","borderTop","outline","borderTopColor","dark","oneDarkHighlightStyle","tag","keyword","deleted","character","propertyName","macroName","function","variableName","labelName","constant","standard","definition","separator","typeName","className","changed","modifier","self","namespace","operator","operatorKeyword","url","escape","link","special","string","meta","strong","fontWeight","emphasis","fontStyle","strikethrough","heading","atom","bool","processingInstruction","inserted","oneDark","defaultLightThemeOption","External","emptyExtensions","useCodeMirror","props","onChange","onStatistics","onCreateEditor","onUpdate","autoFocus","minHeight","width","minWidth","maxWidth","placeholderStr","editable","defaultIndentWithTab","defaultBasicSetup","initialState","container","setContainer","useState","setView","setState","defaultThemeOption","updateListener","vu","_value","lineCount","selectionAsSingle","asSingle","selectionCode","selectedText","getStatistics","defaultExtensions","optios","getExtensions","unshift","getDefaultExtensions","useEffect","stateCurrent","fields","viewCurrent","parent","destroy","reconfigure","currentValue","_excluded","ReactCodeMirror","forwardRef","ref","editor","useRef","current","useImperativeHandle","Error","defaultClassNames","displayName","hasOwn","toStr","defineProperty","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","configurable","newValue","writable","getProperty","module","exports","src","copy","copyIsArray","clone","deep","AnchorLink","_react","_interopRequireDefault","require","_gatsby","_propTypes","_utils","__esModule","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","_ref","title","children","_ref$stripHash","stripHash","_ref$gatsbyLinkProps","gatsbyLinkProps","onAnchorLinkClick","onClickHandler","handleStrippedLinkClick","handleLinkClick","linkProps","stripHashedLocation","onClick","Link","propTypes","isRequired","func","_AnchorLink","createTheme","settings","styles","themeOptions","baseStyle","foreground","fontFamily","gutterBackground","gutterForeground","gutterBorder","borderRightColor","caret","activeLineGutterStyle","gutterActiveForeground","lineHighlight","selectionMatch","themeExtension","highlightStyle","PalenightTheme","definitionKeyword","attributeName","attributeValue","brace","null","angleBracket","tagName","arrow","css","file","folderIcon","html","js","markdown","npm","python","FileStructureDisplay","_jsxs","_jsx","ParsedFileStructureDisplay","_ref2","folder","JSON","parse","cn","FolderRenderer","FileRenderer","_ref4","_ref5","setOpen","toggleOpen","useCallback","p","clsx","Caret","contents","newline","bracketed","Set","isLineBreak","isHex","newlines","acceptToken","flags","cx_Bracketed","canShift","spaces","advance","contextual","indentation","depth","chars","cx_DoubleQuote","cx_Long","cx_Raw","cx_Format","Context","hash","topIndent","stringFlags","Map","term","trackIndent","reduce","has","countIndent","legacyPrint","fromCharCode","strings","quote","long","escapes","format","escaped","skipEscape","pythonHighlighting","controlKeyword","import","moduleKeyword","None","VariableName","PropertyName","Comment","lineComment","Number","FormatString","Escape","UpdateOp","updateOperator","arithmeticOperator","BitOp","bitwiseOperator","CompareOp","compareOperator","AssignOp","definitionOperator","Ellipsis","punctuation","At","paren","squareBracket","derefOperator","spec_identifier","__proto__","await","or","and","in","not","if","else","lambda","yield","async","for","True","False","del","pass","break","continue","return","raise","as","global","nonlocal","assert","elif","while","try","except","finally","with","def","case","parser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","specialized","tokenPrec","cache","ScopeNodes","defID","outer","getChild","gatherCompletions","FunctionDefinition","ClassDefinition","ForStatement","ImportStatement","_node","isFrom","AssignStatement","ParamList","CapturePattern","AsPattern","getScope","completions","label","IncludeAnonymous","iterate","gather","Identifier","dontComplete","localCompletionSource","inner","isWord","explicit","validFor","globals","n","snippets","detail","globalCompletion","innerBody","baseIndentFor","unit","indentBody","base","pythonLanguage","configure","Body","IfStatement","baseIndent","TryStatement","closing","Script","languageData","brackets","stringPrefixes","commentTokens","selfClosers","area","br","embed","frame","hr","img","keygen","param","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","rp","rt","tbody","td","tfoot","th","closeOnOpen","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","offset","question","bang","ElementContext","startTagTerms","elementContext","reuse","strict","tagStart","dialectEnabled","commentContent","dashes","endTag","selfClosing","inForeignElement","contentTokenizer","textToken","endToken","lastState","matchedLen","scriptTokens","styleTokens","textareaTokens","htmlHighlighting","TagName","AttributeName","Is","blockComment","ProcessingInst","DoctypeDecl","documentMeta","dialects","noMatch","getAttrs","openTag","att","getChildren","findTagName","tagNameNode","maybeNest","tags","configureNesting","script","style","textarea","attr","lastChild","overlay","nameNode","isError","isAlpha","isDigit","identifiers","inside","descendant","includes","unitToken","cssHighlighting","NamespaceName","KeyframeName","KeyframeRangeName","ClassName","PseudoClassName","IdName","NumberLiteral","KeywordQuery","UnaryQueryOp","Callee","Unit","MatchOp","logicOperator","BinOp","Important","ColorLiteral","spec_callee","lang","domain","selector","spec_AtKeyword","only","_properties","properties","body","names","seen","sort","pseudoClasses","values","atRules","variable","VariablesByNode","declSelector","astTop","isTop","variableNames","isVariable","known","matchContext","defineCSSCompletionSource","isDash","resolve","callee","isVarArg","cssCompletionSource","cssLanguage","Declaration","wordChars","autocomplete","Targets","Charsets","Methods","Encs","Bool","S","Tags","href","ping","media","hreflang","abbr","alt","coords","shape","audio","mediagroup","crossorigin","preload","autoplay","loop","controls","bdi","bdo","cite","formaction","autofocus","disabled","formenctype","formmethod","formnovalidate","formtarget","canvas","caption","center","span","colgroup","icon","radiogroup","datagrid","multiple","datalist","datetime","details","dfn","em","eventsource","figcaption","figure","enctype","method","novalidate","manifest","iframe","srcdoc","sandbox","seamless","ismap","usemap","dirname","maxlength","pattern","step","accept","readonly","required","ins","kbd","challenge","keytype","legend","sizes","charset","meter","high","optimum","noscript","typemustmatch","reversed","output","progress","q","ruby","samp","defer","slot","small","scoped","sub","summary","sup","colspan","rowspan","headers","template","rows","cols","wrap","default","kind","srclang","var","video","poster","muted","GlobalAttrs","accesskey","contenteditable","contextmenu","draggable","dropzone","hidden","inert","itemid","itemprop","itemref","itemscope","itemtype","spellcheck","autocorrect","autocapitalize","tabindex","translate","rel","split","eventAttributes","Schema","extraTags","extraAttrs","globalAttrs","allTags","globalAttrNames","elementName","findParentElement","allowedChildren","schema","parentInfo","openTags","completeTag","boost","completeCloseTag","htmlCompletionFor","around","scan","info","localAttrs","attrName","completeAttrName","quoteStart","quoteEnd","completeAttrValue","level","completeStartTag","htmlCompletionSourceWith","extraGlobalAttributes","jsonParser","defaultNesting","defaultAttrs","htmlPlain","Element","column","Document","endElt","first","htmlLanguage","autoCloseTags","inputHandler","insertTransaction","composing","isActiveAt","closeTags","didType","TableOfContents","ReactMarkdown","remarkPlugins","gfm","components","TOCInlineRenderer","location","useLocation","anchorHref","visible","setVisible","useLayoutEffect","console","log","observer","IntersectionObserver","_ref3","entry","isIntersecting","observe","unobserve","error","pathname","paddingLeft","listStyle","_ref6","Video","frameBorder","allow","allowFullScreen","_node$data","inline","minimized","setMinimized","substring","_Fragment","dialect","matchClosingTags","selfClosingTags","nestedLanguages","nestedAttributes","support","javascript","jsx","typescript","xmlns","cy","fill","CodeMirror","convertToHashLinkID","join","StandardHeader","HeaderLevel","MarkdownRenderer","CodeRenderer","headerContent","headerHashLink","_ref7","_ref8","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","TypeError","lineno","updatePosition","lastIndexOf","Position","whitespace","errorsList","msg","err","reason","filename","silent","rules","declaration","ret","property","decl","decls","declarations","__importDefault","mod","styleObject","inline_style_parser_1","hasIterator","React","Expand","defaultProps","_extends","CompletionContext","abortListeners","abortOnDocChange","tokenBefore","types","matchBefore","expr","ensureAnchor","aborted","addEventListener","listener","onDocChange","toSet","words","completeFromList","prefixMatch","ifNotIn","nodes","Option","completion","score","addStart","addEnd","pickedCompletion","SourceCache","asSource","startCompletionEffect","closeCompletionEffect","FuzzyMatcher","folded","any","precise","byWord","char","upper","astral","firstSize","direct","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","prevType","positions","StrictMatcher","completionConfig","activateOnTyping","activateOnCompletion","activateOnTypingDelay","selectOnOpen","override","closeOnBlur","maxRenderedOptions","tooltipClass","optionClass","aboveCursor","icons","addToOptions","positionInfo","defaultPositionInfo","filterStrict","compareCompletions","localeCompare","interactionDelay","updateSyncTime","joinClass","rtl","textDirection","RTL","narrow","spaceLeft","spaceRight","infoWidth","infoHeight","spaceBelow","offsetWidth","rangeAroundSelected","total","CompletionTooltip","stateField","applyCompletion","infoDestroy","placeInfoReq","measureInfo","placeInfo","currentClass","cState","optionContent","render","classList","cls","_s","_v","labelElt","displayLabel","detailElt","textContent","updateTooltipClass","nodeName","relatedTarget","contentDOM","showOptions","createListBox","prevState","toggle","positioned","updateSelectedOption","destroyInfo","infoResult","then","addInfoPane","catch","opt","element","listRect","infoRect","selRect","win","innerWidth","cssText","curSection","completionTooltip","CompletionDialog","timestamp","setSelected","makeAttrs","build","active","sections","addOption","hasResult","getMatch","matcher","sectionOrder","cmp","rank","compare","sortOptions","selectedValue","createTooltip","Date","now","CompletionState","find","ActiveSource","iA","iB","endA","endB","sameResults","setSelectedEffect","baseAttrs","noAttrs","getUpdateType","isUserEvent","typing","explicitPos","touches","updateFor","setActiveEffect","ActiveResult","checkValid","completionState","contentAttributes","fromOff","toOff","insertCompletionText","moveCompletionSelection","startCompletion","RunningQuery","updates","completionPlugin","debounceUpdate","running","debounceAccept","pendingStart","startQuery","doesReset","handler","clearTimeout","setTimeout","startUpdate","pending","Promise","scheduleAccept","eventHandlers","blur","dialog","compositionstart","compositionend","windows","navigator","platform","commitCharacters","highest","ctrlKey","altKey","metaKey","commitChars","overflow","maxWidth_fallback","lineHeight","overflowX","textOverflow","textAlign","boxSizing","verticalAlign","paddingRight","FieldPos","FieldRange","TrackDel","Snippet","fieldPositions","instantiate","lineObj","tabs","seq","rawName","fieldMarker","ignoreEvent","fieldRange","ActiveSnippet","selectionInsideField","setActive","moveToField","snippetState","fieldSelection","snippet","addSnippetKeymap","snippetPointerHandler","moveField","defaultSnippetKeymap","snippetKeymap","maps","snippetCompletion","mousedown","posAtCoords","clientX","clientY","defaults","closeBracketEffect","TrackAfter","closedBracket","startSide","endSide","bracketState","definedClosing","android","userAgent","compositionStarted","bracket","tok","closed","handleSame","handleOpen","closedBracketAt","handleClose","insertBracket","dont","prevChar","closeBefore","_open","allowTriple","nodeStart","canStartStringAt","quoteToken","prefixes","maxPrefix","quotePos","probablyInString","charCat","prefix","completionKeymapExt","computeN","trackNewline","insertSemicolon","noSemicolon","operatorToken","mayPostfix","identifierChar","back","jsHighlight","TemplateString","BooleanLiteral","Star","VariableDefinition","Label","PrivatePropertyName","PropertyDefinition","PrivatePropertyDefinition","BlockComment","ArithOp","LogicOp","Equals","Arrow","TypeName","TypeDefinition","JSXAttributeValue","JSXText","export","extends","true","false","void","typeof","new","delete","public","private","protected","instanceof","satisfies","const","keyof","unique","infer","abstract","implements","let","using","interface","enum","declare","do","switch","throw","debugger","spec_word","static","accessor","spec_LessThan","ts","dynamicPrecedences","typescriptSnippets","functionContext","FunctionDeclaration","ClassDeclaration","ClassExpression","EnumDeclaration","TypeAliasDeclaration","NamespaceDeclaration","javascriptLanguage","LabeledStatement","SwitchBody","isCase","Block","ArrowFunction","JSXElement","JSXEscape","jsxSublanguage","typescriptLanguage","jsxLanguage","tsxLanguage","kwCompletion","keywords","typescriptKeywords","defaultInsert","findOpenTag","languageDataProp","defineLanguageFacet","baseData","sublanguageProp","Language","extraExtensions","syntaxTree","extension","language","topNodeAt","innerNode","sublang","findRegions","allowsNesting","explore","mounted","topLang","topNode","enter","ExcludeBuffers","LRLanguage","hasWrappers","DocInput","cursorPos","syncTo","chunk","lineChunks","stringStart","currentContext","ParseContext","fragments","treeLen","viewport","skipped","scheduleOn","tempSkipped","startParse","work","until","isDone","takeTree","withContext","endTime","stoppedAt","stopAt","withoutTempSkipped","addTree","parsedPos","cutFragments","newState","fromA","toA","fromB","toB","applyChanges","updateViewport","startLen","reset","skipUntilInView","getSkippingParser","createParse","all","frags","LanguageState","newCx","vpTo","parseState","requestIdle","callback","timeout","requestIdleCallback","idle","cancelIdleCallback","isInputPending","scheduling","parseWorker","working","workScheduled","chunkBudget","scheduleWork","hasFocus","checkAsyncSchedule","deadline","timeRemaining","viewportFirst","isWorking","languages","enables","LanguageSupport","indentService","indentUnit","stringify","getIndentUnit","indentString","getIndentation","IndentContext","service","ast","enterUnfinishedNodesBefore","indentFor","syntaxIndentation","bias","textAfterPos","countColumn","overriden","simulatedBreak","indentNodeProp","strategy","indentStrategy","TreeIndentContext","delimitedStrategy","ignoreClosed","atBreak","isParent","delimitedIndent","align","units","closedAt","aligned","openToken","sim","openLine","isSkipped","bracketedAligned","flatIndent","continuedIndent","matchExcept","DontIndentBeyond","transactionFilter","newDoc","newSelection","sequential","foldService","foldNodeProp","foldInside","isUnfinished","foldable","syntaxFolding","mapRange","foldEffect","unfoldEffect","selectedLines","foldState","foldExists","preparePlaceholder","foldConfig","PreparedFoldWidget","foldWidget","filterFrom","filterTo","onSelection","findFold","maybeEnable","codeFolding","announceFold","fold","lineFrom","lineTo","defaultConfig","placeholderDOM","placeholderText","widgetToDOM","prepared","posAtDOM","foldGutterDefaults","openText","closedText","markerDOM","foldingChanged","FoldMarker","fullConfig","canFold","canUnfold","markers","buildMarkers","viewportLineBlocks","plugin","initialSpacer","HighlightStyle","specs","modSpec","newName","scopeOpt","themeType","highlighterFacet","fallbackHighlighter","getHighlighters","highlighter","treeHighlighter","styleModule","darkTheme","TreeHighlighter","markCache","buildDeco","decoratedTo","highlighters","styleChange","decoratedToMapped","defaultHighlightStyle","contentSeparator","local","DefaultScanDist","DefaultBrackets","bracketMatchingConfig","afterCursor","maxScanDistance","renderMatch","defaultRenderMatch","matchingMark","nonmatchingMark","bracketMatchingUnique","matchBrackets","bracketMatchingHandle","matchingNodes","byProp","findHandle","hasHandle","handle","matchMarkedBrackets","tokenType","startCh","startToken","distance","basePos","matchPlainBrackets","_state","_pos","firstToken","endHandle","prevSibling","noTokens","typeArray","warned","byTag","defaultTable","legacyName","createTokenType","warnForPart","warn","extra","tagStr","tags$1","Text","lineInner","clip","parts","decompose","TextNode","scanIdentical","RawTextCursor","PartialTextCursor","iterLines","LineCursor","flatten","TextLeaf","textLength","isLine","Line","sliceText","joined","appendText","mid","newLen","lineSep","childOpen","totalLines","eA","eB","chA","chB","maxChunk","minChunk","chunked","currentLines","currentLen","currentChunk","flush","offsets","nextInner","offsetValue","afterBreak","parseInt","isExtendingChar","isRegionalIndicator","ZWJ","findClusterBreak","includeExtending","nextClusterBreak","prevClusterBreak","surrogateLow","surrogateHigh","codePointAt","codePointSize","countBefore","code0","code1","fromCodePoint","DefaultSplit","MapMode","ChangeDesc","newLength","iterGaps","posA","posB","individual","iterChanges","invertedDesc","composeSets","mapSet","mode","Simple","TrackBefore","ChangeSet","_toB","resultSections","resultInserted","filteredSections","SectionIter","addSection","addInsert","filtered","force","process","insText","insLen","createSet","forceJoin","setA","setB","mkSet","piece","len2","sectionLen","insB","textBit","forward2","SelectionRange","change","EditorSelection","abs","includeAssoc","replaceRange","which","normalized","checkSelection","docLength","nextID","Facet","compareInput","isStatic","reader","sameArray","FacetProvider","deps","dependencies","dynamicSlot","addresses","getter","idx","multi","depDoc","depSel","depAddrs","dep","ensureAll","newVal","compareArray","oldState","oldAddr","oldVal","getAddr","StateField","addrs","addr","ensureAddr","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","depChanged","oldProviders","facets","oldValue","initField","createF","updateF","compareF","provides","Prec_","prec","PrecExtension","Prec","lowest","Compartment","CompartmentInstance","compartment","compartments","Configuration","dynamicSlots","staticValues","statusTemplate","staticFacet","newCompartments","oldFacets","status","computeSlot","lineSeparator","changeFilter","transactionExtender","Annotation","AnnotationType","StateEffectType","StateEffect","Transaction","_doc","applyTransaction","ann","reconfigured","joinRanges","mergeTransaction","mapForA","mapForB","resolveTransactionInner","docSize","asArray","resolveTransaction","extenders","extendTransaction","filters","filterTransaction","remote","CharCategory","nonASCIISingleCaseWordChar","wordChar","makeCategorizer","Space","hasWordChar","Other","EditorState","startValues","replaceSelection","result1","newChanges","newMapped","mapBy","fieldInit","configuration","phrases","provider","combineConfig","kA","kB","k","RangeValue","Range","point","mapMode","cmpRange","Chunk","maxPoint","findIndex","startAt","lo","hi","diff","newFrom","newTo","RangeSet","chunkPos","nextLayer","isEmpty","updateSpec","LayerCursor","spill","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPointSize","sharedChunks","findSharedChunks","sideA","SpanCursor","sideB","sameValues","spans","openRanges","openStart","activeForPoint","openCount","pointFrom","pointRank","openEnd","lazySort","layer","finishChunk","newArrays","chunkStart","setMaxPoint","lastFrom","lastTo","inA","shared","minPoint","gotoInner","setRangeIndex","heap","heapBubble","childIndex","activeTo","activeRank","minActive","removeActive","findMinIndex","addActive","trackOpen","wasPoint","nextVal","reverse","startA","startB","dPos","clipEnd","comparePoint","compareRange","array","foundPos","findColumn","DefaultBufferLength","nextPropID","NodeProp","perNode","NodeType","group","contextHash","lookAhead","MountedTree","noProps","isAnonymous","groups","NodeSet","newTypes","newProps","CachedNode","CachedInnerNode","IterMode","Tree","TreeCursor","cursorAt","moveTo","_tree","TreeNode","resolveNode","layers","iterStack","stackIterator","leave","anon","entered","propValues","balance","balanceRange","makeTree","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","lookAheadAtStart","contextAtStart","findBufferSize","Uint16Array","endPos","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","make","makeBalanced","nodeCount","lookAheadProp","lastI","pair","maxSize","fork","minStart","nodeSize","localSkipped","startIndex","topID","buildTree","childString","endIndex","findChild","pick","checkSide","endI","overlays","IgnoreOverlays","BaseNode","matchNodeContext","_parent","nextChild","BufferNode","BufferContext","hasChild","IgnoreMounts","rPos","nextSignificantParent","toTree","externalSibling","heads","picked","newHeads","StackIterator","bufferNode","yieldNode","yieldBuf","enterChild","sibling","atLastNode","move","mustLeave","nodeSizeCache","balanceType","mkTop","mkTree","maxChild","ceil","divide","groupFrom","groupStart","groupSize","nextSize","NodeWeakMap","setBuffer","getBuffer","cursorSet","cursorGet","TreeFragment","partial","minGap","fI","nextF","cI","nextC","nextPos","cut","fFrom","fTo","Parser","StringInput","parseMixed","nest","MixedParse","InnerParse","checkRanges","ActiveOverlay","predicate","mounts","stoppedInner","innerDone","baseTree","baseParse","startInner","fragmentCursor","FragmentCursor","covered","isCovered","hasNode","frag","checkCover","materialize","oldMounts","findMounts","punchRanges","enterFragments","sliceBuf","newStack","innerOffset","stackPos","targetI","StructureCursor","fragI","curFrag","nextFrag","gapFrom","gapTo","findCoverChanges","inB","nextA","nextB","nextTagID","Tag","modified","nameOrParent","defineModifier","Modifier","nextModifierID","instances","mods","exists","powerSet","styleTags","byName","pieces","rule","Rule","ruleNodeProp","opaque","inherit","tagHighlighter","tagClass","highlightTree","putStyle","HighlightBuilder","highlightRange","startSpan","inheritedClass","h","getStyleTags","tagCls","highlightTags","innerHighlighters","rangeFrom","rangeTo","docComment","docString","integer","float","typeOperator","controlOperator","heading1","heading2","heading3","heading4","heading5","heading6","monospace","Stack","reducePos","bufferBase","curContext","StackContext","pushState","lookaheadRecord","setLookAhead","dPrec","dynamicPrecedence","getGoto","minRepeatTerm","storeNode","reduceContext","lastBigReductionStart","bigReductionCount","lastBigReductionSize","count","stateFlag","baseStateID","mustSink","mustMove","shiftContext","maxNode","nextState","nextStart","nextEnd","useNode","updateContext","tracker","stream","recoverByDelete","isNode","SimulatedStack","stateSlot","hasAction","recoverByInsert","nextStates","best","forceReduce","validAction","backup","findForcedReduction","allActions","rDepth","forceAll","deadEnd","restart","sameState","dialectID","emitContext","emitLookAhead","StackBufferCursor","maybeNext","decodeArray","Type","out","stop","digit","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","readNext","resolveOffset","clipPos","resolved","endOffset","acceptTokenTo","getChunk","setDone","TokenGroup","readToken","tokenPrecTable","LocalTokenGroup","precTable","elseToken","ExternalTokenizer","precOffset","groupMask","accEnd","allows","overrides","findOffset","tableData","tableOffset","iPrev","verbose","LOG","stackIDs","cutAt","fragment","safeFrom","safeTo","trees","nextFragment","fr","nodeAt","TokenCache","mainToken","getActions","actionIndex","tokenizer","updateCachedToken","addActions","eofTerm","getMainToken","specializers","putAction","Parse","recovering","nextStackID","minStackPos","topTerm","stacks","bufferLength","stopped","stoppedTokens","newStacks","advanceStack","finished","findFinished","stackID","stackToTree","getName","SyntaxError","runRecovery","maxRemaining","strictCx","cxHash","defaultReduce","localStack","advanceFully","pushStackDedup","restarted","tokenEnd","forceBase","Dialect","ContextTracker","LRParser","wrappers","topTerms","setProp","nodeID","propSpec","tokenArray","specializerSpecs","getSpecializer","Uint32Array","termNames","parseDialect","w","loose","groupTag","terminal","flag","deflt","external","contextTracker","Uint8Array","ok","unreachable","emptyOptions","one","includeImageAlt","includeHtml","blankLine","tokenize","nok","factorySpace","POSITIVE_INFINITY","consume","exit","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","parameters","classifyCharacter","combineExtensions","syntaxExtension","hook","constructs","existing","normalizeIdentifier","resolveAll","events","called","nameRe","nameReJsx","normal","merge","definitions","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","DefinedInfo","own","transform","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","acceptCharset","accessKey","allowPaymentRequest","allowUserMedia","autoCapitalize","autoComplete","autoPlay","blocking","capture","charSet","colSpan","contentEditable","controlsList","crossOrigin","dateTime","decoding","dirName","download","encType","enterKeyHint","fetchPriority","formAction","formEncType","formMethod","formNoValidate","formTarget","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","loading","maxLength","minLength","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","playsInline","popover","popoverTarget","popoverTargetAction","referrerPolicy","rowSpan","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","spellCheck","srcDoc","srcLang","srcSet","typeMustMatch","useMap","writingSuggestions","aLink","archive","axis","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","face","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontSizeAdjust","fontStretch","fontVariant","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","calcMode","clipPathUnits","contentScriptType","contentStyleType","defaultAction","descent","diffuseConstant","direction","dur","divisor","dx","dy","edgeMode","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","order","orient","orientation","origin","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","transformBehavior","u1","u2","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","dash","cap","kebab","$0","camelcase","hastToReact","pointEnd","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","fatal","actual","expected","note","emptyMap","dashSomething","tableElements","tableCellElement","docs","toJsxRuntime","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","parentSchema","findComponentFromName","alignValue","createProperty","createElementProps","createChildren","thing","addNode","addChildren","estree","expression","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","isNaN","padRight","padLeft","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","computed","optional","toDash","$1","urlAttributes","SpliceBuffer","initial","setCursor","deleteCount","trunc","removed","chunkedPush","pushMany","unshiftMany","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","startPosition","startPositions","childEvents","gaps","previous","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","contentStart","attempt","contentInitial","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","eof","disable","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","notText","resolveAllLineSuffixes","extraResolver","bufferIndex","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","expectedCode","startBufferIndex","endBufferIndex","sliceChunks","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","factoryWhitespace","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","innerHTML","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","attention","attentionMarkers","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","decodeNumericCharacterReference","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","setextHeadingSlurpLineEnding","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","preprocess","combined","remarkParse","env","globalThis","serialized","$","unpair","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","lossy","valueOf","entries","toISOString","serializer","structuredClone","normalizeUri","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","suffix","listItemLoose","trimLines","trimLine","patch","applyData","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","listLoose","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","trimMarkdownSpaceStart","toHast","footnoteById","handlers","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","remarkRehype","destination","hastTree","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","middleware","wrapped","fnExpectsCallback","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","unmatchedSlash","startPart","startDot","preDotState","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","messages","stored","assertNonEmpty","assertPart","stem","fail","CallableInstance","proto","setPrototypeOf","Processor","Compiler","attachers","freezeIndex","frozen","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","assertCompiler","executor","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","visitor","parents","grandparent","matchObject","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","createTracker","subexit","safe","associationId","indentLines","containerFlow","blank","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","_1","unsafe","checkQuote","checkEmphasis","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","longestStreak","encode","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","singleTilde","EditMap","editMap","addImplementation","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","COUNT","SET","StyleModule","splitSelector","selectors","isKeyframes","isAt","keyframes","getRules","modules","setNonce","StyleSet","adoptedSet","adoptedStyleSheets","CSSStyleSheet","adopted","sheet","styleTag","insertRule","getAttribute","convert","castFactory","tests","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","factory","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","ie","keyName"],"sourceRoot":""}